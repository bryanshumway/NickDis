% !Tex root = dis.tex
%20
@article{Sweller1988,
    abstract = {{Considerable evidence indicates that domain specific knowledge in the form of schemas is the primary factor distinguishing experts from novices in problem-solving skill. Evidence that conventional problem-solving activity is not effective in schema acquisition is also accumulating. It is suggested that a major reason for the ineffectiveness of problem solving as a learning device, is that the cognitive processes required by the two activities overlap insufficiently, and that conventional problem solving in the form of means-ends analysis requires a relatively large amount of cognitive processing capacity which is consequently unavailable for schema acquisition. A computational model and experimental evidence provide support for this contention. Theoretical and practical implications are discussed.}},
    author = {Sweller, John},
    citeulike-article-id = {3938837},
    citeulike-linkout-0 = {http://dx.doi.org/10.1207/s15516709cog1202_4},
    day = {1},
    doi = {10.1207/s15516709cog1202_4},
    issn = {03640213},
    journal = {Cognitive Science},
    month = apr,
    number = {2},
    pages = {257--285},
    posted-at = {2018-08-13 10:33:46},
    priority = {2},
    publisher = {Lawrence Erlbaum Associates, Inc.},
    title = {{Cognitive Load During Problem Solving: Effects on Learning}},
    url = {http://dx.doi.org/10.1207/s15516709cog1202_4},
    volume = {12},
    year = {1988}
}

%103
@article{Gilbert2002,
    address = {New York, NY, USA},
    author = {Gilbert, Seth and Lynch, Nancy},
    citeulike-article-id = {14517293},
    citeulike-linkout-0 = {http://dx.doi.org/10.1145/564585.564601},
    citeulike-linkout-1 = {http://doi.acm.org/10.1145/564585.564601},
    doi = {10.1145/564585.564601},
    journal = {SIGACT News},
    keywords = {cap, distributed-systems},
    month = jun,
    number = {2},
    pages = {51--59},
    posted-at = {2018-01-16 00:25:46},
    priority = {2},
    publisher = {ACM},
    title = {{Brewer's Conjecture and the Feasibility of Consistent, Available, Partition-tolerant Web Services}},
    url = {http://doi.acm.org/10.1145/564585.564601},
    volume = {33},
    year = {2002}
}
%102
@article{Grahm2001,
    address = {http://www.paulgraham.com/avg.html},
    author = {Graham, Paul},
    citeulike-article-id = {14517277},
    citeulike-linkout-0 = {http://www.paulgraham.com/avg.html},
    posted-at = {2018-01-15 21:57:53},
    priority = {0},
    title = {{Beating the Averages}},
    url = {http://www.paulgraham.com/avg.html},
    year = 2001
}
%99
@article{Soloway1984,
    author = {Soloway, Elliot and Ehrlich, Kate},
    citeulike-article-id = {14517276},
    journal = {IEEE Transactions on software engineering},
    keywords = {expertise, programmer},
    number = {5},
    pages = {595--609},
    posted-at = {2018-01-15 21:53:05},
    priority = {2},
    publisher = {IEEE},
    title = {{Empirical studies of programming knowledge}},
    year = {1984}
}
%98
@inproceedings{Mastaglio1991,
    author = {Mastaglio, Thomas and Rieman, John},
    booktitle = {Proc. Empirical Studies of Programmers, Fourth Workshop},
    citeulike-article-id = {14517275},
    keywords = {expertise, lisp, programmer},
    pages = {177--195},
    posted-at = {2018-01-15 21:48:06},
    priority = {2},
    title = {{How experts infer novice programmer expertise: a protocol analysis of LISP code evaluation}},
    year = {1991}
}
%97
@electronic{Atwood2008,
    address = {https://blog.codinghorror.com/the-years-of-experience-myth/},
    author = {Atwood, Jeff},
    citeulike-article-id = {14517274},
    citeulike-linkout-0 = {https://blog.codinghorror.com/the-years-of-experience-myth/},
    posted-at = {2018-01-15 21:45:20},
    priority = {2},
    title = {{The Years of Experience Myth}},
    url = {https://blog.codinghorror.com/the-years-of-experience-myth/},
    year = {2008}
}
%96
@electronic{Carlson2014,
    address = {https://www.ctl.io/developers/blog/post/career-path-of-a-programmer/},
    author = {Carlson, Lucas},
    citeulike-article-id = {14517271},
    citeulike-linkout-0 = {https://www.ctl.io/developers/blog/post/career-path-of-a-programmer/},
    posted-at = {2018-01-15 21:38:03},
    priority = {2},
    title = {{Career Path of a Programmer}},
    url = {https://www.ctl.io/developers/blog/post/career-path-of-a-programmer/},
    year = {2014}
}
%92
@article{Chandler1992,
    author = {Chandler, Paul and Sweller, John},
    citeulike-article-id = {14516199},
    journal = {British Journal of Educational Psychology},
    keywords = {cognitive-load-theory},
    number = {2},
    pages = {233--246},
    posted-at = {2018-01-13 10:06:04},
    priority = {2},
    publisher = {Wiley Online Library},
    title = {{The split-attention effect as a factor in the design of instruction}},
    volume = {62},
    year = {1992}
}
%91
@article{Kalyuga2003,
    abstract = {{When new information is presented to learners, it must be processed in a severely limited working memory. Learning reduces working memory limitations by enabling the use of schemas, stored in long-term memory, to process information more efficiently. Several instructional techniques have been designed to facilitate schema construction and automation by reducing working memory load. Recently, however, strong evidence has emerged that the effectiveness of these techniques depends very much on levels of learner expertise. Instructional techniques that are highly effective with inexperienced learners can lose their effectiveness and even have negative consequences when used with more experienced learners. We call this phenomenon the expertise reversal effect. In this article, we review the empirical literature on the interaction between instructional techniques and levels of learner experience that led to the identification of the expertise reversal effect.}},
    author = {Kalyuga, Slava and Ayres, Paul and Chandler, Paul and Sweller, John},
    citeulike-article-id = {4035239},
    citeulike-linkout-0 = {http://dx.doi.org/10.1207/s15326985ep3801_4},
    citeulike-linkout-1 = {http://www.tandfonline.com/doi/abs/10.1207/S15326985EP3801_4},
    day = {1},
    doi = {10.1207/s15326985ep3801_4},
    journal = {Educational Psychologist},
    keywords = {cognitive-load-theory},
    month = mar,
    number = {1},
    pages = {23--31},
    posted-at = {2018-01-13 10:03:15},
    priority = {2},
    publisher = {Routledge},
    title = {{The Expertise Reversal Effect}},
    url = {http://dx.doi.org/10.1207/s15326985ep3801_4},
    volume = {38},
    year = {2003}
}
%89 %3
@electronic{Hastie2015,
    author = {Hastie, Shane and Wojewoda, St\'{e}phane},
    citeulike-article-id = {14516111},
    citeulike-linkout-0 = {https://www.infoq.com/articles/standish-chaos-2015},
    day = {4},
    journal = {InfoQ},
    keywords = {software-engineering},
    month = oct,
    posted-at = {2018-01-13 01:16:48},
    priority = {0},
    title = {{Standish Group 2015 Chaos Report - Q\&A with Jennifer Lynch}},
    url = {https://www.infoq.com/articles/standish-chaos-2015},
    year = {2015}
}
%88
@article{Jacobsen2009,
    author = {Jacobsen, Ivar and Meyer, Bertrand},
    citeulike-article-id = {14507873},
    journal = {Dr. Dobb's Journal},
    keywords = {software-engineering},
    posted-at = {2017-12-25 03:33:42},
    priority = {0},
    publisher = {TechWeb},
    title = {{Methods need theory}},
    year = {2009}
}
%87
@book{Alexander1979,
    author = {Alexander, Christopher},
    citeulike-article-id = {14468322},
    keywords = {design},
    posted-at = {2017-10-28 11:02:12},
    priority = {4},
    publisher = {New York: Oxford University Press},
    title = {{The timeless way of building}},
    volume = {1},
    year = {1979}
}
%86
@article{Choe2013,
    author = {Choe, Yong-Hwa and Jong, Chol-Yong and Han, Song},
    citeulike-article-id = {14461341},
    citeulike-linkout-0 = {https://arxiv.org/pdf/1304.0374.pdf},
    journal = {arXiv preprint arXiv:1304.0374},
    keywords = {cognitive, metrics, software},
    posted-at = {2017-10-20 00:25:40},
    priority = {0},
    title = {{Software cognitive information measure based on relation between structures}},
    url = {https://arxiv.org/pdf/1304.0374.pdf},
    year = {2013}
}
%85
@article{Brunken2003,
    author = {Brunken, Roland and Plass, Jan L. and Leutner, Detlev},
    citeulike-article-id = {14461339},
    citeulike-linkout-0 = {http://steinhardtapps.es.its.nyu.edu/create/courses/2174/reading/Bruenken_Plass_Leutner_EP.pdf},
    journal = {Educational psychologist},
    keywords = {cognitive-load, measurement},
    number = {1},
    pages = {53--61},
    posted-at = {2017-10-20 00:06:41},
    priority = {0},
    publisher = {Taylor \& Francis},
    title = {{Direct measurement of cognitive load in multimedia learning}},
    url = {http://steinhardtapps.es.its.nyu.edu/create/courses/2174/reading/Bruenken_Plass_Leutner_EP.pdf},
    volume = {38},
    year = {2003}
}
%84
@article{Paas1994,
    author = {Paas, Fred G. W. C. and Van Merri{\"{e}}nboer, Jeroen J. G. and Adam, Jos J.},
    citeulike-article-id = {14461338},
    citeulike-linkout-0 = {https://www.researchgate.net/profile/Fred_Paas/publication/15390085_Measurement_of_cognitive_load_in_instructional_research/links/55ad2fdb08ae98e661a41759/Measurement-of-cognitive-load-in-instructional-research.pdf},
    journal = {Perceptual and motor skills},
    keywords = {cognitive-load, measurement},
    number = {1},
    pages = {419--430},
    posted-at = {2017-10-20 00:00:30},
    priority = {0},
    publisher = {SAGE Publications Sage CA: Los Angeles, CA},
    title = {{Measurement of cognitive load in instructional research}},
    url = {https://www.researchgate.net/profile/Fred_Paas/publication/15390085_Measurement_of_cognitive_load_in_instructional_research/links/55ad2fdb08ae98e661a41759/Measurement-of-cognitive-load-in-instructional-research.pdf},
    volume = {79},
    year = {1994}
}
%81
@book{Pugh2006,
    author = {Pugh, Ken},
    citeulike-article-id = {14460847},
    keywords = {software-architecture, software-design},
    posted-at = {2017-10-18 23:56:38},
    priority = {0},
    publisher = {Pragmatic Bookshelf},
    title = {{Interface-Oriented Design (Pragmatic Programmers)}},
    year = {2006}
}
%71
@article{Rosson1990,
    address = {Hillsdale, NJ, USA},
    author = {Rosson, Mary B. and Alpert, Sherman R.},
    citeulike-article-id = {14460233},
    citeulike-linkout-0 = {http://dx.doi.org/10.1207/s15327051hci0504_1},
    doi = {10.1207/s15327051hci0504_1},
    journal = {Hum.-Comput. Interact.},
    keywords = {cognitive, object-oriented-design},
    month = dec,
    number = {4},
    pages = {345--379},
    posted-at = {2017-10-18 07:53:09},
    priority = {2},
    publisher = {L. Erlbaum Associates Inc.},
    title = {{The Cognitive Consequences of Object-oriented Design}},
    url = {http://dx.doi.org/10.1207/s15327051hci0504_1},
    volume = {5},
    year = {1990}
}
%70
@inproceedings{Kim1992,
    address = {New York, NY, USA},
    author = {Kim, Jinwoo and Lerch, F. Javier},
    booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
    citeulike-article-id = {14460232},
    citeulike-linkout-0 = {http://dx.doi.org/10.1145/142750.142905},
    citeulike-linkout-1 = {http://doi.acm.org/10.1145/142750.142905},
    doi = {10.1145/142750.142905},
    keywords = {cognitive, decomposition, design, functional, functional-programming, induction, mental, object-oriented, object-oriented-programming, rule, simulation},
    location = {Monterey, California, USA},
    pages = {489--498},
    posted-at = {2017-10-18 07:51:52},
    priority = {2},
    publisher = {ACM},
    series = {CHI '92},
    title = {{Towards a Model of Cognitive Process in Logical Design: Comparing Object-oriented and Traditional Functional Decomposition Software Methodologies}},
    url = {http://doi.acm.org/10.1145/142750.142905},
    year = {1992}
}
%68
@article{Kay1993,
    address = {New York, NY, USA},
    author = {Kay, Alan C.},
    citeulike-article-id = {14460220},
    citeulike-linkout-0 = {http://dx.doi.org/10.1145/155360.155364},
    citeulike-linkout-1 = {http://doi.acm.org/10.1145/155360.155364},
    doi = {10.1145/155360.155364},
    journal = {SIGPLAN Not.},
    keywords = {object-oriented-programming},
    month = mar,
    number = {3},
    pages = {69--95},
    posted-at = {2017-10-18 07:30:00},
    priority = {0},
    publisher = {ACM},
    title = {{The Early History of Smalltalk}},
    url = {http://doi.acm.org/10.1145/155360.155364},
    volume = {28},
    year = {1993}
}

@article{Floyd1979,
    author = {Floyd, Robert W.},
    citeulike-article-id = {14460170},
    journal = {Communications of the ACM},
    keywords = {programming, programming-paradigms},
    number = {8},
    pages = {455--460},
    posted-at = {2017-10-18 06:18:57},
    priority = {0},
    publisher = {ACM},
    title = {{The paradigms of programming}},
    volume = {22},
    year = {1979}
}

@book{Kernighan1988,
    author = {Kernighan, Brian W. and Ritchie, Dennis M.},
    citeulike-article-id = {14460055},
    keywords = {language, programming},
    posted-at = {2017-10-17 17:12:24},
    priority = {2},
    title = {{The C programming language}},
    year = {1988}
}
%64
@misc{Dijkstra1972,
    author = {Dijkstra, E. W.},
    citeulike-article-id = {14460046},
    keywords = {programming, structured-programming},
    posted-at = {2017-10-17 16:51:22},
    priority = {2},
    publisher = {Academic press},
    title = {{Notes on structured programming. 1969, appeared in OJ Dahl, EW Dijkstra, and CAR Hoare (eds): Structured Programming}},
    year = {1972}
}
%69
@article{White2005,
    abstract = {{Software development is moving from procedural programming towards object-oriented programming (OOP). Past studies in cognitive aspects of programming have focused primarily on procedural programming languages. Object-oriented programming is a new paradigm for computing. Industry is finding that programmers are having difficulty shifting to this new programming paradigm. Findings in prior research revealed that procedural programming requires Piaget's formal operation cognitive level. New from this research is that OOP also requires Piaget's formal operation cognitive level. Also new is that OOP appears to be unrelated to hemispheric cognitive style. OOP appears to be hemispheric style friendly, while procedural programming is preferential to left hemispheric cognitive style. The conclusion is that cognitive requirements are not the cause for the difficulty in shifting from procedural to OOP. An alternative possibility to the difficulty is proactive interference of learning procedural programming prior to learning object oriented programming.}},
    address = {Boston},
    author = {White, Garry and Sivitanides, Marcos},
    citeulike-article-id = {14460038},
    journal = {Information Technology and Management},
    keywords = {cognitive, development, object, oriented, procedural, programming, style, *file-import-17-10-17},
    month = oct,
    number = {4},
    pages = {333--350},
    posted-at = {2017-10-17 16:17:14},
    priority = {4},
    publisher = {Kluwer Academic Publishers},
    title = {{Cognitive Differences Between Procedural Programming and Object Oriented Programming}},
    volume = {6},
    year = {2005}
}
%62
@article{Sweller1991,
    author = {Sweller, John and Chandler, Paul},
    citeulike-article-id = {14459807},
    journal = {Cognition and instruction},
    keywords = {cognitive-load-theory},
    number = {4},
    pages = {351--362},
    posted-at = {2017-10-17 07:21:17},
    priority = {2},
    publisher = {Taylor \& Francis},
    title = {{Evidence for cognitive load theory}},
    volume = {8},
    year = {1991}
}
%61
@article{Tarmizi1988,
    author = {Tarmizi, Rohani A. and Sweller, John},
    citeulike-article-id = {14459805},
    journal = {Journal of educational psychology},
    keywords = {*file-import-17-10-17},
    number = {4},
    pages = {424},
    posted-at = {2017-10-17 07:16:38},
    priority = {2},
    publisher = {American Psychological Association},
    title = {{Guidance during mathematical problem solving.}},
    volume = {80},
    year = {1988}
}
%60
@article{Baddeley2003,
    author = {Baddeley, Alan},
    citeulike-article-id = {14459798},
    citeulike-linkout-0 = {https://labs.wsu.edu/attention-perception-performance/documents/2016/05/baddeley_review_2003.pdf},
    journal = {Nature Reviews. Neuroscience},
    keywords = {*file-import-17-10-17},
    number = {10},
    pages = {829},
    posted-at = {2017-10-17 07:00:38},
    priority = {2},
    publisher = {Nature Publishing Group},
    title = {{Working memory: looking back and looking forward}},
    url = {https://labs.wsu.edu/attention-perception-performance/documents/2016/05/baddeley_review_2003.pdf},
    volume = {4},
    year = {2003}
}
%72
@inproceedings{Douce2008,
    abstract = {{Keywords: POP-II.B. program comprehension, POP-V.A. short-term memory Program comprehension is perhaps one of the oldest topics within the psychology of programming. It addresses a central issue: how programmers work with and manipulate source code to construct effective software systems. Models can play an important role in understanding the challenges developers and engineers contend with. This paper presents a model of program comprehension, or code cognition, which has been derived from literature found within the disciplines of computing and psychology. Drawing on direct experimentation, this paper argues that a model of code cognition should take account of the visual, spatial and linguistic abilities of developers. The strengths and weaknesses of this model are discussed and further research directions presented. 1.}},
    author = {Douce, Christopher},
    booktitle = {In Programmer Psychology Interest Group},
    citeulike-article-id = {13414121},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.222.9075},
    keywords = {cognitive, programming},
    posted-at = {2014-10-31 02:15:28},
    priority = {0},
    title = {{The stores model of code cognition}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.222.9075},
    year = {2008}
}

@inproceedings{Buse2008,
    abstract = {{In this paper, we explore the concept of code readability and investigate its relation to software quality. With data collected from human annotators, we derive associations between a simple set of local code features and human notions of readability. Using those features, we construct an automated readability measure and show that it can be 80\% effective, and better than a human on average, at predicting readability judgments. Furthermore, we show that this metric correlates strongly with two traditional measures of software quality, code changes and defect reports. Finally, we discuss the implications of this study on programming language design and engineering practice. For example, our data suggests that comments, in of themselves, are less important than simple blank lines to local judgments of readability.}},
    address = {New York, NY, USA},
    author = {Buse, Raymond P. L. and Weimer, Westley R.},
    booktitle = {Proceedings of the 2008 International Symposium on Software Testing and Analysis},
    citeulike-article-id = {7796237},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1390630.1390647},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1390630.1390647},
    doi = {10.1145/1390630.1390647},
    isbn = {978-1-60558-050-0},
    keywords = {metrics, readability, software-engineering},
    location = {Seattle, WA, USA},
    pages = {121--130},
    posted-at = {2014-10-31 01:54:49},
    priority = {0},
    publisher = {ACM},
    series = {ISSTA '08},
    title = {{A Metric for Software Readability}},
    url = {http://dx.doi.org/10.1145/1390630.1390647},
    year = {2008}
}

@article{Riaz2009,
    abstract = {{This paper presents the results of a systematic review conducted to collect evidence on software maintainability prediction and metrics. The study was targeted at the software quality attribute of maintainability as opposed to the process of software maintenance. The evidence was gathered from the selected studies against a set of meaningful and focused questions. 710 studies were initially retrieved; however of these only 15 studies were selected; their quality was assessed; data extraction was performed; and data was synthesized against the research questions. Our results suggest that there is little evidence on the effectiveness of software maintainability prediction techniques and models.}},
    address = {Washington, DC, USA},
    author = {Riaz, Mehwish and Mendes, Emilia and Tempero, Ewan},
    booktitle = {Empirical Software Engineering and Measurement, 2009. ESEM 2009. 3rd International Symposium on},
    citeulike-article-id = {8505755},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1671283},
    citeulike-linkout-1 = {http://doi.ieeecomputersociety.org/10.1109/ESEM.2009.5314233},
    citeulike-linkout-2 = {http://dx.doi.org/10.1109/esem.2009.5314233},
    citeulike-linkout-3 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5314233},
    day = {15},
    doi = {10.1109/esem.2009.5314233},
    isbn = {978-1-4244-4842-5},
    issn = {1938-6451},
    keywords = {metrics, software-engineering},
    month = oct,
    pages = {367--377},
    posted-at = {2014-10-31 01:31:58},
    priority = {0},
    publisher = {IEEE},
    series = {ESEM '09},
    title = {{A systematic review of software maintainability prediction and metrics}},
    url = {http://dx.doi.org/10.1109/esem.2009.5314233},
    year = {2009}
}

@article{Coleman1994,
    abstract = {{Software metrics have been much criticized in the last few years, sometimes justly but more often unjustly, because critics misunderstand the intent behind the technology. Software complexity metrics, for example, rarely measure the "inherent complexity" embedded in software systems, but they do a very good job of comparing the relative complexity of one portion of a system with another. In essence, they are good modeling tools. Whether they are also good measuring tools depends on how consistently and appropriately they are applied.}},
    address = {Los Alamitos, CA, USA},
    author = {Coleman, D. and Ash, D. and Lowther, B. and Oman, P.},
    citeulike-article-id = {3497393},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=618988.620034},
    citeulike-linkout-1 = {http://doi.ieeecomputersociety.org/10.1109/2.303623},
    citeulike-linkout-2 = {http://dx.doi.org/10.1109/2.303623},
    citeulike-linkout-3 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=303623},
    doi = {10.1109/2.303623},
    institution = {Software Eng. Lab., Idaho Univ., Moscow, ID, USA},
    issn = {0018-9162},
    journal = {Computer},
    keywords = {metrics, software-engineering},
    month = aug,
    number = {8},
    pages = {44--49},
    posted-at = {2014-10-31 01:01:19},
    priority = {2},
    publisher = {IEEE},
    title = {{Using metrics to evaluate software system maintainability}},
    url = {http://dx.doi.org/10.1109/2.303623},
    volume = {27},
    year = {1994}
}

@book{Jones2011,
    author = {Jones, Capers and Bonsignour, Olivier},
    citeulike-article-id = {11451737},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0132582201},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0132582201},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0132582201},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0132582201},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0132582201/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0132582201},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0132582201},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0132582201},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0132582201&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0132582201},
    day = {03},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0132582201},
    keywords = {software-engineering},
    month = aug,
    posted-at = {2014-10-31 00:09:48},
    priority = {3},
    publisher = {Addison-Wesley Professional},
    title = {{The Economics of Software Quality}},
    url = {http://www.worldcat.org/isbn/0132582201},
    year = {2011}
}

@electronic{Young2007,
    abstract = {{Software configuration can ease the pain—or be a source of it.}},
    author = {Young, Terry},
    citeulike-article-id = {13413925},
    citeulike-linkout-0 = {http://msdn.microsoft.com/en-us/library/bb896744.aspx},
    institution = {Skyscrapr},
    keywords = {software-engineering},
    month = jun,
    posted-at = {2014-10-30 23:48:11},
    priority = {2},
    publisher = {Microsoft},
    title = {{Manageability, Maintainability, and Supportability}},
    url = {http://msdn.microsoft.com/en-us/library/bb896744.aspx},
    year = {2007}
}

@electronic{Crouch2012,
    abstract = {{Software always needs new features or bug fixes. Maintainable software is easy to extend and fix, which encourages the software's uptake and use. The Software Sustainability Institute can advise you on the design and development of maintainable software that will benefit both you and your users.}},
    author = {Crouch, Steve},
    citeulike-article-id = {13413907},
    citeulike-linkout-0 = {http://software.ac.uk/resources/guides/developing-maintainable-software},
    day = {6},
    keywords = {software-engineering},
    month = dec,
    posted-at = {2014-10-30 23:37:14},
    priority = {0},
    publisher = {The Software Sustainability Institute},
    title = {{Developing maintainable software}},
    url = {http://software.ac.uk/resources/guides/developing-maintainable-software},
    year = {2012}
}

@techreport{Johnson,
    abstract = {{By designing software products that are maintainable we can update
and enhance fielded software much faster and at lower cost. Software
can be reused, thus alleviating costly update time. Also, any faults
found in the software can be easily diagnosed and corrected, reducing
downtime and meeting delivery schedules. Software maintainability
ensures system availability by reducing system downtime}},
    author = {Johnson Space Center JSC},
    citeulike-article-id = {13413810},
    citeulike-linkout-0 = {https://oce.jpl.nasa.gov/practices/dfe6.pdf},
    keywords = {architecture, design, software-engineering},
    posted-at = {2014-10-30 22:20:47},
    priority = {0},
    title = {{Software Design for Maintainability}},
    url = {https://oce.jpl.nasa.gov/practices/dfe6.pdf}
}

@article{Rosene1981,
    author = {Rosene, A. F. and Connolly, J. E. and Bracy, K. M.},
    citeulike-article-id = {13413803},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/tr.1981.5221065},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5221065},
    doi = {10.1109/tr.1981.5221065},
    institution = {GTE Products Corp., 360 First Avenue; Needham Heights, Massachusetts 02194 USA.},
    issn = {0018-9529},
    journal = {Reliability, IEEE Transactions on},
    keywords = {software-engineering},
    month = aug,
    number = {3},
    pages = {240--245},
    posted-at = {2014-10-30 22:11:36},
    priority = {2},
    publisher = {IEEE},
    title = {{Software Maintainability - What It Means and How to Achieve It}},
    url = {http://dx.doi.org/10.1109/tr.1981.5221065},
    volume = {R-30},
    year = {1981}
}

@electronic{citeulike:13413801,
    citeulike-article-id = {13413801},
    citeulike-linkout-0 = {http://www.mitre.org/publications/systems-engineering-guide/acquisition-systems-engineering/integrated-logistics-support/reliability-availability-and-maintainability},
    keywords = {software-engineering},
    organization = {The MITRE Corporation},
    posted-at = {2014-10-30 22:06:36},
    priority = {0},
    title = {{Reliability, Availability, and Maintainability}},
    url = {http://www.mitre.org/publications/systems-engineering-guide/acquisition-systems-engineering/integrated-logistics-support/reliability-availability-and-maintainability}
}

@inproceedings{citeulike:13413794,
    author = {Heitlager, I. and Kuipers, T. and Visser, J.},
    booktitle = {Quality of Information and Communications Technology, 2007. QUATIC 2007. 6th International Conference on the},
    citeulike-article-id = {13413794},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/quatic.2007.8},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4335232},
    doi = {10.1109/quatic.2007.8},
    institution = {Software Improvement Group, Amsterdam},
    isbn = {978-0-7695-2948-6},
    keywords = {software-engineering},
    pages = {30--39},
    posted-at = {2014-10-30 21:58:16},
    priority = {0},
    publisher = {IEEE},
    title = {{A Practical Model for Measuring Maintainability}},
    url = {http://dx.doi.org/10.1109/quatic.2007.8},
    year = {2007}
}

@phdthesis{klingner2010measuring,
    author = {Klingner, Jeffrey M.},
    citeulike-article-id = {13413166},
    keywords = {cognitive-load-theory, eye-tracking},
    posted-at = {2014-10-30 11:04:07},
    priority = {2},
    school = {Stanford University},
    title = {{Measuring cognitive load during visual tasks by combining pupillometry and eye tracking}},
    year = {2010}
}

@article{citeulike:13413161,
    author = {Wang, Qiuzhen and Yang, Sa and Liu, Manlu and Cao, Zike and Ma, Qingguo},
    citeulike-article-id = {13413161},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/j.dss.2014.02.007},
    doi = {10.1016/j.dss.2014.02.007},
    issn = {01679236},
    journal = {Decision Support Systems},
    keywords = {cognitive-load-theory, eye-tracking},
    month = jun,
    pages = {1--10},
    posted-at = {2014-10-30 11:01:21},
    priority = {2},
    title = {{An eye-tracking study of website complexity from cognitive load perspective}},
    url = {http://dx.doi.org/10.1016/j.dss.2014.02.007},
    volume = {62},
    year = {2014}
}

@inproceedings{citeulike:13413152,
    abstract = {{The methodology of eye tracking has been gradually making its way into various fields of science, assisted by the diminishing cost of the associated technology. In an international collaboration to open up the prospect of eye movement research for programming educators, we present a case study on program comprehension and preliminary analyses together with some useful tools. The main contributions of this paper are (1) an introduction to eye tracking to study programmers; (2) an approach that can help elucidate how novices learn to read and understand programs and to identify improvements to teaching and tools; (3) a consideration of data analysis methods and challenges, along with tools to address them; and (4) some larger computing education questions that can be addressed (or revisited) in the context of eye tracking.}},
    address = {New York, NY, USA},
    author = {Busjahn, Teresa and Schulte, Carsten and Sharif, Bonita and Simon and Begel, Andrew and Hansen, Michael and Bednarik, Roman and Orlov, Paul and Ihantola, Petri and Shchekotova, Galina and Antropova, Maria},
    booktitle = {Proceedings of the Tenth Annual Conference on International Computing Education Research},
    citeulike-article-id = {13413152},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=2632344},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/2632320.2632344},
    doi = {10.1145/2632320.2632344},
    isbn = {978-1-4503-2755-8},
    keywords = {eye-tracking, programming},
    location = {Glasgow, Scotland, United Kingdom},
    pages = {3--10},
    posted-at = {2014-10-30 10:51:12},
    priority = {0},
    publisher = {ACM},
    series = {ICER '14},
    title = {{Eye Tracking in Computing Education}},
    url = {http://dx.doi.org/10.1145/2632320.2632344},
    year = {2014}
}

@inproceedings{citeulike:13413150,
    abstract = {{Source Code Summarization is an emerging technology for automatically generating brief descriptions of code. Current summarization techniques work by selecting a subset of the statements and keywords from the code, and then including information from those statements and keywords in the summary. The quality of the summary depends heavily on the process of selecting the subset: a high-quality selection would contain the same statements and keywords that a programmer would choose. Unfortunately, little evidence exists about the statements and keywords that programmers view as important when they summarize source code. In this paper, we present an eye-tracking study of 10 professional Java programmers in which the programmers read Java methods and wrote English summaries of those methods. We apply the findings to build a novel summarization tool. Then, we evaluate this tool and provide evidence to support the development of source code summarization systems.}},
    address = {New York, NY, USA},
    author = {Rodeghero, Paige and McMillan, Collin and McBurney, Paul W. and Bosch, Nigel and D'Mello, Sidney},
    booktitle = {Proceedings of the 36th International Conference on Software Engineering},
    citeulike-article-id = {13413150},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=2568247},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/2568225.2568247},
    doi = {10.1145/2568225.2568247},
    isbn = {978-1-4503-2756-5},
    keywords = {cognition, eye-tracking, programming, software-engineering},
    location = {Hyderabad, India},
    pages = {390--401},
    posted-at = {2014-10-30 10:48:25},
    priority = {4},
    publisher = {ACM},
    series = {ICSE 2014},
    title = {{Improving Automated Source Code Summarization via an Eye-tracking Study of Programmers}},
    url = {http://dx.doi.org/10.1145/2568225.2568247},
    year = {2014}
}

@incollection{citeulike:13413145,
    abstract = {{Computer programming is a cognitively demanding task [127,257]. Programmers have to constantly apply their knowledge and skills to acquire and maintain a mental representation of a program. Modern programming environments (sometimes called integrated development environments (IDE)) often present, in several adjacent windows, the information related to the actual program. These windows often contain a variety of representations of the program (e.g. the program text or a visualization of program variables), all of which need to be taken into consideration by the programmer. Investigating a programmer's visual attention to these different representations can lead to insights about how programmers acquire the skill of program comprehension, which is considered to be the crux of successful computer programming. Research questions related to the role of visual attention during program comprehension might focus, for instance, on whether visual attention patterns differentiate good and poor comprehenders, or what are the specific features of a program text that skilled programmers attend while debugging a flawed program.}},
    author = {Bednarik, Roman and Randolph, Justus},
    booktitle = {Passive Eye Monitoring},
    citeulike-article-id = {13413145},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/978-3-540-75412-1_17},
    citeulike-linkout-1 = {http://link.springer.com/chapter/10.1007/978-3-540-75412-1_17},
    doi = {10.1007/978-3-540-75412-1_17},
    editor = {Hammoud, Riad I.},
    keywords = {cognition, eye-tracking, programming, software-engineering},
    pages = {373--386},
    posted-at = {2014-10-30 10:45:37},
    priority = {4},
    publisher = {Springer Berlin Heidelberg},
    series = {Signals and Commmunication Technologies},
    title = {{Studying Cognitive Processes in Computer Program Comprehension}},
    url = {http://dx.doi.org/10.1007/978-3-540-75412-1_17},
    year = {2008}
}
%21
@electronic{Hansen2013,
    author = {Hansen, Michael},
    citeulike-article-id = {13413134},
    citeulike-linkout-0 = {http://synesthesiam.com/posts/what-makes-code-hard-to-understand.html},
    keywords = {programming},
    posted-at = {2014-10-30 10:35:41},
    priority = {0},
    title = {{What Makes Code Hard to Understand?}},
    url = {http://synesthesiam.com/posts/what-makes-code-hard-to-understand.html},
    year = 2013
}

@electronic{citeulike:13413131,
    author = {Hansen, Michael},
    citeulike-article-id = {13413131},
    citeulike-linkout-0 = {http://synesthesiam.com/posts/modeling-how-programmers-read-code.html},
    keywords = {programming},
    posted-at = {2014-10-30 10:34:31},
    priority = {0},
    title = {{Modeling How Programmers Read Code}},
    url = {http://synesthesiam.com/posts/modeling-how-programmers-read-code.html}
}

@electronic{citeulike:13413130,
    author = {Holk, Eric},
    citeulike-article-id = {13413130},
    citeulike-linkout-0 = {http://blog.theincredibleholk.org/blog/2012/12/18/how-do-we-read-code/},
    posted-at = {2014-10-30 10:32:59},
    priority = {0},
    title = {{How do we read code?}},
    url = {http://blog.theincredibleholk.org/blog/2012/12/18/how-do-we-read-code/}
}

@electronic{citeulike:595391,
    abstract = {{Good software starts with a good design, and the subtitle of <I>Applying UML and Patterns</I>, "An Introduction to Object-Oriented Analysis and Design (OOA/D) and the Unified Process" reinforces that that's what this book is about.<p>  The first edition of <I>Applying UML and Patterns</I> became a standard. The second edition uses the unified process (UP) as the iterative process within which OOA/D is introduced, and extends the case study used in the first edition. Other changes have been made to reflect the growing consensus on the most effective ways to work with OOA/D and patterns.<p>  Although you will learn UML, this isn't what <I>Applying UML and Patterns</I> is all about. It's designed to teach you to think of software as a collection of objects with properties and to manipulate the relationships between them. This is far more profound.<p>  The case study enables Craig Larman to carry the design through to Java code. In practice, you will need a basic understanding of OO programming to benefit from <I>Applying UML and Patterns</I>, though you needn't know Java--you can implement the designs in the OO language of your choice with equal facility.<p>  When it comes right down to it, <I>Applying UML and Patterns</I> is all about providing you with a language in which to think about software design. This is quite different from learning a language in which to code a design.<p>  A facility with OOA/D will enable you to design and discuss programs independent of code, to produce more elegant and maintainable software, and to take a 30,000-foot view of the way your software interacts with the world. In effect, it can shift your viewpoint from that of a mechanic to that more sophisticated viewpoint of an engineer. Recommended. <I>--Steve Patient. Amazon.co.uk</I> } {This edition contains Larman's usual accurate and thoughtful writing. It  is a very good book made even better. -; Alistair Cockburn, author,  Writing Effective Use Cases and Surviving OO Projects Too few people have  a knack for explaining things. Fewer still have a handle on software  analysis and design. Craig Larman has both. -; John Vlissides, author,  Design Patterns and Pattern Hatching People often ask me which is the best book to introduce them to the world of OO design. Ever since I came across it Applying UML and Patterns has been my unreserved choice. -; Martin  Fowler, author, UML Distilled and Refactoring This book makes learning UML enjoyable and pragmatic by incrementally introducing it as an intuitive  language for specifying the artifacts of object analysis and design. It is a well written introduction to UML and object methods by an expert  practitioner. -; Cris Kobryn, Chair of the UML Revision Task Force and UML 2.0 Working Group A brand new edition of the world's most admired  introduction to object-oriented analysis and design with UML Fully updated for UML 2 and the latest iterative/agile practices Includes an all-new  case study illustrating many of the book's key points Applying UML and  Patterns is the world's \#1 business and college introduction to thinking  in objects -;and using that insight in real-world object-oriented analysis and design. Building on two widely acclaimed previous editions, Craig  Larman has updated this book to fully reflect the new UML 2 standard, to  help you master the art of object design, and to promote high-impact,  iterative, and skillful agile modeling practices. Developers and students  will learn object-oriented analysis and design (OOA/D) through three  iterations of two cohesive, start-to-finish case studies. These case  studies incrementally introduce key skills, essential OO principles and  patterns, UML notation, and best practices. You won't just learn UML  diagrams-;you'll learn how to apply UML in the context of OO software  development. Drawing on his unsurpassed experience as a mentor and  consultant, Larman helps you understand evolutionary requirements and use  cases, domain object modeling, responsibility-driven design, essential OO  design, layered architectures, Gang of Four design patterns, GRASP,  iterative methods, an agile approach to the Unified Process (UP), and much more. This edition's extensive improvements include A stronger focus on  helping you master OOA/D through case studies that demonstrate key OO  principles and patterns, while also applying the UML New coverage of UML  2, Agile Modeling, Test-Driven Development, and refactoring Many new tips  on combining iterative and evolutionary development with OOA/D Updates for easier study, including new learning aids and graphics New college  educator teaching resources Guidance on applying the UP in a light, agile  spirit, complementary with other iterative methods such as XP and Scrum  Techniques for applying the UML to documenting architectures A new chapter on evolutionary requirements, and much more Applying UML and Patterns,  Third Edition, is a lucid and practical introduction to thinking and  designing with objects-;and creating systems that are well crafted,  robust, and maintainable.  }},
    author = {Gamma, Erich},
    citeulike-article-id = {595391},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0131489062},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0131489062},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/672228057},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0131489062},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0131489062},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0131489062/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0131489062},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0131489062},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0131489062},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0131489062&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0131489062},
    day = {30},
    edition = {3},
    howpublished = {Hardcover},
    isbn = {9780131489066},
    keywords = {software-engineering},
    month = oct,
    posted-at = {2014-10-30 10:05:27},
    priority = {2},
    publisher = {Prentice Hall]},
    title = {{Design patterns elements of reusable object-oriented software}},
    url = {http://www.worldcat.org/isbn/0131489062},
    year = {2005}
}

@inproceedings{windell2007measuring,
    author = {Windell, D. and Wiebe, E. N.},
    booktitle = {Annual meeting of the American Educational Research Association, Chicago, IL},
    citeulike-article-id = {13413102},
    keywords = {cognitive-load-theory},
    posted-at = {2014-10-30 10:01:20},
    priority = {0},
    title = {{Measuring cognitive load in multimedia instruction: A comparison of two instruments}},
    year = {2007}
}

@article{banu2013software,
    author = {Banu, K. and Rama, N.},
    citeulike-article-id = {13413099},
    journal = {International Journal},
    keywords = {cognition, software-engineering},
    posted-at = {2014-10-30 09:56:09},
    priority = {0},
    title = {{Software Developers Performance relationship with Cognitive Load Using Statistical Measures}},
    year = {2013}
}
%83
@article{Paas2003,
    author = {Paas, Fred and Tuovinen, Juhani E. and Tabbers, Huib and Van Gerven, Pascal W. M.},
    citeulike-article-id = {13413090},
    journal = {Educational psychologist},
    keywords = {cognitive-load-theory},
    number = {1},
    pages = {63--71},
    posted-at = {2014-10-30 09:47:54},
    priority = {0},
    publisher = {Taylor \& Francis},
    title = {{Cognitive load measurement as a means to advance cognitive load theory}},
    volume = {38},
    year = {2003}
}

@article{citeulike:7116514,
    abstract = {{Application of physiological methods, in particular electroencephalography (EEG), offers new and promising approaches to educational psychology research. EEG is identified as a physiological index that can serve as an online, continuous measure of cognitive load detecting subtle fluctuations in instantaneous load, which can help explain effects of instructional interventions when measures of overall cognitive load fail to reflect such differences in cognitive processing. This paper presents a review of seminal literature on the use of continuous EEG to measure cognitive load and describes two case studies on learning from hypertext and multimedia that employed EEG methodology to collect and analyze cognitive load data.}},
    author = {Antonenko, Pavlo and Paas, Fred and Grabner, Roland and van Gog, Tamara},
    booktitle = {Educational Psychology Review},
    citeulike-article-id = {7116514},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/s10648-010-9130-y},
    citeulike-linkout-1 = {http://www.springerlink.com/content/l7n4k508p04xg620},
    citeulike-linkout-2 = {http://link.springer.com/article/10.1007/s10648-010-9130-y},
    day = {29},
    doi = {10.1007/s10648-010-9130-y},
    issn = {1040-726X},
    journal = {Educational Psychology Review},
    keywords = {cognitive-load-theory},
    month = apr,
    number = {4},
    pages = {425--438},
    posted-at = {2014-10-30 09:43:50},
    priority = {0},
    publisher = {Springer US},
    title = {{Using Electroencephalography to Measure Cognitive Load}},
    url = {http://dx.doi.org/10.1007/s10648-010-9130-y},
    volume = {22},
    year = {2010}
}

@article{gevins1998monitoring,
    author = {Gevins, Alan and Smith, Michael E. and Leong, Harrison and McEvoy, Linda and Whitfield, Susan and Du, Robert and Rush, Georgia},
    citeulike-article-id = {13413084},
    journal = {Human Factors: The Journal of the Human Factors and Ergonomics Society},
    keywords = {*file-import-14-10-30},
    number = {1},
    pages = {79--91},
    posted-at = {2014-10-30 09:40:53},
    priority = {2},
    publisher = {SAGE Publications},
    title = {{Monitoring working memory load during computer-based tasks with EEG pattern recognition methods}},
    volume = {40},
    year = {1998}
}

@article{citeulike:6304423,
    abstract = {{The purpose of this study was to determine the effect of leads (or hypertext node previews) on cognitive load and learning. Leads provided a brief summary of information in the linked node, which helped orient the reader to the linked information. Dependent variables included measures of cognitive load: self-report of mental effort, reading time, and event-related desynchronization percentage of alpha, beta and theta brain wave rhythms; and learning performance: a recall task, and tests of domain and structural knowledge. Results indicated that use of leads reduced brain wave activity that may reflect split attention and extraneous cognitive load, and improved domain and structural knowledge acquisition. Further, findings provide insights into differentiating the types of cognitive load apparent in hypertext-assisted learning environments. Use of EEG measures allowed examination of instantaneous cognitive load, which showed that leads may be influencing germane load—reducing mental burden associated with creating coherence between two linked node. The self-report of mental effort measure appears more closely associated with overall and intrinsic load.}},
    author = {Antonenko, Pavlo D. and Niederhauser, Dale S.},
    citeulike-article-id = {6304423},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/j.chb.2009.10.014},
    day = {30},
    doi = {10.1016/j.chb.2009.10.014},
    issn = {07475632},
    journal = {Computers in Human Behavior},
    keywords = {cognitive},
    month = mar,
    number = {2},
    pages = {140--150},
    posted-at = {2014-10-30 09:38:38},
    priority = {2},
    title = {{The influence of leads on cognitive load and learning in a hypertext environment}},
    url = {http://dx.doi.org/10.1016/j.chb.2009.10.014},
    volume = {26},
    year = {2010}
}

@electronic{citeulike:13413051,
    abstract = {{Does succinctness = power? This seems to me an important question, maybe the most important question for anyone interested in language design, and one that it would be useful to confront directly. I don't feel sure yet that the answer is a simple yes, but it seems a good hypothesis to begin with.}},
    author = {Graham, Paul A.},
    citeulike-article-id = {13413051},
    citeulike-linkout-0 = {http://www.paulgraham.com/power.html},
    keywords = {programming, software-engineering},
    month = may,
    posted-at = {2014-10-30 09:08:32},
    priority = {0},
    title = {{Succinctness is Power}},
    url = {http://www.paulgraham.com/power.html},
    year = {2002}
}

@inproceedings{citeulike:13413044,
    author = {Curry, Aino V.},
    booktitle = {QCon London 2010},
    citeulike-article-id = {13413044},
    citeulike-linkout-0 = {http://www.infoq.com/presentations/Functional-Design-Patterns},
    keywords = {design, functional, software-engineering},
    location = {London},
    posted-at = {2014-10-30 09:02:26},
    priority = {0},
    publisher = {QCon},
    title = {{Functional Design Patterns}},
    url = {http://www.infoq.com/presentations/Functional-Design-Patterns}
}
%80
@techreport{Dreyfus1980,
    author = {Dreyfus, Stuart E. and Dreyfus, Hubert L.},
    citeulike-article-id = {13413038},
    institution = {DTIC Document},
    keywords = {cognition, dreyfus-model},
    posted-at = {2014-10-30 08:52:34},
    priority = {3},
    title = {{A five-stage model of the mental activities involved in directed skill acquisition}},
    year = {1980}
}
%79
@inproceedings{Rist1986,
    abstract = {{An abstract is not available.}},
    address = {Norwood, NJ, USA},
    author = {Rist, Robert S.},
    booktitle = {Papers Presented at the First Workshop on Empirical Studies of Programmers on Empirical Studies of Programmers},
    citeulike-article-id = {13413035},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=28884},
    isbn = {0-89391-388-X},
    keywords = {cognition, programming},
    location = {Washington, D.C., USA},
    pages = {28--47},
    posted-at = {2014-10-30 08:49:41},
    priority = {2},
    publisher = {Ablex Publishing Corp.},
    title = {{Plans in Programming: Definition, Demonstration, and Development}},
    url = {http://portal.acm.org/citation.cfm?id=28884},
    year = {1986}
}
%77
@incollection{Ehlrich1984,
    abstract = {{An abstract is not available.}},
    address = {Norwood, NJ, USA},
    author = {Ehrlich, Kate and Soloway, Elliot},
    chapter = {An Empirical Investigation of the Tacit Plan Knowledge in Programming},
    citeulike-article-id = {13413022},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=823},
    editor = {Thomas, John C. and Schneider, Michael L.},
    isbn = {0-89391-146-1},
    keywords = {cognition, programming},
    pages = {113--133},
    posted-at = {2014-10-30 08:18:00},
    priority = {2},
    publisher = {Ablex Publishing Corp.},
    title = {{Human Factors in Computer Systems}},
    url = {http://portal.acm.org/citation.cfm?id=823},
    year = {1984}
}
%76
@article{Benner2004,
    abstract = {{Three studies using the Dreyfus model of skill acquisition were conducted over a period of 21 years. Nurses with a range of experience and reported skill-fulness were interviewed. Each study used nurses' narrative accounts of actual clinical situations. A subsample of participants were observed and interviewed at work. These studies extend the understanding of the Dreyfus model to complex, underdetermined, and fast-paced practices. The skill of involvement and the development of moral agency are linked with the development of expertise, and change as the practitioner becomes more skillful. Nurses who had some difficulty with understanding the ends of practice and difficulty with their skills of interpersonal and problem engagement did not progress to the level of expertise. Taken together, these studies demonstrate the usefulness of the Dreyfus model for understanding the learning needs and styles of learning at different levels of skill acquisition.}},
    author = {Benner, Patricia},
    citeulike-article-id = {1873428},
    citeulike-linkout-0 = {http://dx.doi.org/10.1177/0270467604265061},
    citeulike-linkout-1 = {http://bst.sagepub.com/content/24/3/188.abstract},
    citeulike-linkout-2 = {http://bst.sagepub.com/content/24/3/188.full.pdf},
    citeulike-linkout-3 = {http://bst.sagepub.com/cgi/content/abstract/24/3/188},
    day = {01},
    doi = {10.1177/0270467604265061},
    issn = {1552-4183},
    journal = {Bulletin of Science, Technology \& Society},
    keywords = {cognition, dreyfus-model},
    month = jun,
    number = {3},
    pages = {188--199},
    posted-at = {2014-10-30 08:11:49},
    priority = {2},
    publisher = {SAGE Publications},
    title = {{Using the Dreyfus Model of Skill Acquisition to Describe and Interpret Skill Acquisition and Clinical Judgment in Nursing Practice and Education}},
    url = {http://dx.doi.org/10.1177/0270467604265061},
    volume = {24},
    year = {2004}
}
%75
@article{Egan1979,
    abstract = {{Three experiments explored memory for symbolic circuit drawings using skilled electronics technicians and novice subjects. In the first experiment a skilled technician reconstructed circuit diagrams from memory. Recall showed marked  ” chunking”, or grouping, by functional units similar to Chess Masters' recall of chess positions. In the second experiment skilled technicians were able to recall more than were novice subjects following a brief exposure of the drawings. This advantage did not hold for randomly arranged symbols. In the third experiment the size of chunks retrieved systematically increased with additional study time. Supplementary analyses suggested that the chunking by skilled subjects was not an artifact of spatial proximity and chunk statistics, and that severe constraints are placed on any explanation of the data based on guessing. It is proposed that skilled subjects identify the conceptual category for an entire drawing, and retrieve elements using a generate-and-test process.}},
    author = {Egan, DennisE and Schwartz, BarryJ},
    booktitle = {Memory \& Cognition},
    citeulike-article-id = {13079688},
    citeulike-linkout-0 = {http://dx.doi.org/10.3758/bf03197595},
    citeulike-linkout-1 = {http://link.springer.com/article/10.3758/BF03197595},
    doi = {10.3758/bf03197595},
    keywords = {cognition},
    number = {2},
    pages = {149--158},
    posted-at = {2014-10-30 08:05:44},
    priority = {0},
    publisher = {Springer-Verlag},
    title = {{Chunking in recall of symbolic drawings}},
    url = {http://dx.doi.org/10.3758/bf03197595},
    volume = {7},
    year = {1979}
}
%74
@book{Degroot1968,
    author = {Degroot, Adriann},
    citeulike-article-id = {8294828},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/9027979146},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/9027979146},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/9027979146},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/9027979146},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/9027979146/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/9027979146},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/9027979146},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN9027979146},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=9027979146&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/9027979146},
    edition = {2nd},
    howpublished = {Hardcover},
    isbn = {9027979146},
    keywords = {cognition},
    posted-at = {2014-10-30 08:04:29},
    priority = {2},
    publisher = {Mouton De Gruyter},
    title = {{Thought and Choice in Chess (Psychological Studies)}},
    url = {http://www.worldcat.org/isbn/9027979146},
    year = 1968
}

@incollection{citeulike:784043,
    abstract = {{An abstract is not available.}},
    address = {Norwood, NJ, USA},
    author = {Gray, Wayne D. and Anderson, John R.},
    chapter = {Change-episodes in Coding: When and How Do Programmers Change Their Code?},
    citeulike-article-id = {784043},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=54980},
    editor = {Olson, Gary M. and Sheppard, Sylvia and Soloway, Elliot},
    isbn = {0-89391-461-4},
    keywords = {programming, software-engineering},
    pages = {185--197},
    posted-at = {2014-10-30 07:42:57},
    priority = {2},
    publisher = {Ablex Publishing Corp.},
    title = {{Empirical Studies of Programmers: Second Workshop}},
    url = {http://portal.acm.org/citation.cfm?id=54980},
    year = {1987}
}

@inproceedings{citeulike:4731541,
    abstract = {{An abstract is not available.}},
    address = {New York, NY, USA},
    author = {Koenemann, J\"{u}rgen and Robertson, Scott P.},
    booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
    citeulike-article-id = {4731541},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=108844.108863},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/108844.108863},
    doi = {10.1145/108844.108863},
    isbn = {0-89791-383-3},
    keywords = {psychology, software},
    location = {New Orleans, Louisiana, USA},
    pages = {125--130},
    posted-at = {2014-10-30 06:54:54},
    priority = {2},
    publisher = {ACM},
    series = {CHI '91},
    title = {{Expert Problem Solving Strategies for Program Comprehension}},
    url = {http://dx.doi.org/10.1145/108844.108863},
    year = {1991}
}

@techreport{atwood1978cognitive,
    author = {Atwood, Michael E. and Ramsey, H. Rudy},
    citeulike-article-id = {13412758},
    institution = {DTIC Document},
    keywords = {cognitive, programming},
    posted-at = {2014-10-30 00:23:49},
    priority = {2},
    title = {{Cognitive structures in the comprehension and memory of computer programs: An investigation of computer program debugging}},
    year = {1978}
}

@article{citeulike:2446040,
    abstract = {{The contributions of measurement and experimentation to the state of the art in software engineering are reviewed. The role of measurement in developing theoretical models is discussed, and concerns for reliability and validity are stressed. Current approaches to measuring software characteristics are presented as examples. In particular, software complexity metrics related to control flow, module interconnectedness, and Halstead's Software Science are discussed. The use of experimental methods in evaluating cause-effect relationships is also discussed. Example programs of experimental research which investigated conditional statements and control flow are reviewed. The conclusion argues that many advances in software engineering will be related to improvements in the measurement and experimental evaluation of software techniques and practices.}},
    author = {Curtis, B.},
    booktitle = {Proceedings of the IEEE},
    citeulike-article-id = {2446040},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/proc.1980.11813},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1456082},
    doi = {10.1109/proc.1980.11813},
    institution = {International Telephone and Telegraph Company, Stratford, CA},
    issn = {0018-9219},
    journal = {Proceedings of the IEEE},
    keywords = {software-engineering},
    number = {9},
    pages = {1144--1157},
    posted-at = {2014-10-30 00:16:01},
    priority = {2},
    publisher = {IEEE},
    title = {{Measurement and experimentation in software engineering}},
    url = {http://dx.doi.org/10.1109/proc.1980.11813},
    volume = {68},
    year = {1980}
}

@book{citeulike:382335,
    abstract = {{Software Design - Cognitive Aspects covers a variety of areas including software analysis, design, coding and maintenance. It details the history of the research that has been conducted since the 1970s in this fast-developing field before defining a computer program from a computing and cognitive psychology viewpoint. Detailed treatment is given to the two essential sides of programming; software production and software understanding and throughout the book parallels are drawn between studies on processing texts written in natural language and processing computer programs.This book will be of particular interest to researchers, practitioners and graduate students in Computer Science, Cognitive Psychology, and Cognitive Ergonomics.}},
    author = {Detienne, Francoise},
    citeulike-article-id = {382335},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/1852332530},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/1852332530},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/1852332530},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/1852332530},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/1852332530/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1852332530},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/1852332530},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN1852332530},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=1852332530&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/1852332530},
    day = {12},
    edition = {Softcover reprint of the original 1st ed. 2002},
    howpublished = {Paperback},
    isbn = {1852332530},
    keywords = {cognitive, design, software, software-engineering},
    month = oct,
    posted-at = {2014-10-30 00:04:30},
    priority = {0},
    publisher = {Springer},
    title = {{Software Design: Cognitive Aspects}},
    url = {http://www.worldcat.org/isbn/1852332530},
    year = {2001}
}

@electronic{citeulike:13406113,
    author = {Fowler, Martin},
    citeulike-article-id = {13406113},
    citeulike-linkout-0 = {http://martinfowler.com/bliki/UmlAsProgrammingLanguage.html},
    keywords = {uml},
    posted-at = {2014-10-23 13:29:38},
    priority = {0},
    title = {{UmlAsProgrammingLanguage}},
    url = {http://martinfowler.com/bliki/UmlAsProgrammingLanguage.html}
}

@electronic{citeulike:13406112,
    author = {Fowler, Martin},
    citeulike-article-id = {13406112},
    citeulike-linkout-0 = {http://martinfowler.com/bliki/UmlAsBlueprint.html},
    keywords = {uml},
    posted-at = {2014-10-23 13:28:44},
    priority = {0},
    title = {{UmlAsBlueprint}},
    url = {http://martinfowler.com/bliki/UmlAsBlueprint.html}
}

@electronic{citeulike:13406111,
    author = {Fowler, Martin},
    citeulike-article-id = {13406111},
    citeulike-linkout-0 = {http://martinfowler.com/bliki/UmlAsSketch.html},
    keywords = {uml},
    posted-at = {2014-10-23 13:27:50},
    priority = {0},
    title = {{UmlAsSketch}},
    url = {http://martinfowler.com/bliki/UmlAsSketch.html}
}

@book{citeulike:5785757,
    author = {Gamma, Erich and Beck, Kent},
    citeulike-article-id = {5785757},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321205758},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321205758},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321205758},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321205758},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321205758/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321205758},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321205758},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321205758},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321205758&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321205758},
    day = {30},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0321205758},
    keywords = {software-engineering},
    month = oct,
    posted-at = {2014-10-23 09:30:21},
    priority = {0},
    publisher = {Addison-Wesley Professional},
    title = {{Contributing to Eclipse: Principles, Patterns, and Plug-Ins}},
    url = {http://www.worldcat.org/isbn/0321205758},
    year = {2003}
}

@book{citeulike:1555342,
    abstract = {{How do the experts solve difficult problems in software development? In this unique and insightful book, leading computer scientists offer case studies that reveal how they found unusual, carefully designed solutions to high-profile projects. You will be able to look over the shoulder of major coding and design experts to see problems through their eyes.<br /> <br /> This is not simply another design patterns book, or another software engineering treatise on the right and wrong way to do things. The authors think aloud as they work through their project's architecture, the tradeoffs made in its construction, and when it was important to break rules. <em>Beautiful Code</em> is an opportunity for master coders to tell their story. All author royalties will be donated to Amnesty International.<br /> <br /> The book includes: <p>Chapter 1, <font color="red"><em>A Regular Expression Matcher</em></font>, by Brian Kernighan, shows how deep insight into a language and a problem can lead to a concise and elegant solution.</p> <p>Chapter 2, <font color="red"><em>Subversion's Delta Editor: Interface as Ontology</em></font>, by Karl Fogel, starts with a well-chosen abstraction and demonstrates its unifying effects on the system's further development.</p> <p>Chapter 3, <font color="red"><em>The Most Beautiful Code I Never Wrote</font></em>, by Jon Bentley, suggests how to measure a procedure without actually executing it.</p> <p>Chapter 4, <font color="red"><em>Finding Things</em></font>, by Tim Bray, draws together many strands in Computer Science in an exploration of a problem that is fundamental to many computing tasks.</p> <p>Chapter 5, <font color="red"><em>Correct, Beautiful, Fast (In That Order): Lessons From Designing XML Verifiers</em></font>, by Elliotte Rusty Harold, reconciles the often conflicting goals of thoroughness and good performance.</p> <p>Chapter 6, <font color="red"><em>Framework for Integrated Test: Beauty through Fragility</em></font>, by Michael Feathers, presents an example that breaks the rules and achieves its own elegant solution.</p> <p>Chapter 7, <font color="red"><em>Beautiful Tests</em></font>, by Alberto Savoia, shows how a broad, creative approach to testing can not only eliminate bugs but turn you into a better programmer.</p> <p>Chapter 8, <font color="red"><em>On-the-Fly Code Generation for Image Processing</em></font>, by Charles Petzold, drops down a level to improve performance while maintaining portability.</p> <p>Chapter 9, <font color="red"><em>Top-Down Operator Precedence</em></font>, by Douglas Crockford, revives an almost forgotten parsing technique and shows its new relevance to the popular JavaScript language.</p> <p>Chapter 10, <font color="red"><em>The Quest for an Accelerated Population Count</em></font>, by Henry S. Warren, Jr., reveals the impact that some clever algorithms can have on even a seemingly simple problem.</p> <p>Chapter 11, <font color="red"><em>Secure Communication: The Technology of Freedom</em></font>, by Ashish Gulhati, discusses the directed evolution of a secure messaging application that was designed to make sophisticated but often confusing cryptographic technology intuitively accessible to users.</p> <p>Chapter 12, <font color="red"><em>Growing Beautiful Code in BioPerl</em></font>, by Lincoln Stein, shows how the combination of a flexible language and a custom-designed module can make it easy for people with modest programming skills to create powerful visualizations for their data.</p> <p>Chapter 13, <font color="red"><em>The Design of the Gene Sorter</em></font>, by Jim Kent, combines simple building blocks to produce a robust and valuable tool for gene researchers.</p> <p>Chapter 14, <font color="red"><em>How Elegant Code Evolves With Hardware: The Case Of Gaussian Elimination</em></font>, by Jack Dongarra and Piotr Luszczek, surveys the history of LINPACK and related major software packages, to show how assumptions must constantly be re-evaluated in the face of new computing architectures.</p> <p>Chapter 15, <font color="red"><em>The Long-Term Benefits of Beautiful Design</em></font>, by Adam Kolawa, explains how attention to good design principles many decades ago helped CERN's widely used mathematical library (the predecessor of LINPACK) stand the test of time.</p> <p>Chapter 16, <font color="red"><em>The Linux Kernel Driver Model: The Benefits of Working Together</em></font>, by Greg Kroah-Hartman, explains how many efforts by different collaborators to solve different problems led to the successful evolution of a complex, multithreaded system.</p> <p>Chapter 17, <font color="red"><em>Another Level of Indirection</em></font>, by Diomidis Spinellis, shows how the flexibility and maintainability of the FreeBSD kernel is promoted by abstracting operations done in common by many drivers and filesystem modules.</p> <p>Chapter 18, <font color="red"><em>Python's Dictionary Implementation: Being All Things to All People</em></font>, by Andrew Kuchling, explains how a careful design combined with accommodations for a few special cases allows a language feature to support many different uses.</p> <p>Chapter 19, <font color="red"><em>Multi-Dimensional Iterators in NumPy</em></font>, by Travis E. Oliphant, takes you through the design steps that succeed in hiding complexity under a simple interface.</p> <p>Chapter 20, <font color="red"><em>A Highly Reliable Enterprise System for NASA's Mars Rover Mission</em></font>, by Ronald Mak, uses industry standards, best practices, and Java technologies to meet the requirements of a NASA expedition where reliability cannot be in doubt.</p> <p>Chapter 21, <font color="red"><em>ERP5: Designing for Maximum Adaptability</em></font>, by Rogerio Atem de Carvalho and Rafael Monnerat, shows how a powerful ERP system can be developed with free software tools and a flexible architecture.</p> <p>Chapter 22, <font color="red"><em>A Spoonful of Sewage</em></font>, by Bryan Cantrill, lets the reader accompany the author through a hair-raising bug scare and a clever solution that violated expectations.</p> <p>Chapter 23, <font color="red"><em>Distributed Programming with MapReduce</em></font>, by Jeff Dean and Sanjay Ghemawat, describes a system that provides an easy-to-use programming abstraction for large-scale distributed data processing at Google that automatically handles many difficult aspects of distributed computation, including automatic parallelization, load balancing, and failure handling.</p> <p>Chapter 24, <font color="red"><em>Beautiful Concurrency</em></font>, by Simon Peyton Jones, removes much of the difficulty of parallel program through Software Transactional Memory, demonstrated here using Haskell.</p> <p>Chapter 25, <font color="red"><em>Syntactic Abstraction: The syntax-case Expander</em></font>, by Kent Dybvig, shows how macros-a key feature of many languages and systems-can be protected in Scheme from producing erroneous output.</p> <p>Chapter 26, <font color="red"><em>Labor-Saving Architecture: An Object-Oriented Framework for Networked Software</em></font>, by William Otte and Douglas C. Schmidt, applies a range of standard object-oriented design techniques, such as patterns and frameworks, to distributed logging to keep the system flexible and modular.</p> <p>Chapter 27, <font color="red"><em>Integrating Business Partners the RESTful Way</em></font>, by Andrew Patzer, demonstrates a designer's respect for his programmers by matching the design of a B2B web service to its requirements.</p> <p>Chapter 28, <font color="red"><em>Beautiful Debugging</em></font>, by Andreas Zeller, shows how a disciplined approach to validating code can reduce the time it takes to track down errors.</p> <p>Chapter 29, <font color="red"><em>Treating Code as an Essay</em></font>, by Yukihiro Matsumoto, lays out some challenging principles that drove his design of the Ruby programming language, and that, by extension, will help produce better software in general.</p> <p>Chapter 30, <font color="red"><em>When a Button Is All That Connects You to the World</em></font>, by Arun Mehta, takes you on a tour through the astounding interface design choices involved in a text editing system that allow people with severe motor disabilities, like Professor Stephen Hawking, to communicate via a computer.</p> <p>Chapter 31, <font color="red"><em>Emacspeak: The Complete Audio Desktop</em></font>, by TV Raman, shows how Lisp's advice facility can be used with Emacs to address a general need-generating rich spoken output-that cuts across all aspects of the Emacs environment, without modifying the underlying source code of a large software system.</p> <p>Chapter 32, <font color="red"><em>Code in Motion</em></font>, by Laura Wingerd and Christopher Seiwald, lists some simple rules that have unexpectedly strong impacts on programming accuracy.</p> <p>Chapter 33, <font color="red"><em>Writing Programs for "The Book,"</em></font> by Brian Hayes, explores the frustrations of solving a seemingly simple problem in computational geometry, and its surprising resolution. </p>}},
    citeulike-article-id = {1555342},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0596510047},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0596510047},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0596510047},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0596510047},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0596510047/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0596510047},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0596510047},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0596510047},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0596510047&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0596510047},
    day = {06},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0596510047},
    keywords = {software-engineering},
    month = jul,
    posted-at = {2014-10-23 09:29:11},
    priority = {4},
    publisher = {O'Reilly Media},
    title = {{Beautiful Code: Leading Programmers Explain How They Think (Theory in Practice (O'Reilly))}},
    url = {http://www.worldcat.org/isbn/0596510047},
    year = {2007}
}

@book{citeulike:8259390,
    author = {Oram, Andy and Wilson, Greg},
    citeulike-article-id = {8259390},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0596808321},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0596808321},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0596808321},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0596808321},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0596808321/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0596808321},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0596808321},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0596808321},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0596808321&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0596808321},
    day = {30},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0596808321},
    keywords = {software-engineering},
    month = oct,
    posted-at = {2014-10-23 09:19:03},
    priority = {4},
    publisher = {O'Reilly Media},
    title = {{Making Software: What Really Works, and Why We Believe It}},
    url = {http://www.worldcat.org/isbn/0596808321},
    year = {2010}
}

@book{citeulike:2857568,
    abstract = {{Designed to help Java programmers make the most effective use of the Java programming language and its fundamental libraries, this updated edition includes more than 50 essays, each of which conveys one rule. Helping programmers sidestep common misconceptions and errors, each rule captures best practices that have been tested in the real world. Just one of the key features in this book are the code examples that illustrate many useful design patterns and idoms. Another key feature is the advice on what not to do. Providing examples of what practices to avoid helps programmers side step common misconceptions and errors. While the second edition will cover all of the classic topics developers have come to rely on- objects, classes, libraries, methods, and serialization; new to this edition will be the coverage on generics, metadata, autoboxing, concurrency utilities, memory model, enumerations, and more. The book is based on the philosophy that clarity and simplicity are of paramount importance. The concise essays teach Java programmers of all levels how to write correct, clear, reusable, and effective code. Learning the art of Java programming, like most other disciples, consists of learning the rules and then learning when to violate them. With this book in hand, Java programmers will truly learn the rules and then learn when to violate them.}},
    author = {Bloch, Joshua},
    citeulike-article-id = {2857568},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321356683},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321356683},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/124025332},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321356683},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321356683},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321356683/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321356683},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321356683},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321356683},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321356683&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321356683},
    day = {28},
    edition = {2},
    howpublished = {Paperback},
    isbn = {0321356683},
    keywords = {java, software-engineering},
    month = may,
    posted-at = {2014-10-23 09:05:24},
    priority = {0},
    publisher = {Addison-Wesley},
    title = {{Effective Java}},
    url = {http://www.worldcat.org/isbn/0321356683},
    year = {2008}
}

@book{citeulike:205322,
    abstract = {{For more than a decade, Steve McConnell, one of the premier authors and voices
in the software community, has helped change the way developers write code--
and produce better software. Now his classic book, CODE COMPLETE, has been
fully updated and revised with best practices in the art and science of
constructing software. Whether you're a new developer seeking a sound
introduction to the practice of software development or a veteran exploring
strategic new approaches to problem solving, you'll find a wealth of practical
suggestions and methods for strengthening your skills. Topics include design,
applying good techniques to construction, eliminating errors, planning,
managing construction activities, and relating personal character to superior
software. This new edition features fully updated information on programming
techniques, including the emergence of Web-style programming, and integrated
coverage of object-oriented design. You'll also find new code examples--both
good and bad--in C++, Microsoft(r) Visual Basic(r), C\#, and Java, though the
focus is squarely on techniques and practices.}},
    author = {McConnell, Steve},
    citeulike-article-id = {205322},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0735619670},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0735619670},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0735619670},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0735619670},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0735619670/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0735619670},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0735619670},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0735619670},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0735619670&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0735619670},
    day = {19},
    edition = {2nd},
    howpublished = {Paperback},
    isbn = {0735619670},
    keywords = {software-engineering},
    month = jun,
    posted-at = {2014-10-23 08:53:58},
    priority = {2},
    publisher = {Microsoft Press},
    title = {{Code Complete: A Practical Handbook of Software Construction, Second Edition}},
    url = {http://www.worldcat.org/isbn/0735619670},
    year = {2004}
}
%65
@book{Kerninghan1988,
    abstract = {{Just about every C programmer I respect learned C from this book. Unlike many of the 1,000 page doorstops stuffed with CD-ROMs that have become popular, this volume is concise and powerful (if somewhat dangerous) -- like C itself. And it was written by Kernighan himself. Need we say more?}},
    author = {Kernighan, Brian W. and Ritchie, Dennis M.},
    citeulike-article-id = {167576},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0131103628},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0131103628},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0131103628},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0131103628},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0131103628/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0131103628},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0131103628},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0131103628},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0131103628&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0131103628},
    day = {01},
    edition = {2},
    howpublished = {Paperback},
    isbn = {0131103628},
    keywords = {c},
    month = apr,
    posted-at = {2014-10-23 08:49:29},
    priority = {2},
    publisher = {Prentice Hall},
    title = {{The C Programming Language}},
    url = {http://www.worldcat.org/isbn/0131103628},
    year = {1988}
}

@article{citeulike:10717471,
    abstract = {{This study develops an integrated research model to examine various factors affecting the IT adoption in the context of the Unified Modeling Language (UML). UML is one type of business process modeling techniques, which in turn is a key aspect of the business process reengineering. The proposed research model is based on IT adoption framework and organizational culture theory. The model identifies fourteen variables, covering seven broad categories (IT characteristics, organization technology, environment, organization structure, organization process, organization culture, and project culture) that could potentially impact UML adoption in organizations. This comprehensive conceptual model is further validated by survey data collected from 251 North American organizations across five different industries. Our results support the proposed conceptualization and shed new light on the key factors associated with firms' adoption of UML technologies. Theoretical and managerial implications of the findings are discussed.}},
    address = {Amsterdam, The Netherlands, The Netherlands},
    author = {Gu, Vicky C. and Cao, Qing and Duan, Wenjing},
    citeulike-article-id = {10717471},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=2397785},
    citeulike-linkout-1 = {http://dx.doi.org/10.1016/j.dss.2012.05.034},
    doi = {10.1016/j.dss.2012.05.034},
    issn = {0167-9236},
    journal = {Decis. Support Syst.},
    keywords = {uml},
    month = dec,
    number = {1},
    pages = {257--269},
    posted-at = {2014-10-23 08:42:38},
    priority = {0},
    publisher = {Elsevier Science Publishers B. V.},
    title = {{Unified Modeling Language (UML) IT Adoption - A Holistic Model of Organizational Capabilities Perspective}},
    url = {http://dx.doi.org/10.1016/j.dss.2012.05.034},
    volume = {54},
    year = {2012}
}

@article{citeulike:13405934,
    author = {Thomas, Dave},
    citeulike-article-id = {13405934},
    citeulike-linkout-0 = {http://www.jot.fm/issues/issue_2003_01/column1/},
    journal = {Journal of Object Technology},
    keywords = {uml},
    month = jan,
    number = {1},
    pages = {7--12},
    posted-at = {2014-10-23 08:38:35},
    priority = {0},
    title = {{UML - Unified or Universal Modeling Language?}},
    url = {http://www.jot.fm/issues/issue_2003_01/column1/},
    volume = {2},
    year = {2003}
}

@electronic{citeulike:13405929,
    author = {Fowler, Martin},
    citeulike-article-id = {13405929},
    citeulike-linkout-0 = {http://martinfowler.com/bliki/UnwantedModelingLanguage.html},
    day = {3},
    keywords = {uml},
    month = nov,
    posted-at = {2014-10-23 08:31:25},
    priority = {0},
    title = {{UnwantedModelingLanguage}},
    url = {http://martinfowler.com/bliki/UnwantedModelingLanguage.html},
    year = {2003}
}

@electronic{citeulike:13405926,
    author = {Fowler, Martin},
    citeulike-article-id = {13405926},
    citeulike-linkout-0 = {http://martinfowler.com/bliki/PlatformIndependentMalapropism.html},
    day = {12},
    keywords = {mda},
    month = sep,
    posted-at = {2014-10-23 08:24:07},
    priority = {0},
    title = {{PlatformIndependentMalapropism}},
    url = {http://martinfowler.com/bliki/PlatformIndependentMalapropism.html},
    year = {2003}
}

@electronic{citeulike:13405925,
    author = {Fowler, Martin},
    citeulike-article-id = {13405925},
    citeulike-linkout-0 = {http://martinfowler.com/bliki/ModelDrivenArchitecture.html},
    journal = {http://martinfowler.com/bliki/ModelDrivenArchitecture.html},
    keywords = {mda},
    posted-at = {2014-10-23 08:22:19},
    priority = {0},
    title = {{ModelDrivenArchitecture}},
    url = {http://martinfowler.com/bliki/ModelDrivenArchitecture.html}
}

@inproceedings{citeulike:7036490,
    author = {Poole, John D.},
    booktitle = {European Conference on Object-Oriented Programming},
    citeulike-article-id = {7036490},
    keywords = {mda},
    location = {Budapest, Hungary},
    organization = {AITO},
    posted-at = {2014-10-23 08:19:04},
    priority = {0},
    title = {{Model-Driven Architecture: Vision, Standards And Emerging Technologies}},
    year = {2001}
}

@book{citeulike:231011,
    abstract = {{Composition teachers throughout the English-speaking world have been pushing this book on their students since it was first published in 1957.  Co-author White later revised it, and it remains the most compact and lucid handbook we have for matters of basic principles of composition, grammar, word usage and misusage, and writing style.} {This is the braille version of the timeless reference book. According to the St. Louis Dispatch, this "excellent book, which should go off to college with every freshman, is recognized as the best book of its kind we have." It should be the ". . . daily companion of anyone who writes for a living and, for that matter, anyone who writes at all" (Greensboro Daily New). "No book in shorter space, with fewer words, will help any writer more than this persistent little volume" (The Boston Globe). Two volumes in braille.}},
    author = {Strunk, William and White, E. B.},
    citeulike-article-id = {231011},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/020530902X},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/020530902X},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/020530902X},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/020530902X},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/020530902X/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/020530902X},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/020530902X},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN020530902X},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=020530902X&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/020530902X},
    day = {02},
    edition = {4th},
    howpublished = {Paperback},
    isbn = {020530902X},
    month = aug,
    posted-at = {2014-10-20 10:24:08},
    priority = {2},
    publisher = {Pearson},
    title = {{The Elements of Style, Fourth Edition}},
    url = {http://www.worldcat.org/isbn/020530902X},
    year = {1999}
}
%22
@electronic{Concei\c{c}\~{a}o2012,
    author = {Concei\c{c}\~{a}o, Renato D.},
    citeulike-article-id = {13260272},
    citeulike-linkout-0 = {http://programmers.stackexchange.com/questions/142629/is-there-a-case-study-that-convincingly-demonstrates-that-clean-code-improved-de},
    day = {02},
    keywords = {clean-code, software-engineering},
    month = apr,
    posted-at = {2014-07-13 04:46:00},
    priority = {0},
    title = {{Is there a case study that convincingly demonstrates that clean code improved development?}},
    url = {http://programmers.stackexchange.com/questions/142629/is-there-a-case-study-that-convincingly-demonstrates-that-clean-code-improved-de},
    year = {2012}
}

@misc{citeulike:12298090,
    abstract = {{What factors impact the comprehensibility of code? Previous research suggests
that expectation-congruent programs should take less time to understand and be
less prone to errors. We present an experiment in which participants with
programming experience predict the exact output of ten small Python programs.
We use subtle differences between program versions to demonstrate that
seemingly insignificant notational changes can have profound effects on
correctness and response times. Our results show that experience increases
performance in most cases, but may hurt performance significantly when
underlying assumptions about related code statements are violated.}},
    archivePrefix = {arXiv},
    author = {Hansen, Michael and Goldstone, Robert L. and Lumsdaine, Andrew},
    citeulike-article-id = {12298090},
    citeulike-linkout-0 = {http://arxiv.org/abs/1304.5257},
    citeulike-linkout-1 = {http://arxiv.org/pdf/1304.5257},
    day = {26},
    eprint = {1304.5257},
    keywords = {programming, software-engineering},
    month = apr,
    posted-at = {2014-07-13 04:35:55},
    priority = {2},
    title = {{What Makes Code Hard to Understand?}},
    url = {http://arxiv.org/abs/1304.5257},
    year = {2013}
}
%57
@article{DeRemer1975,
    abstract = {{We distinguish the activity of writing large programs from that of writing small ones. By large programs we mean systems consisting of many small programs (modules), possibly written by different people.We need languages for programming-in-the-small, i.e. languages not unlike the common programming languages of today, for writing modules. We also need a  ” module interconnection language” for knitting those modules together into an integrated whole and for providing an overview that formally records the intent of the programmer(s) and that can be checked for consistency by a compiler.We explore the software reliability aspects of such an interconnection language. Emphasis is placed on facilities for information hiding and for defining layers of virtual machines.}},
    address = {New York, NY, USA},
    author = {DeRemer, Frank and Kron, Hans},
    citeulike-article-id = {3878220},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=390016.808431},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/390016.808431},
    doi = {10.1145/390016.808431},
    issn = {0362-1340},
    journal = {SIGPLAN Not.},
    keywords = {software-engineering},
    month = apr,
    number = {6},
    pages = {114--121},
    posted-at = {2014-07-07 05:10:51},
    priority = {0},
    publisher = {ACM},
    title = {{Programming-in-the Large Versus Programming-in-the-small}},
    url = {http://dx.doi.org/10.1145/390016.808431},
    volume = {10},
    year = {1975}
}
%55
@book{Abran2001,
    address = {Piscataway, NJ, USA},
    citeulike-article-id = {13251876},
    editor = {Abran, Alain and Bourque, Pierre and Dupuis, Robert and Moore, James W.},
    keywords = {software-engineering},
    posted-at = {2014-07-07 03:50:53},
    priority = {2},
    publisher = {IEEE Press},
    title = {{Guide to the Software Engineering Body of Knowledge - SWEBOK}},
    year = {2001}
}
%53
@book{Meyer1997,
    abstract = {{The developer of the acclaimed Eiffel programming language comes through with one of the clearest and most informative books about computers ever committed to paper. <i>Object-Oriented Software Construction</i> is the gospel of object-oriented technology and it deserves to be spread everywhere. Meyer opens with coverage of the need for an object-oriented approach to software development, citing improved quality and development speed as key advantages of the approach. He then explains all the key criteria that define an object- oriented approach to a problem. Meyer pays attention to techniques, such as classes, objects, memory management, and more, returning to each technique and polishing his readers' knowledge of it as he explains how to employ it "well." In a section on advanced topics, Meyer explores interesting and relevant topics, such as persistent objects stored in a database. He also offers a sort of "Do and Don't" section in which he enumerates common mistakes and ways to avoid them. Management information isn't the main point of <i>Object-Oriented Software Construction</i>, but you'll find some in its pages. Meyer concludes his tour de force with comparisons of all the key object-oriented languages, including Java. He also covers the potential of simulating object technology in non-object-oriented languages, such as Pascal and Fortran. The companion CD-ROM includes the full text of this book in hypertext form, as well as some tools for designing object-oriented systems. If you program computers, you need to read this book.} {<I>Recipient of the 1997 Jolt Award.</I>  <P>The developer of the acclaimed Eiffel programming language comes through with one of the clearest and most informative books about computers ever committed to paper. Object-Oriented Software Construction is the gospel of object-oriented technology and it deserves to be spread everywhere. Meyer opens with coverage of the need for an object-oriented approach to software development, citing improved quality and development speed as key advantages of the approach. He then explains all the key criteria that define an object- oriented approach to a problem. Meyer pays attention to techniques, such as classes, objects, memory management, and more, returning to each technique and polishing his readers' knowledge of it as he explains how to employ it "well." In a section on advanced topics, Meyer explores interesting and relevant topics, such as persistent objects stored in a database. He also offers a sort of "Do and Don't" section in which he enumerates common mistakes and ways to avoid them. Management information isn't the main point of Object-Oriented Software Construction, but you'll find some in its pages. Meyer concludes his tour de force with comparisons of all the key object-oriented languages, including Java. He also covers the potential of simulating object technology in non-object-oriented languages, such as Pascal and Fortran. The companion CD-ROM includes the full text of this book in hypertext form, as well as some tools for designing object-oriented systems. If you program computers, you need to read this book.}},
    author = {Meyer, Bertrand},
    citeulike-article-id = {159168},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0136291554},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0136291554},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0136291554},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0136291554},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0136291554/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0136291554},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0136291554},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0136291554},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0136291554&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0136291554},
    day = {13},
    edition = {2},
    howpublished = {Paperback},
    isbn = {0136291554},
    keywords = {software-engineering},
    month = apr,
    posted-at = {2014-07-06 22:58:35},
    priority = {2},
    publisher = {Prentice Hall},
    title = {{Object-Oriented Software Construction (Book/CD-ROM) (2nd Edition)}},
    url = {http://www.worldcat.org/isbn/0136291554},
    year = {1997}
}
%52
@inproceedings{Liskov1987,
    abstract = {{An abstract is not available.}},
    address = {New York, NY, USA},
    author = {Liskov, Barbara},
    booktitle = {Addendum to the Proceedings on Object-oriented Programming Systems, Languages and Applications (Addendum)},
    citeulike-article-id = {4498541},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=62141},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/62138.62141},
    doi = {10.1145/62138.62141},
    isbn = {0-89791-266-7},
    keywords = {software-engineering},
    location = {Orlando, Florida, USA},
    pages = {17--34},
    posted-at = {2014-07-06 22:49:08},
    priority = {2},
    publisher = {ACM},
    series = {OOPSLA '87},
    title = {{Keynote Address - Data Abstraction and Hierarchy}},
    url = {http://dx.doi.org/10.1145/62138.62141},
    year = {1987}
}
%50
@phdthesis{Opdyke1992,
    author = {Opdyke, William F.},
    citeulike-article-id = {13251795},
    citeulike-linkout-0 = {http://www-public.it-sudparis.eu/~gibson/Teaching/CSC7302/ReadingMaterial/Opdyke92.pdf},
    keywords = {refactoring, software-engineering},
    posted-at = {2014-07-06 22:35:49},
    priority = {2},
    school = {University of Illinois at Urbana-Champaign},
    title = {{Refactoring object-oriented frameworks}},
    url = {http://www-public.it-sudparis.eu/~gibson/Teaching/CSC7302/ReadingMaterial/Opdyke92.pdf},
    year = {1992}
}
%47
@book{Anderson2010,
    author = {Anderson, David J.},
    citeulike-article-id = {13251790},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0984521402},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0984521402},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0984521402},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0984521402},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0984521402/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0984521402},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0984521402},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0984521402},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0984521402&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0984521402},
    day = {07},
    howpublished = {Paperback},
    isbn = {0984521402},
    keywords = {engineering, kanban, software},
    month = apr,
    posted-at = {2014-07-06 22:25:55},
    priority = {2},
    publisher = {Blue Hole Press},
    title = {{Kanban: Successful Evolutionary Change for Your Technology Business}},
    url = {http://www.worldcat.org/isbn/0984521402},
    year = {2010}
}
%45
@book{Beck1999,
    abstract = {{Kent Beck's <I>eXtreme Programming eXplained</I> provides an intriguing high-level overview of the author's Extreme Programming (XP) software development methodology. Written for IS managers, project leaders, or programmers, this guide provides a glimpse at the principles behind XP and its potential advantages for small- to mid-size software development teams.<p> The book intends to describe what XP is, its guiding principles, and how it works. Simply written, the book avoids case studies and concrete details in demonstrating the efficacy of XP. Instead, it demonstrates how XP relies on simplicity, unit testing, programming in pairs, communal ownership of code, and customer input on software to motivate code improvement during the development process. As the author notes, these principles are not new, but when they're combined their synergy fosters a new and arguably better way to build and maintain software. Throughout the book, the author presents and explains these principles, such as "rapid feedback" and "play to win," which form the basis of XP.<p> Generally speaking, XP changes the way programmers work. The book is good at delineating new roles for programmers and managers who Beck calls "coaches." The most striking characteristic of XP is that programmers work in pairs, and that testing is an intrinsic part of the coding process. In a later section, the author even shows where XP works and where it doesn't and offers suggestions for migrating teams and organizations over to the XP process. <p> In the afterword, the author recounts the experiences that led him to develop and refine XP, an insightful section that should inspire any organization to adopt XP. This book serves as a useful introduction to the philosophy and practice of XP for the manager or programmer who wants a potentially better way to build software. <I>--Richard Dragan</I><p> <B>Topics covered</B>: Extreme Programming (XP) software methodology, principles, XP team roles, facilities design, testing, refactoring, the XP software lifecycle, and adopting XP.} {Software development projects can be fun, productive, and even daring.  Yet they can consistently deliver value to a business and remain under control.  <P>Extreme Programming (XP) was conceived and developed to address the specific needs of software development conducted by small teams in the face of vague and changing requirements. This new lightweight methodology challenges many conventional tenets, including the long-held assumption that the cost of changing a piece of software necessarily rises dramatically over the course of time.  XP recognizes that projects have to work to achieve this reduction in cost and exploit the savings once they have been earned.  <P>Fundamentals of XP include:  <P>* Distinguishing between the decisions to be made by business interests and those to be made by project stakeholders. * Writing unit tests before programming and keeping all of the tests running at all times. * Integrating and testing the whole system-several times a day. * Producing all software in pairs, two programmers at one screen. * Starting projects with a simple design that constantly evolves to add needed flexibility and remove unneeded complexity. * Putting a minimal system into production quickly and growing it in whatever directions prove most valuable.  <P>Why is XP so controversial?  Some sacred cows don't make the cut in XP:  <P>* Don't force team members to specialize and become analysts, architects, programmers, testers, and integrators-every XP programmer participates in all of these critical activities every day. * Don't conduct complete up-front analysis and design-an XP project starts with a quick analysis of the entire system, and XP programmers continue to make analysis and design decisions throughout development. * Develop infrastructure and frameworks as you develop your application, not up-front-delivering business value is the heartbeat that drives XP projects. * Don't write and maintain implementation documentation-communication in XP projects occurs face-to-face, or through efficient tests and carefully written code.  <P>You may love XP or you may hate it, but Extreme Programming Explained will force you to take a fresh look at how you develop software.}},
    author = {Beck, Kent},
    citeulike-article-id = {149388},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201616416},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201616416},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/249369335},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201616416},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201616416},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201616416/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201616416},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201616416},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201616416},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201616416&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201616416},
    day = {05},
    edition = {US ed},
    howpublished = {Paperback},
    isbn = {0201616416},
    keywords = {engineering, software},
    month = oct,
    posted-at = {2014-07-06 22:21:03},
    priority = {0},
    publisher = {Addison-Wesley Professional},
    title = {{Extreme Programming Explained: Embrace Change}},
    url = {http://www.worldcat.org/isbn/0201616416},
    year = {1999}
}
%7 %44
@techreport{Beck2001,
    author = {Beck, K. and Beedle, M. and van Bennekum, A. and Cockburn, A. and Cunningham, W. and Fowler, M. and Grenning, J. and Highsmith, J. and Hunt, A. and Jeffries, R. and Kern, Jon and Marick, Brian and Martin, Robert C. and Mallor, Steve and Shwaber, Ken and Sutherland, Jeff},
    citeulike-article-id = {7955278},
    institution = {The Agile Alliance},
    keywords = {engineering, software},
    posted-at = {2014-07-06 22:10:46},
    priority = {0},
    title = {{The Agile Manifesto}},
    year = {2001}
}
%37
@article{Hollender2010,
    abstract = {{With the continually increasing complexity of e-learning environments, there is a need for integrating concepts of cognitive load theory (CLT) with concepts of human–computer interaction (HCI). Basic concepts of both fields were reviewed and contrasted. A literature review was conducted within the literature database  ” The Guide to Computing Literature,” searching for  ” cognitive load theory” and  ” Sweller.” Sixty-five publications contained  ” cognitive load” in their titles or abstracts. Each publication was checked to see whether it contained the concepts of intrinsic, extraneous, or germane cognitive load. The review showed that CLT concepts have been adopted in HCI. However, the concept of germane cognitive load has attracted less attention up to the present time. Two conceptual models are proposed. The first model divides extraneous cognitive load into load induced by the instructional design and load caused by software usage. The model clarifies the focus of traditional usability principles and of existing instructional design principles derived from CLT. The second model fits CLT concepts into the basic components of user-centered design. The concept of germane cognitive load illustrates that an increase of cognitive load can be desirable when designing e-learning environments. Areas for future interdisciplinary research are sketched.}},
    author = {Hollender, Nina and Hofmann, Cristian and Deneke, Michael and Schmitz, Bernhard},
    citeulike-article-id = {7395463},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/j.chb.2010.05.031},
    day = {29},
    doi = {10.1016/j.chb.2010.05.031},
    issn = {07475632},
    journal = {Computers in Human Behavior},
    keywords = {cognitive-load-theory, design, hci, software},
    month = nov,
    number = {6},
    pages = {1278--1288},
    posted-at = {2014-07-06 05:06:20},
    priority = {2},
    title = {{Integrating cognitive load theory and concepts of human–computer interaction}},
    url = {http://dx.doi.org/10.1016/j.chb.2010.05.031},
    volume = {26},
    year = {2010}
}
%38
@inproceedings{Oviatt2006,
    abstract = {{Historically, the development of computer systems has been primarily a technology-driven phenomenon, with technologists believing that "users can adapt" to whatever they build. Human-centered design advocates that a more promising and enduring approach is to model users' natural behavior to begin with so that interfaces can be designed that are more intuitive, easier to learn, and freer of performance errors. In this paper, we illustrate different user-centered design principles and specific strategies, as well as their advantages and the manner in which they enhance users' performance. We also summarize recent research findings from our lab comparing the performance characteristics of different educational interfaces that were based on user-centered design principles. One theme throughout our discussion is human-centered design that minimizes users' cognitive load, which effectively frees up mental resources for performing better while also remaining more attuned to the world around them.}},
    address = {New York, NY, USA},
    author = {Oviatt, Sharon},
    booktitle = {Proceedings of the 14th Annual ACM International Conference on Multimedia},
    citeulike-article-id = {1204885},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1180831},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1180639.1180831},
    doi = {10.1145/1180639.1180831},
    isbn = {1-59593-447-2},
    keywords = {cognitive-load-theory, design, hci, software},
    location = {Santa Barbara, CA, USA},
    pages = {871--880},
    posted-at = {2014-07-06 05:04:09},
    priority = {2},
    publisher = {ACM},
    series = {MULTIMEDIA '06},
    title = {{Human-centered Design Meets Cognitive Load Theory: Designing Interfaces That Help People Think}},
    url = {http://dx.doi.org/10.1145/1180639.1180831},
    year = {2006}
}
%35
@article{Shao2003,
    author = {Shao, Jingqiu and Wang, Yingxu},
    citeulike-article-id = {13251075},
    journal = {Electrical and Computer Engineering, Canadian Journal of},
    keywords = {cognitive, engineering, metrics, software},
    number = {2},
    pages = {69--74},
    posted-at = {2014-07-05 06:52:40},
    priority = {0},
    publisher = {IEEE},
    title = {{A new measure of software complexity based on cognitive weights}},
    volume = {28},
    year = {2003}
}
%34
@article{Wang2009,
    author = {Wang, Yingxu},
    citeulike-article-id = {13251065},
    journal = {International Journal of Software Science and Computational Intelligence (IJSSCI)},
    keywords = {cognitive, engineering, metrics, software},
    number = {2},
    pages = {31--53},
    posted-at = {2014-07-05 06:46:16},
    priority = {0},
    publisher = {IGI Global},
    title = {{On the cognitive complexity of software and its quantification and formal measurement}},
    volume = {1},
    year = {2009}
}
%33 %78
@article{Curtis1984,
    author = {Curtis, B. and Forman, I. and Brooks, R. and Soloway, E. and Ehrlich, K.},
    citeulike-article-id = {13251053},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/0306-4573(84)90041-4},
    doi = {10.1016/0306-4573(84)90041-4},
    issn = {03064573},
    journal = {Information Processing \& Management},
    keywords = {engineering, psychology, software},
    month = jan,
    number = {1-2},
    pages = {81--96},
    posted-at = {2014-07-05 06:30:53},
    priority = {2},
    title = {{Psychological perspectives for software science}},
    url = {http://dx.doi.org/10.1016/0306-4573(84)90041-4},
    volume = {20},
    year = {1984}
}
%32
@article{Curtis1980,
    author = {Curtis, Bill},
    citeulike-article-id = {13239595},
    journal = {Proceedings of the IEEE},
    keywords = {engineering, metrics, software},
    number = {9},
    pages = {1144--1157},
    posted-at = {2014-06-23 05:59:00},
    priority = {1},
    publisher = {IEEE},
    title = {{Measurement and experimentation in software engineering}},
    volume = {68},
    year = {1980}
}
%31
@article{Boehm1995,
    author = {Boehm, Barry and Clark, Bradford and Horowitz, Ellis and Westland, Chris and Madachy, Ray and Selby, Richard},
    citeulike-article-id = {13237499},
    journal = {Annals of software engineering},
    keywords = {engineering, software},
    number = {1},
    pages = {57--94},
    posted-at = {2014-06-21 23:51:00},
    priority = {1},
    publisher = {Springer},
    title = {{Cost models for future software life cycle processes: COCOMO 2.0}},
    volume = {1},
    year = {1995}
}
%30
@book{Boehm1981,
    author = {Boehm, Barry W.},
    citeulike-article-id = {341464},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0138221227},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0138221227},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0138221227},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0138221227},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0138221227/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0138221227},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0138221227},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0138221227},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0138221227&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0138221227},
    day = {01},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0138221227},
    keywords = {engineering, software},
    month = nov,
    posted-at = {2014-06-21 23:49:06},
    priority = {1},
    publisher = {Prentice Hall},
    title = {{Software Engineering Economics}},
    url = {http://www.worldcat.org/isbn/0138221227},
    year = {1981}
}
%29
@article{Albrecht1983,
    author = {Albrecht, Allan J. and Gaffney, John E.},
    citeulike-article-id = {13237498},
    journal = {Software Engineering, IEEE Transactions on},
    keywords = {engineering, software},
    number = {6},
    pages = {639--648},
    posted-at = {2014-06-21 23:38:07},
    priority = {1},
    publisher = {IEEE},
    title = {{Software function, source lines of code, and development effort prediction: a software science validation}},
    year = {1983}
}
%28
@article{McCabe1976,
    author = {McCabe, Thomas J.},
    citeulike-article-id = {13237496},
    citeulike-linkout-0 = {http://juacompe.mrchoke.com/natty/thesis/FrameworkComparison/A\%20complexity\%20measure.pdf},
    journal = {Software Engineering, IEEE Transactions on},
    keywords = {engineering, software},
    number = {4},
    pages = {308--320},
    posted-at = {2014-06-21 23:33:09},
    priority = {4},
    publisher = {IEEE},
    title = {{A complexity measure}},
    url = {http://juacompe.mrchoke.com/natty/thesis/FrameworkComparison/A\%20complexity\%20measure.pdf},
    year = {1976}
}
%27
@book{Halstead1977,
    address = {New York, NY},
    author = {Halstead, Maurice H.},
    citeulike-article-id = {13237494},
    keywords = {engineering, software},
    posted-at = {2014-06-21 23:30:15},
    priority = {1},
    publisher = {North-Holland},
    series = {Elsevier computer science library : operational programming systems series},
    title = {{Elements of software science}},
    year = {1977}
}

@article{citeulike:13237493,
    abstract = {{An abstract is not available.}},
    address = {New York, NY, USA},
    author = {Van Wyk, Christopher J.},
    citeulike-article-id = {13237493},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=316051},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/77481.316051},
    doi = {10.1145/77481.316051},
    issn = {0001-0782},
    journal = {Commun. ACM},
    keywords = {literate, programming},
    month = mar,
    number = {3},
    posted-at = {2014-06-21 23:25:23},
    priority = {4},
    publisher = {ACM},
    title = {{Literate Programming}},
    url = {http://dx.doi.org/10.1145/77481.316051},
    volume = {33},
    year = {1990}
}
%26
@article{Ramsey1994,
    abstract = {{Literate programming tools let you arrange the parts of a program in any order and extract documentation and code from the same source file. The author argues that language-dependence and feature complexity have hampered acceptance of these tools, then offers a simpler alternative.}},
    address = {Los Alamitos, CA, USA},
    author = {Ramsey, Norman},
    citeulike-article-id = {3466490},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=625384},
    citeulike-linkout-1 = {http://doi.ieeecomputersociety.org/10.1109/52.311070},
    citeulike-linkout-2 = {http://dx.doi.org/10.1109/52.311070},
    citeulike-linkout-3 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=311070},
    doi = {10.1109/52.311070},
    issn = {0740-7459},
    journal = {IEEE Softw.},
    keywords = {literate, programming},
    month = sep,
    number = {5},
    pages = {97--105},
    posted-at = {2014-06-21 23:19:48},
    priority = {0},
    publisher = {IEEE Computer Society Press},
    title = {{Literate Programming Simplified}},
    url = {http://dx.doi.org/10.1109/52.311070},
    volume = {11},
    year = {1994}
}
%25
@article{Knuth1984,
    abstract = {{The author and his associates have been experimenting for the past several years with a programming language and documentation system called WEB. This paper presents WEB by example, and discusses why the new system appears to be an improvement over previous ones.}},
    author = {Knuth, D. E.},
    citeulike-article-id = {4451052},
    citeulike-linkout-0 = {http://comjnl.oxfordjournals.org/content/27/2/97.full.pdf+html},
    citeulike-linkout-1 = {http://dx.doi.org/10.1093/comjnl/27.2.97},
    citeulike-linkout-2 = {http://comjnl.oxfordjournals.org/content/27/2/97.abstract},
    citeulike-linkout-3 = {http://comjnl.oxfordjournals.org/content/27/2/97.full.pdf},
    citeulike-linkout-4 = {http://comjnl.oxfordjournals.org/cgi/content/abstract/27/2/97},
    day = {1},
    doi = {10.1093/comjnl/27.2.97},
    issn = {1460-2067},
    journal = {The Computer Journal},
    keywords = {literate, programming},
    month = jan,
    number = {2},
    pages = {97--111},
    posted-at = {2014-06-21 18:50:06},
    priority = {0},
    publisher = {Oxford University Press},
    title = {{Literate Programming}},
    url = {http://comjnl.oxfordjournals.org/content/27/2/97.full.pdf+html},
    volume = {27},
    year = {1984}
}

@incollection{citeulike:13205651,
    abstract = {{Because of the centrality of working memory load to cognitive load theory, measuring this load has been a high priority for researchers. While it is possible to demonstrate support for the validity of the theory by predicting experimental outcomes, it is useful to additionally provide independent measures of cognitive load. In this chapter we describe the various methods used to measure cognitive load and how they have developed over the last 30 years.}},
    author = {Sweller, John and Ayres, Paul and Kalyuga, Slava},
    booktitle = {Cognitive Load Theory},
    citeulike-article-id = {13205651},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/978-1-4419-8126-4_6},
    citeulike-linkout-1 = {http://link.springer.com/chapter/10.1007/978-1-4419-8126-4_6},
    doi = {10.1007/978-1-4419-8126-4_6},
    keywords = {cognitive-load-theory},
    pages = {71--85},
    posted-at = {2014-05-31 03:33:02},
    priority = {4},
    publisher = {Springer New York},
    series = {Explorations in the Learning Sciences, Instructional Systems and Performance Technologies},
    title = {{Measuring Cognitive Load}},
    url = {http://dx.doi.org/10.1007/978-1-4419-8126-4_6},
    volume = {1},
    year = {2011}
}
%19
@unpublished{Jacobson2009,
    abstract = {{Our Greatest Challenge: Understanding How To Build Great Software

Do we really know how to develop great software? The answer for many people is clearly yes. But do we know how to communicate and continuously improve the way that we develop software? Do we really understand the best way to communicate and share our knowledge? The answer, as we saw in the previous article is clearly no!}},
    author = {Jacobson, Ivar and Spence, Ian},
    citeulike-article-id = {13205621},
    citeulike-linkout-0 = {http://www.drdobbs.com/architecture-and-design/why-we-need-a-theory-for-software-engine/220300840},
    day = {2},
    journal = {Dr. Dobb's},
    month = oct,
    posted-at = {2014-05-31 01:40:20},
    priority = {0},
    title = {{Why We Need a Theory for Software Engineering}},
    url = {http://www.drdobbs.com/architecture-and-design/why-we-need-a-theory-for-software-engine/220300840},
    year = {2009}
}
%18
@article{Johnson2012,
    abstract = {{Darwin's theory of natural selection, Maxwell's equations, the theory of demand and supply; almost all established academic disciplines place great emphasis on what their core theory is. This is not, however, the case in software engineering. What is the reason behind the software engineering community's apparent indifference to a concept that is so important to so many others?}},
    author = {Johnson, Pontus and Ekstedt, Mathias and Jacobson, Ivar},
    citeulike-article-id = {12884456},
    citeulike-linkout-0 = {http://doi.ieeecomputersociety.org/10.1109/MS.2012.127},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/ms.2012.127},
    citeulike-linkout-2 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6276302},
    day = {01},
    doi = {10.1109/ms.2012.127},
    institution = {KTH R. Inst. of Technol., Stockholm, Sweden},
    issn = {0740-7459},
    journal = {IEEE Software},
    keywords = {engineering, software},
    month = sep,
    number = {5},
    pages = {96},
    posted-at = {2014-05-31 01:09:29},
    priority = {0},
    publisher = {IEEE},
    title = {{Where's the Theory for Software Engineering?}},
    url = {http://dx.doi.org/10.1109/ms.2012.127},
    volume = {29},
    year = {2012}
}
%17
@article{Briand2012,
    abstract = {{The author provides, based on 20 years of research and industrial experience, his assessment of software engineering research. He then builds on such analysis to provide recommendations on how we need to change as a research community to increase our impact, gain credibility, and ultimately ensure the success and recognition of our young discipline. The gist of the author's message is that we need to become a true engineering discipline.}},
    author = {Briand, Lionel},
    citeulike-article-id = {11961940},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/ms.2012.86},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6265086},
    doi = {10.1109/ms.2012.86},
    institution = {University of Luxembourg},
    issn = {0740-7459},
    journal = {IEEE Software},
    keywords = {engineering, software},
    month = jul,
    number = {4},
    pages = {96},
    posted-at = {2014-05-25 01:15:13},
    priority = {2},
    publisher = {IEEE},
    title = {{Embracing the Engineering Side of Software Engineering}},
    url = {http://dx.doi.org/10.1109/ms.2012.86},
    volume = {29},
    year = {2012}
}
%16
@inproceedings{Wilson2010,
    author = {Wilson, Greg},
    booktitle = {CUSEC},
    citeulike-article-id = {13199663},
    keywords = {engineering, software},
    posted-at = {2014-05-25 01:11:06},
    priority = {2},
    title = {{What We Actually Know About Software Development, and Why We Believe It's True}},
    year = {2010}
}
%15
@book{Wirfs-Brock1990,
    author = {Wirfs-Brock, Rebecca and Wilkerson, Brian and Wiener, Lauren},
    citeulike-article-id = {13199660},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0136298257},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0136298257},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0136298257},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0136298257},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0136298257/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0136298257},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0136298257},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0136298257},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0136298257&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0136298257},
    day = {28},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0136298257},
    keywords = {design, object-oriented-programming, software},
    month = jun,
    posted-at = {2014-05-25 01:02:20},
    priority = {4},
    publisher = {Prentice Hall},
    title = {{Designing Object-Oriented Software}},
    url = {http://www.worldcat.org/isbn/0136298257},
    year = {1990}
}
%12
@book{Booch2007,
    abstract = {{In this eagerly awaited second edition, Grady Booch draws upon the rich and varied results of those projects and offers improved methods for object development and a new, unified notation.  With numerous examples implemented in C++, Booch illustrates essential concepts, explains the method, and shows successful applications in a variety of fields.  Booch also gives  pragmatic advice on a host of issues, including classification, implementation strategies, and cost-effective project management.  A two-time winner of <B>Software Development's</B> coveted <B>Jolt Cola Product Excellence Award!</B>} {<p><b>Object-Oriented Design with Applications</b> has long been the essential reference to object-oriented technology, which, in turn, has evolved to join the mainstream of industrial-strength software development. In this third edition--the first revision in 13 years--readers can learn to apply object-oriented methods using new paradigms such as Java, the Unified Modeling Language (UML) 2.0, and .NET.</p><p>The authors draw upon their rich and varied experience to offer improved methods for object development and numerous examples that tackle the complex problems faced by software engineers, including systems architecture, data acquisition, cryptoanalysis, control systems, and Web development. They illustrate essential concepts, explain the method, and show successful applications in a variety of fields. You'll also find pragmatic advice on a host of issues, including classification, implementation strategies, and cost-effective project management.</p><p>New to this new edition are</p><ul><li>An introduction to the new UML 2.0, from the notation's most fundamental and advanced elements with an emphasis on key changes</li><li>New domains and contexts</li><li>A greatly enhanced focus on modeling--as eagerly requested by readers--with five chapters that each delve into one phase of the overall development lifecycle.</li><li>Fresh approaches to reasoning about complex systems</li><li>An examination of the conceptual foundation of the widely misunderstood fundamental elements of the object model, such as abstraction, encapsulation, modularity, and hierarchy</li><li>How to allocate the resources of a team of developers and mange the risks associated with developing complex software systems</li><li>An appendix on object-oriented programming languages</li></ul><p>This is the seminal text for anyone who wishes to use object-oriented technology to manage the complexity inherent in many kinds of systems.</p>}},
    author = {Booch, Grady and Maksimchuk, Robert A. and Engle, Michael W. and Young, Bobbi J. and Conallen, Jim and Houston, Kelli A.},
    citeulike-article-id = {1376130},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/020189551X},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/020189551X},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/020189551X},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/020189551X},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/020189551X/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/020189551X},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/020189551X},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN020189551X},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=020189551X&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/020189551X},
    day = {30},
    edition = {3},
    howpublished = {Hardcover},
    isbn = {020189551X},
    keywords = {analysis, book, design, object-oriented-programming},
    month = apr,
    posted-at = {2014-05-25 00:43:22},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {{Object-Oriented Analysis and Design with Applications (3rd Edition)}},
    url = {http://www.worldcat.org/isbn/020189551X},
    year = {2007}
}
%5
@article{Glass2006,
    abstract = {{Reconsidering the relevancy of a frequently cited report (the Standish CHAOS report) on software project failures.}},
    address = {New York, NY, USA},
    author = {Glass, Robert L.},
    citeulike-article-id = {768349},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1145287.1145301},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1145287.1145301},
    doi = {10.1145/1145287.1145301},
    issn = {0001-0782},
    journal = {Communications of the ACM},
    keywords = {engineering, software},
    month = aug,
    number = {8},
    pages = {15--16},
    posted-at = {2013-05-01 17:30:59},
    priority = {2},
    publisher = {ACM},
    title = {{The Standish report: does it really describe a software crisis?}},
    url = {http://dx.doi.org/10.1145/1145287.1145301},
    volume = {49},
    year = {2006}
}

@article{Baddeley1992,
    abstract = {{The term working memory refers to a brain system that provides temporary storage and manipulation of the information necessary for such complex cognitive tasks as language comprehension, learning, and reasoning. This definition has evolved from the concept of a unitary short-term memory system. Working memory has been found to require the simultaneous storage and processing of information. It can be divided into the following three subcomponents: (i) the central executive, which is assumed to be an attentional-controlling system, is important in skills such as chess playing and is particularly susceptible to the effects of Alzheimer's disease; and two slave systems, namely (ii) the visuospatial sketch pad, which manipulates visual images and (iii) the phonological loop, which stores and rehearses speech-based information and is necessary for the acquisition of both native and second-language vocabulary.}},
    address = {Medical Research Council, Applied Psychology Unit, Cambridge, United Kingdom.},
    author = {Baddeley, A.},
    citeulike-article-id = {3310671},
    citeulike-linkout-0 = {http://dx.doi.org/10.1126/science.1736359},
    citeulike-linkout-1 = {http://www.sciencemag.org/content/255/5044/556.abstract},
    citeulike-linkout-2 = {http://www.sciencemag.org/content/255/5044/556.full.pdf},
    citeulike-linkout-3 = {http://www.sciencemag.org/cgi/content/abstract/255/5044/556?maxtoshow=&HITS=&hits=&RESULTFORMAT=&author1=Baddeley&fulltext=Working+memory&andorexactfulltext=and&searchid=1&FIRSTINDEX=0&volume=255&resourcetype=HWCIT},
    citeulike-linkout-4 = {http://view.ncbi.nlm.nih.gov/pubmed/1736359},
    citeulike-linkout-5 = {http://www.hubmed.org/display.cgi?uids=1736359},
    day = {31},
    doi = {10.1126/science.1736359},
    issn = {1095-9203},
    journal = {Science},
    month = jan,
    number = {5044},
    pages = {556--559},
    pmid = {1736359},
    posted-at = {2013-04-26 00:30:59},
    priority = {0},
    publisher = {American Association for the Advancement of Science},
    title = {{Working memory}},
    url = {http://dx.doi.org/10.1126/science.1736359},
    volume = {255},
    year = {1992}
}
%4
@article{Jorgensen2006,
    abstract = {{The Standish Group reported in their 1994 CHAOS report that the average cost overrun of software projects was as high as 189\%. This figure for cost overrun is referred to frequently by scientific researchers, software process improvement consultants, and government advisors. In this paper, we review the validity of the Standish Group's 1994 cost overrun results. Our review is based on a comparison of the 189\% cost overrun figure with the cost overrun figures reported in other cost estimation surveys, and an examination of the Standish Group's survey design and analysis methods. We find that the figure reported by the Standish Group is much higher than those reported in similar estimation surveys and that there may be severe problems with the survey design and methods of analysis, e.g. the population sampling method may be strongly biased towards 'failure projects'. We conclude that the figure of 189\% for cost overruns is probably much too high to represent typical software projects in the 1990s and that a continued use of that figure as a reference point for estimation accuracy may lead to poor decision making and hinder progress in estimation practices.}},
    author = {J{\o}rgensen, Magne and Mol{\o}kken-{\O}stvold, Kjetil},
    citeulike-article-id = {967574},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/j.infsof.2005.07.002},
    citeulike-linkout-1 = {http://www.sciencedirect.com/science/article/B6V0B-4H7T0KH-1/2/cb364f8b154b6b7c715214e21a23f940},
    doi = {10.1016/j.infsof.2005.07.002},
    issn = {09505849},
    journal = {Information and Software Technology},
    keywords = {engineering, software},
    month = apr,
    number = {4},
    pages = {297--301},
    posted-at = {2013-02-11 09:38:06},
    priority = {2},
    title = {{How large are software cost overruns? A review of the 1994 CHAOS report}},
    url = {http://dx.doi.org/10.1016/j.infsof.2005.07.002},
    volume = {48},
    year = {2006}
}

@book{citeulike:11967466,
    author = {Atkinson, R. C.},
    citeulike-article-id = {11967466},
    citeulike-linkout-0 = {http://www.worldcat.org/oclc/77598196},
    keywords = {cognitive, education, memory},
    posted-at = {2013-01-29 03:15:20},
    priority = {2},
    publisher = {Institute for Mathematical Studies in Social Sciences},
    title = {{Human memory : a proposed system and its control processes}},
    url = {http://www.worldcat.org/oclc/77598196},
    year = {1967}
}

@article{citeulike:6931215,
    abstract = {{Self-adaptability has been proposed as an effective approach to automate the complexity associated with the management of modern-day software systems. While over the past decade we have witnessed significant progress in the manner in which such systems are designed, constructed, and deployed, there is still a lack of consensus among the engineers on some of the fundamental underlying concepts. In this paper, we attempt to alleviate this issue by exploring the crucial role of computational reflection in the context of self-adaptive software systems. We show that computational reflection forms the foundation of a self-adaptive system, and an understanding of its properties is a prerequisite to intelligent and predictable construction of such systems. Examining several systems in light of computational reflection has helped us to identify a number of key challenges, which we report on and propose as avenues of future research.}},
    address = {Los Alamitos, CA, USA},
    author = {Andersson, Jesper and de Lemos, Rogerio and Malek, Sam and Weyns, Danny},
    citeulike-article-id = {6931215},
    citeulike-linkout-0 = {http://doi.ieeecomputersociety.org/10.1109/SEAMS.2009.5069072},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/seams.2009.5069072},
    doi = {10.1109/seams.2009.5069072},
    isbn = {978-1-4244-3724-5},
    journal = {Software Engineering for Adaptive and Self-Managing Systems, International Workshop on},
    keywords = {self-adaptive},
    pages = {38--47},
    posted-at = {2012-10-27 10:57:30},
    priority = {0},
    publisher = {IEEE Computer Society},
    title = {{Reflecting on self-adaptive software systems}},
    url = {http://dx.doi.org/10.1109/seams.2009.5069072},
    volume = {0},
    year = {2009}
}

@inproceedings{citeulike:11526928,
    abstract = {{Despite the vast body of work on self-adaption, no systematic study has been performed on the claims associated with self-adaptation and the evidence that exists for these claims. As such an insight is crucial for researchers and engineers, we performed a literature study of the research results from SEAMS since 2006 and the associated Dagstuhl seminar in 2008. The study shows that the primary claims of self-adaptation are improved flexibility, reliability, and performance of the system. On the other hand, the tradeoffs implied by self-adaptation have not received much attention. Evidence is obtained from basic examples, or simply lacking. Few systematic empirical studies have been performed, and no industrial evidence is reported. From the study, we offer the following recommendations to move the field forward: to improve evaluation, researchers should make their assessment methods, tools and data publicly available; to deal with poor discussion of limitations, conferences/workshops should require an explicit section on limitations in engineering papers; to improve poor treatment of tradeoffs, this aspect should be an explicit subject of reviews; and finally, to enhance industrial validation, the best academy-industry efforts could be formally recognized by the community.}},
    author = {Weyns, D. and Iftikhar, M. U. and Malek, S. and Andersson, J.},
    booktitle = {Software Engineering for Adaptive and Self-Managing Systems (SEAMS), 2012 ICSE Workshop on},
    citeulike-article-id = {11526928},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/seams.2012.6224395},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6224395},
    doi = {10.1109/seams.2012.6224395},
    institution = {Linnaeus Univ., Vaxjo, Sweden},
    isbn = {978-1-4673-1788-7},
    issn = {2157-2305},
    keywords = {self-adaptive},
    month = jun,
    pages = {89--98},
    posted-at = {2012-10-22 19:56:46},
    priority = {4},
    publisher = {IEEE},
    title = {{Claims and supporting evidence for self-adaptive systems: A literature study}},
    url = {http://dx.doi.org/10.1109/seams.2012.6224395},
    year = {2012}
}

@phdthesis{citeulike:11331000,
    abstract = {{Modern, complex software systems (e-commerce, IT, critical infrastructures, etc.) are increasingly required to continue operation in the face of change, to self-adapt to accommodate shifting user priorities, resource variability, changing environments, and component failures. While manual oversight benefits from global problem contexts and flexible policies, human operators are costly and prone to error. Low-level, embedded mechanisms (exceptions, time-outs, etc.) are effective and timely for error recovery, but are local in scope to the point-of-failure, application-specific, and costly to modify when adaptation objectives change. An ideal solution leverages domain expertise, provides an end-to-end system perspective, adapts the system in a timely manner, and can be engineered cost-effectively.                 Architecture-based self-adaptation closes the "loop of control," using external mechanisms and the architecture model of the target system to adapt the system. An architecture model exposes important system properties and constraints, provides end-to-end problem contexts, and allows principled and automated adaptations. Existing architecture-based approaches specialize support for particular classes of systems and fixed sets of quality-of-service concerns; they are costly to develop for new systems and to evolve for new qualities. To overcome these limitations, we posit this thesis:                 We can provide software engineers the ability to add and evolve self-adaptation capabilities cost-effectively, for a wide range of software systems, and for multiple objectives, by defining a self-adaptation framework that factors out common adaptation mechanisms and provides explicit customization points to tailor self-adaptation capabilities for particular classes of systems, for multiple quality-of-service objectives.                 Our approach, embodied in a system called Rainbow, provides an engineering approach and a framework of mechanisms to monitor a target system and its environment, reflect observations into the system's architecture model, detect opportunities for improvements, select a course of action, and effect changes. The framework provides general and reusable infrastructures with well-defined customization points, a set of abstractions, and an adaptation engineering process, focusing engineers on adaptation concerns to systematically customize Rainbow to particular systems. To automate system self-adaptation, Rainbow provides a language, called Stitch, to represent routine human adaptation knowledge using a core set of adaptation concepts.}},
    author = {Cheng, Shang-Wen},
    citeulike-article-id = {11331000},
    citeulike-linkout-0 = {http://login.ezproxy1.lib.asu.edu/login?url=http://search.proquest.com/docview/304670799?accountid=4485},
    comment = {Software architectural style
---=note-separator=---
2010-08-07
---=note-separator=---
Self-adaptive system
---=note-separator=---
Tactic
---=note-separator=---
304670799
---=note-separator=---
English
---=note-separator=---
Copyright ProQuest, UMI Dissertations Publishing 2008
---=note-separator=---
n/a
---=note-separator=---
3305807
---=note-separator=---
Adaptation objective
---=note-separator=---
66569
---=note-separator=---
Cheng, Shang-Wen
---=note-separator=---
38750471
---=note-separator=---
Strategy
---=note-separator=---
9780549525257
---=note-separator=---
Applied sciences
---=note-separator=---
Utility preferences
---=note-separator=---
Software architecture
---=note-separator=---
1503402801
---=note-separator=---
0984: Computer science
---=note-separator=---
2008},
    editor = {Garlan, David},
    isbn = {9780549525257},
    journal = {ProQuest Dissertations and Theses},
    keywords = {0984computer, adaptation, applied, architectural, architecture, objective, preferences, science, sciences, self-adaptive, software, strategy, style, system, tactic, utility, *file-import-12-09-27},
    location = {United States -- Pennsylvania},
    posted-at = {2012-09-27 08:11:00},
    priority = {2},
    school = {Carnegie Mellon University},
    title = {{Rainbow: Cost-Effective software architecture-based self-adaptation}},
    url = {http://login.ezproxy1.lib.asu.edu/login?url=http://search.proquest.com/docview/304670799?accountid=4485},
    year = {2008}
}

@phdthesis{citeulike:11330468,
    abstract = {{Free/Libre Open Source Software (FLOSS) is the product of volunteers collaborating to build software in an open, public manner. The large number of FLOSS projects, combined with the data that is inherently archived with this online process, make studying this phenomenon attractive. Some FLOSS projects are very functional, well-known, and successful, such as Linux, the Apache Web Server, and Firefox. However, for every successful FLOSS project there are 100's of projects that are unsuccessful. These projects fail to attract sufficient interest from developers and users and become inactive or abandoned before useful functionality is achieved. The goal of this research is to better understand the open source development process and gain insight into why some FLOSS projects succeed while others fail.                 This dissertation presents an agent-based model of the FLOSS development process. The model is built around the concept that projects must manage to attract contributions from a limited pool of participants in order to progress. In the model developer and user agents select from a landscape of competing FLOSS projects based on perceived utility. Via the selections that are made and subsequent contributions, some projects are propelled to success while others remain stagnant and inactive.                 Findings from a diverse set of empirical studies of FLOSS projects are used to formulate the model, which is then calibrated on empirical data from multiple sources of public FLOSS data. The model is able to reproduce key characteristics observed in the FLOSS domain and is capable of making accurate predictions. The model is used to gain a better understanding of the FLOSS development process, including what it means for FLOSS projects to be successful and what conditions increase the probability of project success. It is shown that FLOSS is a producer-driven process, and project factors that are important for developers selecting projects are identified. In addition, it is shown that projects are sensitive to when core developers make contributions, and the exhibited bandwagon effects mean that some projects will be successful regardless of competing projects. Recommendations for improving software engineering in general based on the positive characteristics of FLOSS are also presented.}},
    author = {Radtke, Nicholas P.},
    citeulike-article-id = {11330468},
    citeulike-linkout-0 = {http://login.ezproxy1.lib.asu.edu/login?url=http://search.proquest.com/docview/912312156?accountid=4485},
    comment = {2012-07-06
---=note-separator=---
Software engineering
---=note-separator=---
57663451
---=note-separator=---
2011
---=note-separator=---
Agent-based model
---=note-separator=---
Copyright ProQuest, UMI Dissertations Publishing 2011
---=note-separator=---
Free/Libre Open Source Software
---=note-separator=---
Radtke, Nicholas Patrick
---=note-separator=---
2545389281
---=note-separator=---
3486867
---=note-separator=---
Open source software
---=note-separator=---
English
---=note-separator=---
n/a
---=note-separator=---
66569
---=note-separator=---
Empirically-grounded model
---=note-separator=---
Applied sciences
---=note-separator=---
9781267051288
---=note-separator=---
0984: Computer science
---=note-separator=---
912312156},
    editor = {Collofello, James S.},
    isbn = {9781267051288},
    journal = {ProQuest Dissertations and Theses},
    keywords = {0984computer, agent-based, applied, empirically-grounded, engineering, free-libre, model, open, science, sciences, software, source, *file-import-12-09-27},
    location = {United States -- Arizona},
    posted-at = {2012-09-27 07:41:05},
    priority = {2},
    school = {Arizona State University},
    title = {{FLOSSSim: Understanding the Free/Libre Open Source Software (FLOSS) Development Process through Agent-Based Modeling}},
    url = {http://login.ezproxy1.lib.asu.edu/login?url=http://search.proquest.com/docview/912312156?accountid=4485},
    year = {2011}
}

@phdthesis{citeulike:11330466,
    abstract = {{Introductory programming courses, also known as CS1, have a specific set of expected outcomes related to the learning of the most basic and essential computational concepts in computer science (CS). However, two of the most often heard complaints in such courses are that (1) they are divorced from the reality of application and (2) they make the learning of the basic concepts tedious. The concepts introduced in CS1 courses are highly abstract and not easily comprehensible. In general, the difficulty is intrinsic to the field of computing, often described as "too mathematical or too abstract."                 This dissertation presents a small-scale mixed method study conducted during the fall 2009 semester of CS1 courses at Arizona State University. This study explored and assessed students' comprehension of three core computational concepts--abstraction, arrays of objects, and inheritance--in both algorithm design and problem solving. Through this investigation students' profiles were categorized based on their scores and based on their mistakes categorized into instances of five computational thinking concepts: abstraction, algorithm, scalability, linguistics, and reasoning. It was shown that even though the notion of computational thinking is not explicit in the curriculum, participants possessed and/or developed this skill through the learning and application of the CS1 core concepts. Furthermore, problem-solving experiences had a direct impact on participants' knowledge skills, explanation skills, and confidence. Implications for teaching CS1 and for future research are also considered.}},
    author = {Billionniere, Elodie V.},
    citeulike-article-id = {11330466},
    citeulike-linkout-0 = {http://login.ezproxy1.lib.asu.edu/login?url=http://search.proquest.com/docview/906296230?accountid=4485},
    comment = {2012-07-05
---=note-separator=---
Cognitive learning
---=note-separator=---
906296230
---=note-separator=---
57663451
---=note-separator=---
2011
---=note-separator=---
Problem solving
---=note-separator=---
Billionniere, Elodie V.
---=note-separator=---
Copyright ProQuest, UMI Dissertations Publishing 2011
---=note-separator=---
0714: Science education
---=note-separator=---
9781267013415
---=note-separator=---
0525: Educational psychology
---=note-separator=---
Teaching
---=note-separator=---
2521604861
---=note-separator=---
Education
---=note-separator=---
Introductory programming courses
---=note-separator=---
English
---=note-separator=---
n/a
---=note-separator=---
66569
---=note-separator=---
Algorithm design
---=note-separator=---
3481732
---=note-separator=---
Applied sciences
---=note-separator=---
0984: Computer science
---=note-separator=---
Computational concepts},
    editor = {Collofello, James G.},
    isbn = {9781267013415},
    journal = {ProQuest Dissertations and Theses},
    keywords = {0525educational, 0714science, 0984computer, algorithm, applied, cognitive, computational, concepts, courses, design, education, introductory, learning, problem, programming, psychology, science, sciences, solving, teaching, *file-import-12-09-27},
    location = {United States -- Arizona},
    posted-at = {2012-09-27 07:35:04},
    priority = {4},
    school = {Arizona State University},
    title = {{Assessing Cognitive Learning of Analytical Problem Solving}},
    url = {http://login.ezproxy1.lib.asu.edu/login?url=http://search.proquest.com/docview/906296230?accountid=4485},
    year = {2011}
}

@article{citeulike:11177046,
    abstract = {{The concept of software architecture is important to the design of complex software  systems, as it provides a model of the large scale structural properties of the  system. It is possible to find several formal models to depict static distributed software  architecture. Nevertheless, notations for supporting architectural dynamism  and evolution are still difficult to find in the literature. We present a formal framework  to specify dynamic distributed applications to enable us to specify the dynamic  behaviour of reconfigurable systems. This framework will help the designer to check  the project suitability.  1}},
    author = {De Paula, Virginia C. and Justo, G. Ribeiro R. and Cunha, P. R. F.},
    citeulike-article-id = {11177046},
    citeulike-linkout-0 = {http://dx.doi.org/10.1.1.22.9458},
    citeulike-linkout-1 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.22.9458},
    doi = {10.1.1.22.9458},
    keywords = {architecture, distributed, dynamic, software},
    posted-at = {2012-09-02 17:41:22},
    priority = {0},
    title = {{Specifying Dynamic Distributed Software Architectures}},
    url = {http://dx.doi.org/10.1.1.22.9458},
    year = {0}
}

@electronic{citeulike:10974601,
    address = {http://avalanche123.com/blog/2012/06/13/how-i-built-a-self-adaptive-system/},
    author = {Shakirzyanov, Bulat},
    citeulike-article-id = {10974601},
    day = {13},
    keywords = {self-adaptive},
    month = jun,
    posted-at = {2012-07-31 07:57:29},
    priority = {0},
    title = {{How I Built a Self-Adaptive System}},
    year = {2012}
}

@techreport{citeulike:10974323,
    author = {The OSGi Alliance},
    citeulike-article-id = {10974323},
    month = mar,
    posted-at = {2012-07-31 00:44:42},
    priority = {4},
    title = {{OSGi Core Release 5}},
    year = {2012}
}

@book{citeulike:10974316,
    citeulike-article-id = {10974316},
    keywords = {architecture, software},
    month = aug,
    organization = {US. Department of Defense},
    posted-at = {2012-07-31 00:24:49},
    priority = {1},
    publisher = {US. Department of Defense},
    title = {{The DoDAF Architecture Framework Version 2.02}},
    year = {2010}
}

@book{citeulike:10974309,
    author = {Publishing, Van H.},
    citeulike-article-id = {10974309},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/9087532326},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/9087532326},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/9087532326},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/9087532326},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/9087532326/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/9087532326},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/9087532326},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN9087532326},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=9087532326&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/9087532326},
    day = {19},
    howpublished = {Paperback},
    isbn = {9087532326},
    keywords = {architecture},
    month = feb,
    posted-at = {2012-07-31 00:10:35},
    priority = {2},
    publisher = {Van Haren Publishing},
    title = {{Togaf Version 9 Enterprise Edition: A Pocket Guide (Togaf Series)}},
    url = {http://www.worldcat.org/isbn/9087532326},
    year = {2009}
}

@article{citeulike:10919396,
    abstract = {{We provide a survey of introductory computer architecture courses across the top 40 engineering schools as defined by the US News and World Report, in order to discover the differences between course content, style, and outcomes. We acquire this data from respective institutional websites and propose a schema to effectively represent it, recommending a centralized database for aggregate curriculum analysis. We find evidence to suggest variance among course titles, place in a CS educational sequence, and content. We highlight key examples from universities that are especially outside the norm, and provide commentary on evident trends.}},
    address = {USA},
    author = {Vaidyanathan, Nicholas and Billionniere, Elodie and Collofello, James},
    citeulike-article-id = {10919396},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1734835},
    issn = {1937-4771},
    journal = {J. Comput. Sci. Coll.},
    keywords = {computer, education, science},
    month = apr,
    number = {4},
    pages = {193--202},
    posted-at = {2012-07-24 00:50:16},
    priority = {0},
    publisher = {Consortium for Computing Sciences in Colleges},
    title = {{A preliminary comparative survey of computer architecture courses across the nation's top schools}},
    url = {http://portal.acm.org/citation.cfm?id=1734835},
    volume = {25},
    year = {2010}
}

@incollection{citeulike:7576349,
    abstract = {{Nowadays, applications must work in highly dynamic environments, where resources availability, among other factors, can evolve at runtime. To deal with this situation, applications must be self-adaptive , that is adapt themselves to their environment and its evolutions. Our goal is to enable systematic development of self-adaptive component-based applications using the Separation of Concerns principle: we consider adaptation to a specific execution context and its evolutions as a concern which should be treated separately from the rest of an application. In this paper, we first present the general approach we propose and the corresponding development framework and tools we are developing to support it. Then, in order to validate this approach, we use it on a small component-based application to show how it can be made self-adaptive.}},
    address = {Berlin, Heidelberg},
    author = {David, Pierre-Charles and Ledoux, Thomas},
    booktitle = {Distributed Applications and Interoperable Systems },
    chapter = {1},
    citeulike-article-id = {7576349},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/978-3-540-40010-3_1},
    citeulike-linkout-1 = {http://www.springerlink.com/content/fu232qa7wl6lrr2e},
    doi = {10.1007/978-3-540-40010-3_1},
    editor = {Stefani, Jean-Bernard and Demeure, Isabelle and Hagimont, Daniel},
    isbn = {978-3-540-20529-6},
    keywords = {architecture, self-adaptive, software},
    pages = {1--14},
    posted-at = {2012-07-07 03:44:54},
    priority = {4},
    publisher = {Springer Berlin / Heidelberg},
    series = {Lecture Notes in Computer Science},
    title = {{Towards a Framework for Self-adaptive Component-Based Applications Distributed Applications and Interoperable Systems}},
    url = {http://dx.doi.org/10.1007/978-3-540-40010-3_1},
    volume = {2893},
    year = {2003}
}

@article{citeulike:10698232,
    abstract = {{As part of the ARPA DSSA program, we are developing a methodology and integrating a suite of supporting tools to help specify, design, validate, package and deploy distributed intelligent control and management (DICAM) applications. Our domain of specialization is vehicle management systems, and our near-term focus is on advanced artillery systems. To attain higher levels of performance and functionality while reducing the time and cost required for development, we are recommending a generic control architecture suitable for use as a single intelligent agent or as multiple cooperating agents. This reference architecture combines a task-oriented domain controller with a meta-controller that schedules activities within the domain controller. The domain controller provides functions for model-based situation assessment and planning, and inter-controller communication. Typically, these functions are performed by components taken from a repository of reusable software. In tasks that are simple, deterministic or time-stressed, the modules may be complied into or replaced by conventional control algorithms. In complex, distributed, cooperative, non-deterministic or unstressed situations, these modules will usually exploit knowledge-based reasoning and deliberative control.To improve the controller development process, we are combining many of the best ideas from software engineering and knowledge engineering in a software environment. This environment includes a blackboard-like development workspace to represent both the software under development and the software development process itself. In this workspace, controllers are realized by mapping requirements into specializations of the reference architecture. The workspace also provides mechanisms for triggering applications of software tools, including knowledge-based software design assistants.We are currently in the third year of a five-year program. In conjunction with our collaborators at ARDEC, we have produced a schema for describing architectures which is being used by ARDEC's community of contractors, by an ARPA architecture specification project for the Joint Task Force ATD, and by the Stanford Knowledge Systems Laboratory. We have released the second major version of our development environment, which is being used at ARDEC and in support of this ARPA architecture specification program. This version of the development environment is focused on initial requirements, architecture, and design. It provides both CASE-like editing of architectures and textual browsing/editing of repository descriptions expressed in the schema mentioned above. In the remaining years of the program we will be expanding the suite of tools and improving the methodologies required to build intelligent, distributed, hybrid controllers capable of spanning multiple levels of organization and system hierarchy. This technology holds considerable promise for near-term value, and the associated methodology provides a candidate approach for realizing the goals of mega-programming practice in control software. In assessing this prospect, we discuss some of the remaining shortfalls in both methodology and tools that require additional research and development.}},
    address = {New York, NY, USA},
    author = {Terry, Allan and Roth, Frederick H. and Erman, Lee and Coleman, Norman and Devito, Mary and Papanagopoulos, George and Roth, Barbara H.},
    citeulike-article-id = {10698232},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=190679.190686},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/190679.190686},
    doi = {10.1145/190679.190686},
    issn = {0163-5948},
    journal = {SIGSOFT Softw. Eng. Notes},
    keywords = {architecture, artificial-intelligence, intelligent, software},
    month = oct,
    number = {4},
    pages = {68--76},
    posted-at = {2012-05-23 20:58:46},
    priority = {3},
    publisher = {ACM},
    title = {{Overview of Teknowledge's domain-specific software architecture program}},
    url = {http://dx.doi.org/10.1145/190679.190686},
    volume = {19},
    year = {1994}
}

@article{citeulike:798372,
    abstract = {{Our research focuses on highly sophisticated intelligent agents having three key characteristics requiring integration:* Adaptivity. An intelligent agent interacts with--influences and is influenced by--other dynamic entities in its environment. It perceives data from the environment, reasons to interpret perceptions, solve problems, make decisions, etc., acts to affect external entities and to achieve its goals. To keep pace with external events and avoid missing important demands and opportunities for action, the agent performs these functions asynchronously, concurrently, and selectively. Nonetheless, these functions must be integrated. Perception must inform reasoning and action. Reasoning must guide perception and action. Action must feed back on perception and reasoning.}},
    address = {New York, NY, USA},
    author = {Roth, Barbara H.},
    citeulike-article-id = {798372},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=122359},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/122344.122359},
    doi = {10.1145/122344.122359},
    issn = {0163-5719},
    journal = {SIGART Bull.},
    keywords = {architecture, artificial-intelligence, intelligent, software},
    month = jul,
    number = {4},
    pages = {79--81},
    posted-at = {2012-05-23 20:55:23},
    priority = {0},
    publisher = {ACM},
    title = {{An integrated architecture for intelligent agents}},
    url = {http://dx.doi.org/10.1145/122344.122359},
    volume = {2},
    year = {1991}
}

@article{citeulike:771510,
    abstract = {{The control problem—which of its potential actions should an AI system perform at each point in the problem-solving process?—is fundamental to all cognitive processes. This paper proposes eight behavioral goals for intelligent control and a 'blackboard control architecture' to achieve them. The architecture distinguishes domain and control problems, knowledge, and solutions. It enables AI systems to operate upon their own knowledge and behavior and to adapt to unanticipated problem-solving situations. The paper shows how opm, a blackboard control system for multiple-task planning, exploits these capabilities. It also shows how the architecture would replicate the control behavior of hearsay-ii and hasp. The paper contrasts the blackboard control architecture with three alternatives and shows how it continues an evolutionary progression of control architectures. The paper concludes with a summary of the blackboard control architecture's strengths and weaknesses.}},
    address = {Essex, UK},
    author = {Hayes-Roth, Barbara},
    citeulike-article-id = {771510},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=4005},
    citeulike-linkout-1 = {http://dx.doi.org/10.1016/0004-3702(85)90063-3},
    doi = {10.1016/0004-3702(85)90063-3},
    issn = {00043702},
    journal = {Artificial Intelligence},
    keywords = {architecture, artificial-intelligence, engineering, software},
    month = jul,
    number = {3},
    pages = {251--321},
    posted-at = {2012-05-23 20:46:13},
    priority = {3},
    publisher = {Elsevier Science Publishers Ltd.},
    title = {{A blackboard architecture for control}},
    url = {http://dx.doi.org/10.1016/0004-3702(85)90063-3},
    volume = {26},
    year = {1985}
}

@article{citeulike:8356624,
    abstract = {{ Presents an integrative theoretical framework to explain and to predict psychological changes achieved by different modes of treatment. This theory states that psychological procedures, whatever their form, alter the level and strength of self-efficacy. It is hypothesized that expectations of personal efficacy determine whether coping behavior will be initiated, how much effort will be expended, and how long it will be sustained in the face of obstacles and aversive experiences. Persistence in activities that are subjectively threatening but in fact relatively safe produces, through experiences of mastery, further enhancement of self-efficacy and corresponding reductions in defensive behavior. In the proposed model, expectations of personal efficacy are derived from 4 principal sources of information: performance accomplishments, vicarious experience, verbal persuasion, and physiological states. Factors influencing the cognitive processing of efficacy information arise from enactive, vicarious, exhortative, and emotive sources. The differential power of diverse therapeutic procedures is analyzed in terms of the postulated cognitive mechanism of operation. Findings are reported from microanalyses of enactive, vicarious, and emotive modes of treatment that support the hypothesized relationship between perceived self-efficacy and behavioral changes. (21/2 p ref) (PsycINFO Database Record (c) 2006 APA, all rights reserved) }},
    author = {Bandura, Albert},
    citeulike-article-id = {8356624},
    citeulike-linkout-0 = {http://dx.doi.org/10.1037/0033-295x.84.2.191},
    doi = {10.1037/0033-295x.84.2.191},
    issn = {0033-295X},
    journal = {Psychological Review},
    keywords = {psychology, self-efficacy},
    number = {2},
    pages = {191--215},
    posted-at = {2012-05-02 12:51:47},
    priority = {2},
    title = {{Self-efficacy: Toward a unifying theory of behavioral change.}},
    url = {http://dx.doi.org/10.1037/0033-295x.84.2.191},
    volume = {84},
    year = {1977}
}

@book{citeulike:200899,
    author = {Committee on Developments in the Science of Learning with additional material from the Committee on Learning Research and Educational Practice and Cognitive, And S. and Division of Behavioral and Social Sciences and Education and National Research Council},
    citeulike-article-id = {200899},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0309070368},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0309070368},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/288958575},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0309070368},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0309070368},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0309070368/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0309070368},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0309070368},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0309070368},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0309070368&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0309070368},
    day = {15},
    edition = {Exp Sub},
    howpublished = {Paperback},
    isbn = {0309070368},
    keywords = {education, learning},
    month = sep,
    posted-at = {2012-05-02 12:39:34},
    priority = {0},
    publisher = {National Academies Press},
    title = {{How People Learn: Brain, Mind, Experience, and School: Expanded Edition}},
    url = {http://www.worldcat.org/isbn/0309070368},
    year = {2000}
}
%54
@book{McBreen2001,
    author = {McBreen, Pete},
    citeulike-article-id = {2759198},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201733862},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201733862},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201733862},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201733862},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201733862/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201733862},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201733862},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201733862},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201733862&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201733862},
    day = {02},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0201733862},
    keywords = {engineering, software},
    month = sep,
    posted-at = {2012-05-02 12:33:36},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {{Software Craftsmanship: The New Imperative}},
    url = {http://www.worldcat.org/isbn/0201733862},
    year = {2001}
}
%23
@article{Dijkstra1968,
    abstract = {{An abstract is not available.}},
    address = {New York, NY, USA},
    author = {Dijkstra, Edsger W.},
    citeulike-article-id = {297784},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=362947},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/362929.362947},
    day = {1},
    doi = {10.1145/362929.362947},
    issn = {0001-0782},
    journal = {Commun. ACM},
    keywords = {engineering, software},
    month = mar,
    number = {3},
    pages = {147--148},
    posted-at = {2012-05-02 12:25:10},
    priority = {0},
    publisher = {ACM},
    title = {{Letters to the Editor: Go to Statement Considered Harmful}},
    url = {http://dx.doi.org/10.1145/362929.362947},
    volume = {11},
    year = {1968}
}
%1
@book{Naur1968,
    abstract = {{An abstract is not available.}},
    citeulike-article-id = {10624226},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1102020},
    editor = {Naur, Peter and Randell, Brian},
    keywords = {engineering, software},
    posted-at = {2012-05-02 11:59:56},
    priority = {0},
    title = {{Software Engineering: Report of a Conference Sponsored by the NATO Science Committee, Garmisch, Germany, 7-11 Oct. 1968, Brussels, Scientific Affairs Division, NATO}},
    url = {http://portal.acm.org/citation.cfm?id=1102020},
    year = {1969}
}

@book{citeulike:892203,
    abstract = {{What is understanding and how does it differ from knowledge? How can we determine the big ideas worth understanding? Why is understanding an important teaching goal, and how do we know when students have attained it? How can we create a rigorous and engaging curriculum that focuses on understanding and leads to improved student performance in today's high-stakes, standards-based environment? <P>Authors Grant Wiggins and Jay McTighe answer these and many other questions in this second edition of <i>Understanding by Design</i>. Drawing on feedback from thousands of educators around the world who have used the UbD framework since its introduction in 1998, the authors have greatly revised and expanded their original work to guide educators across the K-16 spectrum in the design of curriculum, assessment, and instruction. With an improved UbD Template at its core, the book explains the rationale of <i>backward design</i> and explores in greater depth the meaning of such key ideas as <i>essential questions</i> and <i>transfer tasks</i>. Readers will learn why the familiar coverage- and activity-based approaches to curriculum design fall short, and how a focus on the <i>six facets of understanding</i> can enrich student learning. With an expanded array of practical strategies, tools, and examples from all subject areas, the book demonstrates how the research-based principles of Understanding by Design apply to district frameworks as well as to individual units of curriculum. <P>Combining provocative ideas, thoughtful analysis, and tested approaches, <i>Understanding by Design, 2nd edition</i>, offers teacher-designers a clear path to the creation of curriculum that ensures better learning and a more stimulating experience for students and teachers alike.} {What is understanding and how does it differ from knowledge? How can we determine the big ideas worth understanding? Why is understanding an important teaching goal, and how do we know when students have attained it? How can we create a rigorous and engaging curriculum that focuses on understanding and leads to improved student performance in today's high-stakes, standards-based environment?  Authors Grant Wiggins and Jay McTighe answer these and many other questions in this second edition of Understanding by Design. Drawing on feedback from thousands of educators around the world who have used the UbD framework since its introduction in 1998, the authors have revised and expanded their original work to guide educators across the K-16 spectrum in the design of curriculum, assessment, and instruction. With an improved UbD Template at its core, the book explains the rationale of backward design and explores in greater depth the meaning of such key ideas as essential questions and transfer tasks. Readers will learn why the familiar coverage- and activity-based approaches to curriculum design fall short, and how a focus on the six facets of understanding can enrich student learning. With an expanded array of practical strategies, tools, and examples from all subject areas, the book demonstrates how the research-based principles of Understanding by Design apply to district frameworks as well as to individual units of curriculum.  Combining provocative ideas, thoughtful analysis, and tested approaches, Understanding by Design, Expanded 2nd Edition, offers teacher-designers a clear path to the creation of curriculum that ensures better learning and a more stimulating experience for students and teachers alike.}},
    author = {Wiggins, Grant P. and McTighe, Jay},
    citeulike-article-id = {892203},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/1416600353},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/1416600353},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/1416600353},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/1416600353},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/1416600353/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1416600353},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/1416600353},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN1416600353},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=1416600353&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/1416600353},
    day = {01},
    edition = {2nd Expanded},
    howpublished = {Paperback},
    isbn = {1416600353},
    keywords = {education},
    month = jul,
    posted-at = {2012-05-02 01:07:17},
    priority = {5},
    publisher = {Assn. for Supervision \& Curriculum Development},
    title = {{Understanding By Design}},
    url = {http://www.worldcat.org/isbn/1416600353},
    year = {2005}
}

@inproceedings{citeulike:10609348,
    abstract = {{Conviviality has been introduced as a social science concept for multiagent systems to highlight soft qualitative requirements like user friendliness of systems. In this paper we introduce formal conviviality measures for dependence networks using a coalitional game theoretic framework, which we contrast with more traditional efficiency and stability measures. Roughly, more opportunities to work with other people increases the conviviality, whereas larger coalitions may decrease the efficiency or stability of these involved coalitions. We first introduce assumptions and requirements, then we introduce a classification, and finally we introduce the conviviality measures. We use a running example from robotics to illustrate the measures.}},
    address = {Richland, SC},
    author = {Caire, Patrice and Alcalde, Baptiste and van der Torre, Leendert and Sombattheera, Chattrakul},
    booktitle = {The 10th International Conference on Autonomous Agents and Multiagent Systems - Volume 2},
    citeulike-article-id = {10609348},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=2031745},
    isbn = {0-9826571-6-1, 978-0-9826571-6-4},
    keywords = {metric, p2p},
    location = {Taipei, Taiwan},
    pages = {895--902},
    posted-at = {2012-04-26 03:40:44},
    priority = {2},
    publisher = {International Foundation for Autonomous Agents and Multiagent Systems},
    series = {AAMAS '11},
    title = {{Conviviality measures}},
    url = {http://portal.acm.org/citation.cfm?id=2031745},
    year = {2011}
}

@article{citeulike:10609340,
    author = {Kakade, Dhananjay},
    citeulike-article-id = {10609340},
    citeulike-linkout-0 = {http://dx.doi.org/10.1186/1753-6561-6-s1-o9},
    doi = {10.1186/1753-6561-6-s1-o9},
    issn = {1753-6561},
    journal = {BMC Proceedings},
    keywords = {metrics, p2p},
    number = {Suppl 1},
    pages = {O9+},
    posted-at = {2012-04-26 03:34:51},
    priority = {2},
    title = {{Community-based monitoring as an accountability tool: influence on rural health services in Maharashtra, India}},
    url = {http://dx.doi.org/10.1186/1753-6561-6-s1-o9},
    volume = {6},
    year = {2012}
}

@article{citeulike:10293542,
    abstract = {{
                Batteries are an attractive option for grid-scale energy storage applications because of their small footprint and flexible siting. A high-temperature (700 °C) magnesium-antimony (Mg||Sb) liquid metal battery comprising a negative electrode of Mg, a molten salt electrolyte (MgCl(2)-KCl-NaCl), and a positive electrode of Sb is proposed and characterized. Because of the immiscibility of the contiguous salt and metal phases, they stratify by density into three distinct layers. Cells were cycled at rates ranging from 50 to 200 mA/cm(2) and demonstrated up to 69\% DC-DC energy efficiency. The self-segregating nature of the battery components and the use of low-cost materials results in a promising technology for stationary energy storage applications.
                {\copyright} 2012 American Chemical Society
            }},
    author = {Bradwell, David J. and Kim, Hojong and Sirk, Aislinn H. and Sadoway, Donald R.},
    booktitle = {Journal of the American Chemical Society},
    citeulike-article-id = {10293542},
    citeulike-linkout-0 = {http://dx.doi.org/10.1021/ja209759s},
    citeulike-linkout-1 = {http://pubs.acs.org/doi/abs/10.1021/ja209759s},
    citeulike-linkout-2 = {http://view.ncbi.nlm.nih.gov/pubmed/22224420},
    citeulike-linkout-3 = {http://www.hubmed.org/display.cgi?uids=22224420},
    day = {1},
    doi = {10.1021/ja209759s},
    issn = {1520-5126},
    journal = {Journal of the American Chemical Society},
    keywords = {energy, powernet},
    month = feb,
    number = {4},
    pages = {1895--1897},
    pmid = {22224420},
    posted-at = {2012-04-25 23:49:57},
    priority = {2},
    publisher = {American Chemical Society},
    title = {{Magnesium-antimony liquid metal battery for stationary energy storage.}},
    url = {http://dx.doi.org/10.1021/ja209759s},
    volume = {134},
    year = {2012}
}

@inbook{citeulike:10606924,
    address = {Berlin, Heidelberg},
    author = {Vu, Le-Hung and Hauswirth, Manfred and Aberer, Karl},
    chapter = {30},
    citeulike-article-id = {10606924},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/11575771_30},
    doi = {10.1007/11575771_30},
    editor = {Meersman, Robert and Tari, Zahir},
    isbn = {978-3-540-29736-9},
    keywords = {information-assurance, trust},
    pages = {466--483},
    posted-at = {2012-04-25 11:52:32},
    priority = {2},
    publisher = {Springer Berlin Heidelberg},
    title = {{QoS-Based Service Selection and Ranking with Trust and Reputation Management}},
    url = {http://dx.doi.org/10.1007/11575771_30},
    volume = {3760},
    year = {2005}
}

@inproceedings{citeulike:258882,
    abstract = {{Peer-to-peer file-sharing networks are currently receiving much attention as a means of sharing and distributing information. However, as recent experience shows, the anonymous, open nature of these networks offers an almost ideal environment for the spread of self-replicating inauthentic files.We describe an algorithm to decrease the number of downloads of inauthentic files in a peer-to-peer file-sharing network that assigns each peer a unique global trust value, based on the peer's history of uploads. We present a distributed and secure method to compute global trust values, based on Power iteration. By having peers use these global trust values to choose the peers from whom they download, the network effectively identifies malicious peers and isolates them from the network.In simulations, this reputation system, called EigenTrust, has been shown to significantly decrease the number of inauthentic files on the network, even under a variety of conditions where malicious peers cooperate in an attempt to deliberately subvert the system.}},
    address = {New York, NY, USA},
    author = {Kamvar, Sepandar D. and Schlosser, Mario T. and Molina, Hector G.},
    booktitle = {Proceedings of the 12th International Conference on World Wide Web},
    citeulike-article-id = {258882},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=775242},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/775152.775242},
    doi = {10.1145/775152.775242},
    isbn = {1-58113-680-3},
    keywords = {networking, p2p},
    location = {Budapest, Hungary},
    pages = {640--651},
    posted-at = {2012-04-25 11:49:47},
    priority = {2},
    publisher = {ACM},
    series = {WWW '03},
    title = {{The Eigentrust Algorithm for Reputation Management in P2P Networks}},
    url = {http://dx.doi.org/10.1145/775152.775242},
    year = {2003}
}
%13
@book{Shalloway2004,
    abstract = {{In the approximately ten years since the publication of the seminal work in
thefield of design patterns (Gamma et al's Design Patterns), this practice
hasmoved from being an esoteric part of computer science research to
themainstream of software engineering. Yet despite their widespread
acceptance,design patterns are frequently misunderstood. These authors learned
patternsthe hard way, and their original aim in writing this book (providing
the readerwith a gentle yet thorough introduction to design patterns)
continues in thesecond edition. This book is the perfect book to read before
the reader tries totackle Gamma's famous work, and has been updated to reflect
recent trendsand developments in software design.}},
    author = {Shalloway, Alan and Trott, James R.},
    citeulike-article-id = {1362219},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321247140},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321247140},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321247140},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321247140},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321247140/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321247140},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321247140},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321247140},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321247140&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321247140},
    day = {22},
    edition = {2},
    howpublished = {Paperback},
    isbn = {0321247140},
    keywords = {design, patterns, software},
    month = oct,
    posted-at = {2012-04-25 11:48:32},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {{Design Patterns Explained: A New Perspective on Object-Oriented Design (2nd Edition)}},
    url = {http://www.worldcat.org/isbn/0321247140},
    year = {2004}
}
%11
@book{Freeman2004,
    author = {Freeman, Eric and Bates, Bert and Sierra, Kathy and Robson, Elisabeth},
    citeulike-article-id = {205342},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0596007124},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0596007124},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0596007124},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0596007124},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0596007124/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0596007124},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0596007124},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0596007124},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0596007124&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0596007124},
    day = {01},
    edition = {1st},
    howpublished = {Paperback},
    isbn = {0596007124},
    keywords = {design, patterns, software},
    month = nov,
    posted-at = {2012-04-25 11:46:59},
    priority = {0},
    publisher = {O'Reilly Media},
    title = {{Head First Design Patterns: A Brain-Friendly Guide}},
    url = {http://www.worldcat.org/isbn/0596007124},
    year = {2004}
}

@article{citeulike:167654,
    abstract = {{The 4+1 View Model organizes a description of a software architecture using five concurrent views, each of which addresses a specific set of concerns. Architects capture their design decisions in four views and use the fifth view to illustrate and validate them. The logical view describes the design's object model when an object-oriented design method is used. To design an application that is very data driven, you can use an alternative approach to develop some other form of logical view, such as an entity-relationship diagram. The process view describes the design's concurrency and synchronization aspects. The physical view describes the mapping of the software onto the hardware and reflects its distributed aspect. The development view describes the software's static organization in its development environment}},
    address = {Los Alamitos, CA, USA},
    author = {Kruchten, Philippe B.},
    citeulike-article-id = {167654},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=625529},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/52.469759},
    citeulike-linkout-2 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=469759},
    doi = {10.1109/52.469759},
    institution = {Rational Software Corp., Richmond, BC, Canada},
    issn = {0740-7459},
    journal = {Software, IEEE},
    keywords = {architecture, design, software},
    month = nov,
    number = {6},
    pages = {42--50},
    posted-at = {2012-04-25 11:39:49},
    priority = {0},
    publisher = {IEEE},
    title = {{The 4+1 View Model of architecture}},
    url = {http://dx.doi.org/10.1109/52.469759},
    volume = {12},
    year = {1995}
}

@article{citeulike:10606837,
    abstract = {{Privacy -- the protection of information from unauthorized disclosure -- is increasingly scarce on the Internet. The lack of privacy is particularly true for popular peer-to-peer data sharing applications such as BitTorrent where user behavior is easily monitored by third parties. Anonymizing overlays such as Tor and Freenet can improve user privacy, but only at a cost of substantially reduced performance. Most users are caught in the middle, unwilling to sacrifice either privacy or performance. In this paper, we explore a new design point in this tradeoff between privacy and performance. We describe the design and implementation of a new P2P data sharing protocol, called OneSwarm, that provides users much better privacy than BitTorrent and much better performance than Tor or Freenet. A key aspect of the OneSwarm design is that users have explicit configurable control over the amount of trust they place in peers and in the sharing model for their data: the same data can be shared publicly, anonymously, or with access control, with both trusted and untrusted peers. OneSwarm's novel lookup and transfer techniques yield a median factor of 3.4 improvement in download times relative to Tor and a factor of 6.9 improvement relative to Freenet. OneSwarm is publicly available and has been downloaded by hundreds of thousands of users since its release.}},
    address = {New York, NY, USA},
    author = {Isdal, Tomas and Piatek, Michael and Krishnamurthy, Arvind and Anderson, Thomas},
    citeulike-article-id = {10606837},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1851198},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1851275.1851198},
    doi = {10.1145/1851275.1851198},
    issn = {0146-4833},
    journal = {SIGCOMM Comput. Commun. Rev.},
    keywords = {networking, p2p},
    month = aug,
    number = {4},
    pages = {111--122},
    posted-at = {2012-04-25 11:23:22},
    priority = {2},
    publisher = {ACM},
    title = {{Privacy-preserving P2P data sharing with OneSwarm}},
    url = {http://dx.doi.org/10.1145/1851275.1851198},
    volume = {40},
    year = {2010}
}

@inproceedings{citeulike:10606835,
    abstract = {{With the popularity of BitTorrent, improving its performance has been an active research area. Super-seeding, a special upload policy for initial seeds, improves the efficiency in producing multiple seeds and reduces the uploading cost of the initial seeders. However, the overall benefit of super seeding remains a question. In this paper, we conduct an experimental study over the performance of super-seeding scheme of BitTornado. We attempt to answer the following questions: whether and how much super-seeding saves uploading cost, whether the download time of all peers is decreased by super-seeding, and in which scenario super-seeding performs worse. With varying seed bandwidth and peer behavior, we analyze the overall download time and upload cost of super seeding scheme during random period tests over 250 widely distributed PlanetLab nodes. The results show that benefits of super-seeding depend highly on the upload bandwidth of the initial seeds and the behavior of individual peers. Our work not only provides reference for the potential adoption of super-seeding in BitTorrent, but also much insights for the balance of enhancing Quality of Experience (QoE) and saving cost for a large-scale BitTorrent-like P2P commercial application.}},
    author = {Chen, Z. and Chen, Y. and Lin, C. and Nivargi, V. and Cao, P.},
    booktitle = {2008 IEEE International Conference on Communications},
    citeulike-article-id = {10606835},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/icc.2008.20},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4533056},
    doi = {10.1109/icc.2008.20},
    isbn = {978-1-4244-2075-9},
    keywords = {networking, p2p},
    location = {Beijing, China},
    pages = {65--69},
    posted-at = {2012-04-25 11:20:14},
    priority = {2},
    publisher = {IEEE},
    title = {{Experimental Analysis of Super-Seeding in BitTorrent}},
    url = {http://dx.doi.org/10.1109/icc.2008.20},
    year = {2008}
}

@inproceedings{citeulike:10606831,
    abstract = {{BitTorrent (BT) is currently the main P2P protocol used for sharing large files over the Internet. It is therefore important to understand the performance characteristics of existing real-world BT implementations (clients). In this work, we measure the download speed of over 10 million BT users over one month. Surprisingly, our measurements show that the two most famous BT clients, namely uTorrent and Vuze (Azureus), achieve different download speeds for the same set of torrents. In particular, we observe that uTorrent users achieve 16\% faster download speed than users of Vuze in our data set. To shed light to the cause of this difference, we reverse engineer the two clients to infer their individual design choices. Our study shows that the two clients differ in two important areas: (a) how they manage their neighborhood, and (b) how they distribute their upload capacity to their peers. We speculate that the cause of the mismatch in download speeds can be attribute to these differences. We hope that our findings will open the door for new research efforts to better understand the impact of design choices in the performance of real-world BT implementations.}},
    address = {Berkeley, CA, USA},
    author = {Iliofotou, Marios and Siganos, Georgos and Yang, Xiaoyuan and Rodriguez, Pablo},
    booktitle = {Proceedings of the 9th international conference on Peer-to-peer systems},
    citeulike-article-id = {10606831},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1863156},
    keywords = {networking, p2p},
    location = {San Jose, CA},
    pages = {11},
    posted-at = {2012-04-25 11:17:29},
    priority = {2},
    publisher = {USENIX Association},
    series = {IPTPS'10},
    title = {{Comparing BitTorrent clients in the wild: the case of download speed}},
    url = {http://portal.acm.org/citation.cfm?id=1863156},
    year = {2010}
}

@article{citeulike:146367,
    abstract = {{ABSTRACT This paper discusses Betty's Brain, a teachable agent in the domain of river ecosystems that combines learning by teaching with self-regulation mentoring to promote deep learning and understanding. Two studies demonstrate the effectiveness of this system. The first study focused on components that define student-teacher interactions in the learning by teaching task. The second study examined the value of adding meta-cognitive strategies that governed Betty's behavior and self-regulation hints provided by a mentor agent. The study compared three versions: a system where the student was tutored by a pedagogical agent, a learning by teaching system, where students taught a baseline version of Betty, and received tutoring help from the mentor, and a learning by teaching system, where Betty was enhanced to include self-regulation strategies, and the mentor provided help on domain material on how to become better learners and better teachers. Results indicate that the addition of the self-regulated Betty and the self-regulation mentor better prepared students to learn new concepts later, even when they no longer had access to the SRL environment.}},
    author = {Biswas, Gautam and Leelawong, Krittaya and Schwartz, Daniel and Vye, Nancy and The Teachable Agents Group at Vanderbilt},
    citeulike-article-id = {146367},
    citeulike-linkout-0 = {http://dx.doi.org/10.1080/08839510590910200},
    citeulike-linkout-1 = {http://www.ingentaconnect.com/content/tandf/uaai/2005/00000019/F0020003/art00008},
    citeulike-linkout-2 = {http://www.tandfonline.com/doi/abs/10.1080/08839510590910200},
    day = {9},
    doi = {10.1080/08839510590910200},
    issn = {0883-9514},
    journal = {Applied Artificial Intelligence},
    keywords = {artificial-intelligence, intelligent, systems, tutoring},
    month = mar,
    number = {3-4},
    pages = {363--392},
    posted-at = {2012-04-24 00:43:48},
    priority = {0},
    publisher = {Taylor \& Francis},
    title = {LEARNING BY TEACHING: A NEW AGENT PARADIGM FOR EDUCATIONAL SOFTWARE},
    url = {http://dx.doi.org/10.1080/08839510590910200},
    volume = {19},
    year = {2005}
}

@article{citeulike:10558356,
    abstract = {{AutoTutor is a computer tutor that simulates the discourse patterns and pedagogical strategies of a typical human tutor. AutoTutor is designed to assist college students in learning the fundamentals of hardware, operating systems, and the Internet in an introductory computer literacy course. Most tutors in school systems are not highly trained in tutoring techniques and have only a modest expertise on the tutoring topic, but they are surprisingly effective in producing learning gains in students. We have dissected the discourse and pedagogical strategies these unskilled tutors exhibit by analyzing approximately 100 hours of naturalistic tutoring sessions. These mechanisms are implemented in AutoTutor. AutoTutor presents questions and problems from a curriculum script, attempts to comprehend learner contributions that are entered by keyboard, formulates dialog moves that are sensitive to the learner's contributions (such as short feedback, pumps, prompts, elaborations, corrections, and hints), and delivers the dialog moves with a talking head. AutoTutor has seven modules: a curriculum script, language extraction, speech act classification, latent semantic analysis, topic selection, dialog move generation, and a talking head.}},
    author = {Graesser, Arthur C. and Wiemer-Hastings, Katja and Wiemer-Hastings, Peter and Kreuz, Roger},
    citeulike-article-id = {10558356},
    citeulike-linkout-0 = {http://dx.doi.org/10.1016/s1389-0417(99)00005-4},
    doi = {10.1016/s1389-0417(99)00005-4},
    issn = {13890417},
    journal = {Cognitive Systems Research},
    keywords = {artificial-intelligence, intelligent, systems, tutoring},
    month = dec,
    number = {1},
    pages = {35--51},
    posted-at = {2012-04-24 00:41:22},
    priority = {0},
    title = {{AutoTutor: A simulation of a human tutor}},
    url = {http://dx.doi.org/10.1016/s1389-0417(99)00005-4},
    volume = {1},
    year = {1999}
}

@article{citeulike:4647159,
    abstract = {{The Andes system demonstrates that student learning can be significantly increased by upgrading only their homework problem-solving support. Although Andes is called an intelligent tutoring system, it actually replaces only the students' pencil and paper as they do problem-solving homework. Students do the same problems as before, study the same textbook, and attend the same lectures, labs and recitations. Five years of experimentation at the United States Naval Academy indicates that Andes significantly improves student learning. Andes' key feature appears to be the grain-size of interaction. Whereas most tutoring systems have students enter only the answer to a problem, Andes has students enter a whole derivation, which may consist of many steps, such as drawing vectors, drawing coordinate systems, defining variables and writing equations. Andes gives feedback after each step. When the student asks for help in the middle of problem-solving, Andes gives hints on what's wrong with an incorrect step or on what kind of step to do next. Thus, the grain size of Andes' interaction is a single step in solving the problem, whereas the grain size of a typical tutoring system's interaction is the answer to the problem. This report is a comprehensive description of Andes. It describes Andes' pedagogical principles and features, the system design and implementation, the evaluations of pedagogical effectiveness, and our plans for dissemination.}},
    address = {Amsterdam, The Netherlands, The Netherlands},
    author = {Vanlehn, Kurt and Lynch, Collin and Schulze, Kay and Shapiro, Joel A. and Shelby, Robert and Taylor, Linwood and Treacy, Don and Weinstein, Anders and Wintersgill, Mary},
    citeulike-article-id = {4647159},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1434932},
    issn = {1560-4292},
    journal = {Int. J. Artif. Intell. Ed.},
    keywords = {artificial-intelligence, intelligent, systems, tutoring},
    month = aug,
    number = {3},
    pages = {147--204},
    posted-at = {2012-04-24 00:36:35},
    priority = {0},
    publisher = {IOS Press},
    title = {{The Andes Physics Tutoring System: Lessons Learned}},
    url = {http://portal.acm.org/citation.cfm?id=1434932},
    volume = {15},
    year = {2005}
}

@article{citeulike:10602153,
    author = {Cognition and Technology Group at Vanderbilt},
    citeulike-article-id = {10602153},
    citeulike-linkout-0 = {http://dx.doi.org/10.1207/s15326985ep2703_3},
    citeulike-linkout-1 = {http://www.tandfonline.com/doi/abs/10.1207/s15326985ep2703_3},
    day = {1},
    doi = {10.1207/s15326985ep2703_3},
    journal = {Educational Psychologist},
    keywords = {learning},
    month = jun,
    number = {3},
    pages = {291--315},
    posted-at = {2012-04-24 00:34:13},
    priority = {2},
    publisher = {Routledge},
    title = {{The Jasper Series as an Example of Anchored Instruction: Theory, Program Description, and Assessment Data}},
    url = {http://dx.doi.org/10.1207/s15326985ep2703_3},
    volume = {27},
    year = {1992}
}

@article{springerlink:10.1007/BF01101800,
    author = {Shute, Valerie J.},
    citeulike-article-id = {10602082},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/BF01101800},
    comment = {10.1007/BF01101800},
    doi = {10.1007/BF01101800},
    journal = {User Modeling and User-Adapted Interaction},
    keywords = {artificial-intelligence, intelligent, systems, tutoring},
    pages = {1--44},
    posted-at = {2012-04-23 23:29:03},
    priority = {2},
    publisher = {Springer Netherlands},
    title = {{SMART: Student modeling approach for responsive tutoring}},
    url = {http://dx.doi.org/10.1007/BF01101800},
    volume = {5},
    year = {1995}
}

@book{citeulike:10602076,
    abstract = {{This chapter reviews the research literature concerned with the student modeling component of intelligent tutoring systems. An intelligent tutoring system, or ITS, is a computer program that instructs the student in an intelligent way. There is no accepted definition of what it means to teach intelligently. However, a characteristic shared by many ITSs is that they infer a model of the student's current understanding of the subject matter and use this individualized model to adapt the instruction to the student's needs. The component of an ITS that represents the student's current state of knowledge is called the student model. Inferring a student model is called diagnosis because it is much like the medical task of inferring a hidden physiological state (i.e., a disease) from observable signs (i.e., symptoms). An ITS diagnostic system uncovers a hidden cognitive state (the student's knowledge of the subject matter) from observable behavior. The student model and the diagnostic module are tightly interwoven. The student model is a data structure, and diagnosis is a process that manipulates it. The two components must be designed together. This design problem is called the student modeling problem. This chapter reviews solutions that have been found to the student modeling problem and discusses the techniques that have been discovered. (kr).}},
    author = {VanLehn, Kurt and Carnegie-Mellon Univ Pittsburgh Pa Dept Of Psychology},
    citeulike-article-id = {10602076},
    citeulike-linkout-0 = {http://www.worldcat.org/oclc/227757929},
    keywords = {artificial-intelligence, intelligent, systems, tutoring},
    posted-at = {2012-04-23 23:23:42},
    priority = {4},
    publisher = {Defense Technical Information Center},
    title = {{Student Modelling.}},
    url = {http://www.worldcat.org/oclc/227757929},
    year = {1987}
}

@article{citeulike:10602070,
    abstract = {{Tutoring systems are described as having two loops. The outer loop executes once for each task, where a task usually consists of solving a complex, multi-step problem. The inner loop executes once for each step taken by the student in the solution of a task. The inner loop can give feedback and hints on each step. The inner loop can also assess the student's evolving competence and update a student model, which is used by the outer loop to select a next task that is appropriate for the student. For those who know little about tutoring systems, this description is meant as a demystifying introduction. For tutoring system experts, this description illustrates that although tutoring systems differ widely in their task domains, user interfaces, software structures, knowledge bases, etc., their behaviors are in fact quite similar.}},
    author = {VanLehn, Kurt},
    citeulike-article-id = {10602070},
    citeulike-linkout-0 = {http://iospress.metapress.com/content/AL6R85MM7C6QF7DR},
    day = {1},
    journal = {International Journal of Artificial Intelligence in Education},
    keywords = {artificial-intelligence, intelligent, system, tutoring},
    month = jan,
    number = {3},
    pages = {227--265},
    posted-at = {2012-04-23 23:18:24},
    priority = {0},
    title = {{The Behavior of Tutoring Systems}},
    url = {http://iospress.metapress.com/content/AL6R85MM7C6QF7DR},
    volume = {16},
    year = {2006}
}

@article{citeulike:10599303,
    abstract = {{As the number of applications for human-robot teaming continue to rise, there is an increasing need for planning technologies that can guide robots in such teaming scenarios. In this article, we focus on adapting planning technology to Urban Search And Rescue (USAR) with a human-robot team. We start by showing that several aspects of state-of-the-art planning technology, including temporal planning, partial satisfaction planning, and replanning, can be gainfully adapted to this scenario. We then note that human-robot teaming also throws up an additional critical challenge, namely, enabling existing planners, which work under closed-world assumptions, to cope with the open worlds that are characteristic of teaming problems such as USAR. In response, we discuss the notion of conditional goals, and describe how we represent and handle a specific class of them called open world quantified goals. Finally, we describe how the planner, and its open world extensions, are integrated into a robot control architecture, and provide an empirical evaluation over USAR experimental runs to establish the effectiveness of the planning components.}},
    address = {New York, NY, USA},
    author = {Talamadupula, Kartik and Benton, J. and Kambhampati, Subbarao and Schermerhorn, Paul and Scheutz, Matthias},
    citeulike-article-id = {10599303},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1869403},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1869397.1869403},
    doi = {10.1145/1869397.1869403},
    issn = {2157-6904},
    journal = {ACM Trans. Intell. Syst. Technol.},
    keywords = {agent-oriented, artificial-intelligence, robotics},
    month = dec,
    number = {2},
    posted-at = {2012-04-22 07:50:57},
    priority = {2},
    publisher = {ACM},
    title = {{Planning for human-robot teaming in open worlds}},
    url = {http://dx.doi.org/10.1145/1869397.1869403},
    volume = {1},
    year = {2010}
}
%58
@article{Miller1956,
    author = {MILLER, G. A.},
    citeulike-article-id = {1089248},
    citeulike-linkout-0 = {http://view.ncbi.nlm.nih.gov/pubmed/13310704},
    citeulike-linkout-1 = {http://www.hubmed.org/display.cgi?uids=13310704},
    issn = {0033-295X},
    journal = {Psychological review},
    keywords = {information-processing, memory},
    month = mar,
    number = {2},
    pages = {81--97},
    pmid = {13310704},
    posted-at = {2012-04-22 07:42:00},
    priority = {0},
    title = {{The magical number seven plus or minus two: some limits on our capacity for processing information.}},
    url = {http://view.ncbi.nlm.nih.gov/pubmed/13310704},
    volume = {63},
    year = {1956}
}

@inproceedings{citeulike:10571300,
    abstract = {{Multi-Agent Systems (MAS) architectures are gaining popularity over traditional ones for building open, distributed, and evolving software required by today's corporate IT applications such as eBusiness systems, web services or enterprise knowledge bases. Since the fundamental concepts of multi-agent systems are social and intentional rather than object, functional, or implementation-oriented, the design of MAS architectures can be eased by using social patterns. They are detailed agent-oriented design idioms to describe MAS architectures as composed of autonomous agents that interact and coordinate to achieve their intentions, like actors in human organizations. This paper presents social patterns and focuses on a framework aimed to gain insight into these patterns. The framework can be integrated into agent-oriented software engineering methodologies used to build MAS. We consider the Broker social pattern as a combination of patterns and use it to illustrate the framework. The automatation of patterns design is also overviewed. 1}},
    author = {Do, Tung T. and Kolp, Manuel and Faulkner, St\'{e}phane and Pirotte, Alain},
    booktitle = {In S. K. Chang (Eds.), Advances in Software Engineering and Knowledge Engineering},
    citeulike-article-id = {10571300},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.104.7529},
    keywords = {agent-oriented, design, engineering, patterns, software},
    posted-at = {2012-04-16 09:52:59},
    priority = {0},
    title = {{Introspecting Agent-Oriented Design Patterns}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.104.7529},
    year = {2004}
}

@article{citeulike:460430,
    abstract = {{Agent-based complex systems are dynamic networks of many interacting agents; examples include ecosystems, financial markets, and cities. The search for general principles underlying the internal organization of such systems often uses bottom-up simulation models such as cellular automata and agent-based models. No general framework for designing, testing, and analyzing bottom-up models has yet been established, but recent advances in ecological modeling have come together in a general strategy we call pattern-oriented modeling. This strategy provides a unifying framework for decoding the internal organization of agent-based complex systems and may lead toward unifying algorithmic theories of the relation between adaptive behavior and system complexity.}},
    author = {Grimm, Volker and Revilla, Eloy and Berger, Uta and Jeltsch, Florian and Mooij, Wolf M. and Railsback, Steven F. and Thulke, Hans-Hermann and Weiner, Jacob and Wiegand, Thorsten and DeAngelis, Donald L.},
    citeulike-article-id = {460430},
    citeulike-linkout-0 = {http://dx.doi.org/10.1126/science.1116681},
    citeulike-linkout-1 = {http://www.sciencemag.org/content/310/5750/987.abstract},
    citeulike-linkout-2 = {http://www.sciencemag.org/content/310/5750/987.full.pdf},
    citeulike-linkout-3 = {http://www.sciencemag.org/cgi/content/abstract/310/5750/987},
    citeulike-linkout-4 = {http://view.ncbi.nlm.nih.gov/pubmed/16284171},
    citeulike-linkout-5 = {http://www.hubmed.org/display.cgi?uids=16284171},
    day = {11},
    doi = {10.1126/science.1116681},
    issn = {1095-9203},
    journal = {Science},
    keywords = {agent-oriented, patterns},
    month = nov,
    number = {5750},
    pages = {987--991},
    pmid = {16284171},
    posted-at = {2012-04-16 09:49:58},
    priority = {0},
    publisher = {American Association for the Advancement of Science},
    title = {{Pattern-Oriented Modeling of Agent-Based Complex Systems: Lessons from Ecology}},
    url = {http://dx.doi.org/10.1126/science.1116681},
    volume = {310},
    year = {2005}
}

@inproceedings{citeulike:10571296,
    abstract = {{In this paper, I will show how the now popular concept of software patterns can be used in agent-oriented software engineering. To this end, I will present a possible structure of a pattern catalog for agent-oriented patterns and introduce a pattern description scheme that accounts for the specific needs of agent patterns. Then, I will provide two examples for how this scheme can be used to describe actual agent patterns.}},
    address = {Berlin, Heidelberg},
    author = {Lind, J\"{u}rgen},
    booktitle = {Proceedings of the 3rd international conference on Agent-oriented software engineering III},
    citeulike-article-id = {10571296},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1754732},
    isbn = {3-540-00713-X},
    keywords = {agent-oriented, design, engineering, patterns, software},
    location = {Bologna, Italy},
    pages = {47--58},
    posted-at = {2012-04-16 09:47:13},
    priority = {0},
    publisher = {Springer-Verlag},
    series = {AOSE'02},
    title = {{Patterns in agent-oriented software engineering}},
    url = {http://portal.acm.org/citation.cfm?id=1754732},
    year = {2003}
}

@inproceedings{citeulike:6741568,
    abstract = {{This article presents Gaia: a methodology for agent-oriented analysis and design. The Gaia methodology is both general, in that it is applicable to a wide range of multi-agent systems, and comprehensive, in that it deals with both the macro-level (societal) and the micro-level (agent) aspects of systems. Gaia is founded on the view of a multi-agent system as a computational organisation consisting of various interacting roles. We illustrate Gaia through a case study (an agent-based business process management system).}},
    author = {Wooldridge, Michael and Jennings, Nicholas R. and Kinny, David},
    booktitle = {Journal of Autonomous Agents and Multi-Agent Systems},
    citeulike-article-id = {6741568},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.17.2121},
    journal = {Journal of Autonomous Agents and Multi-Agent Systems},
    keywords = {agent-oriented, design, engineering, software},
    pages = {285--312},
    posted-at = {2012-04-16 09:39:43},
    priority = {0},
    title = {{The Gaia Methodology For Agent-Oriented Analysis And Design}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.17.2121},
    volume = {3},
    year = {2000}
}

@article{citeulike:7356680,
    abstract = {{Agent-based computing is a promising approach for developing applications in complex domains. However, despite the great deal of research in the area, a number of challenges still need to be faced (i) to make agent-based computing a widely accepted paradigm in software engineering practice, and (ii) to turn agent-oriented software abstractions into practical tools for facing the complexity of modern application areas. In this paper, after a short introduction to the key concepts of agent-based computing (as they pertain to software engineering), we characterise the emerging key issues in multiagent systems (MASs) engineering. In particular, we show that such issues can be analysed in terms of three different  ” scales of observation”, i.e., in analogy with the scales of observation of physical phenomena, in terms of micro , macro , and meso scales. Based on this characterisation, we discuss, for each scale of observation, what are the peculiar engineering issues arising, the key research challenges to be solved, and the most promising research directions to be explored in the future.}},
    author = {Zambonelli, Franco and Omicini, Andrea},
    citeulike-article-id = {7356680},
    citeulike-linkout-0 = {http://dx.doi.org/10.1023/b:agnt.0000038028.66672.1e},
    citeulike-linkout-1 = {http://www.springerlink.com/content/jmm61l312478610j},
    day = {1},
    doi = {10.1023/b:agnt.0000038028.66672.1e},
    issn = {1387-2532},
    journal = {Autonomous Agents and Multi-Agent Systems},
    keywords = {agent-oriented, engineering, software},
    month = nov,
    number = {3},
    pages = {253--283},
    posted-at = {2012-04-15 03:15:20},
    priority = {0},
    publisher = {Springer Netherlands},
    title = {{Challenges and Research Directions in Agent-Oriented Software Engineering}},
    url = {http://dx.doi.org/10.1023/b:agnt.0000038028.66672.1e},
    volume = {9},
    year = {2004}
}

@inproceedings{citeulike:10562715,
    abstract = {{Ascribing mental qualities like beliefs, intentions and wants to a machine is sometimes correct if done conservatively and is sometimes necessary to express what is known about its state. We propose some new definitional tools for this: definitions relative to an approximate theory and second order structural definitions. 1}},
    author = {Mccarthy, John},
    booktitle = {In Philosophical Perspectives in Artificial Intelligence},
    citeulike-article-id = {10562715},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.141.6639},
    keywords = {agent-oriented, artificial-intelligence},
    posted-at = {2012-04-13 19:30:23},
    priority = {0},
    title = {{Ascribing mental qualities to machines}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.141.6639},
    year = {1979}
}

@inproceedings{citeulike:10562214,
    author = {Cross, Bradford},
    booktitle = {Clojure/West},
    citeulike-article-id = {10562214},
    day = {17},
    keywords = {abstractions, clojure, composable, finely, grained, prismatic},
    location = {San Jose, CA},
    month = mar,
    posted-at = {2012-04-13 16:11:00},
    priority = {0},
    title = {{Why Prismatic Goes Faster With Clojure}},
    year = {2012}
}

@book{citeulike:6583482,
    author = {Martin, Robert C. and Martin, Micah},
    citeulike-article-id = {6583482},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0131857258},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0131857258},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0131857258},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0131857258},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0131857258/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0131857258},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0131857258},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0131857258},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0131857258&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0131857258},
    day = {30},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0131857258},
    month = jul,
    posted-at = {2012-04-13 15:52:49},
    priority = {2},
    publisher = {Prentice Hall},
    title = {{Agile Principles, Patterns, and Practices in C\#}},
    url = {http://www.worldcat.org/isbn/0131857258},
    year = {2006}
}

@inproceedings{citeulike:10541306,
    abstract = {{This paper introduces the capabilities of a general-purpose modeling and simulation approach named DEVS in multi-agent educational systems. Simulation provides both qualitative and quantitative information about correctness and efficiency which can help validate a multi-agent system (architectural) design before its actual implementation and thus deployment. Dynamic agent data helps designers to modify, refine or even propose new agent abstractions. DEVS-Suite simulator, a realization of Parallel DEVS, can model all components interacting in a multi-agent system, helping the designer and programmer to evaluate the system performance before the real implementation. This paper develops a description of a multi-agent system named MOMENT. A set of abstractions are formulated and their designs are realized in DEVS-Suite. A sample simulation study is conducted to illustrate the use of the MOMENT simulation in understanding some key design and performance aspects of educational multi-agent systems.}},
    author = {Orooji, Fatemeh and Sarjoughian, Hessam S. and Taghiyareh, Fattaneh},
    booktitle = {2010 5th International Symposium on Telecommunications},
    citeulike-article-id = {10541306},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/istel.2010.5734160},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5734160},
    doi = {10.1109/istel.2010.5734160},
    isbn = {978-1-4244-8183-5},
    keywords = {agent-oriented, engineering, software},
    location = {Tehran, Iran},
    month = dec,
    pages = {956--961},
    posted-at = {2012-04-06 05:30:24},
    priority = {0},
    publisher = {IEEE},
    title = {{Modeling}},
    url = {http://dx.doi.org/10.1109/istel.2010.5734160},
    year = {2010}
}
%2
@article{Moseley2006,
    author = {Moseley, Ben and Marks, Peter},
    citeulike-article-id = {10463035},
    citeulike-linkout-0 = {http://shaffner.us/cs/papers/tarpit.pdf},
    journal = {Complexity},
    posted-at = {2012-03-16 16:17:48},
    priority = {4},
    title = {{Out of the Tar Pit}},
    url = {http://shaffner.us/cs/papers/tarpit.pdf}
}

@book{citeulike:7885132,
    citeulike-article-id = {7885132},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0805860592},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0805860592},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0805860592},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0805860592},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0805860592/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0805860592},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0805860592},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0805860592},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0805860592&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0805860592},
    day = {21},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0805860592},
    keywords = {design, education, research},
    month = jun,
    posted-at = {2012-02-27 11:02:52},
    priority = {2},
    publisher = {Routledge},
    title = {{Handbook of Design Research Methods in Education: Innovations in Science, Technology, Engineering, and Mathematics Learning and Teaching}},
    url = {http://www.worldcat.org/isbn/0805860592},
    year = {2008}
}
%49
@book{Fowler1999,
    abstract = {{Your class library works, but could it be better? \_Refactoring: Improving the
Design of Existing Code\_ shows how refactoring can make object-oriented code
simpler and easier to maintain. Today, refactoring requires considerable
design know-how, but once tools become available, all programmers should be
able to improve their code using refactoring techniques.

Besides an introduction to what refactoring is, this handbook provides a
catalogue of dozens of tips for improving code. The best thing about
\_Refactoring\_ is its remarkably clear presentation, along with excellent nuts-
and-bolts advice, from object expert Martin Fowler. The author is also an
authority on software patterns and UML, and this experience helps make this a
better book, one that should be immediately accessible to any intermediate or
advanced object-oriented developer. (Just like patterns, each refactoring tip
is presented with a simple name, a "motivation," and examples using Java and
UML.)

Early chapters stress the importance of testing in successful refactoring.
(When you improve code, you have to test to verify that it still works.) After
the discussion on how to detect the "smells" of bad code, readers get to the
heart of the book, its catalogue of more than 70 "refactorings"--tips for
better and simpler class design. Each tip is illustrated with "before" and
"after" code, along with an explanation. Later chapters provide a quick look
at refactoring research.

Like software patterns, refactoring may be an idea whose time has come. This
groundbreaking title will surely help bring refactoring to the programming
mainstream. With its clear advice on a hot new topic, \_Refactoring\_ is sure to
be essential reading for anyone who writes or maintains object- oriented
software. --\_Richard Dragan\_

**Topics Covered:** Refactoring, improving software code, redesign, design
tips, patterns, unit testing, refactoring research and tools.}},
    author = {Fowler, Martin and Beck, Kent},
    citeulike-article-id = {251681},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201485672},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201485672},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/863697997},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201485672},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201485672},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201485672/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201485672},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201485672},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201485672},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201485672&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201485672},
    day = {08},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0201485672},
    keywords = {engineering, software},
    month = jul,
    posted-at = {2012-02-25 16:02:08},
    priority = {4},
    publisher = {Addison-Wesley},
    title = {{Refactoring improving the design of existing code}},
    url = {http://www.worldcat.org/isbn/0201485672},
    year = {2013}
}

@book{citeulike:325846,
    author = {Feathers, Michael},
    citeulike-article-id = {325846},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0131177052},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0131177052},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0131177052},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0131177052},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0131177052/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0131177052},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0131177052},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0131177052},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0131177052&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0131177052},
    day = {02},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0131177052},
    keywords = {engineering, software},
    month = oct,
    posted-at = {2012-02-25 15:58:41},
    priority = {0},
    publisher = {Prentice Hall},
    title = {{Working Effectively with Legacy Code}},
    url = {http://www.worldcat.org/isbn/0131177052},
    year = {2004}
}

@inproceedings{citeulike:10385212,
    abstract = {{Dynamic adaptation may be used to prevent software downtime while new requirements and responses to environmental conditions are incorporated into the system. Previously, we studied over thirty adaptation-related projects to develop twelve adaptation-oriented design patterns that can be leveraged from one adaptive system to another. This paper presents a case study in which we apply our adaptation patterns in the design of a dynamically adaptive news web server. This pattern-based design separates the functional logic from the adaptive logic, resulting in a system that supports dynamic adaptation and is easier to maintain and analyze. Furthermore, to address assurance concerns, we applied automated formal verification techniques to ensure instantiated pattern models satisfy invariant properties specified in each adaptation pattern.}},
    address = {New York, NY, USA},
    author = {Ramirez, Andres J. and Cheng, Betty H. C.},
    booktitle = {Proceedings of the 6th international conference on Autonomic computing},
    citeulike-article-id = {10385212},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1555250},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1555228.1555250},
    doi = {10.1145/1555228.1555250},
    isbn = {978-1-60558-564-2},
    keywords = {design, engineering, patterns, self-adaptive, software},
    location = {Barcelona, Spain},
    pages = {69--70},
    posted-at = {2012-02-25 15:18:04},
    priority = {0},
    publisher = {ACM},
    series = {ICAC '09},
    title = {{Applying adaptation design patterns}},
    url = {http://dx.doi.org/10.1145/1555228.1555250},
    year = {2009}
}

@unpublished{citeulike:10385199,
    author = {North, Dan},
    citeulike-article-id = {10385199},
    journal = {Better Software Magazine},
    keywords = {engineering, software, test-driven-development, testing},
    month = mar,
    posted-at = {2012-02-25 14:14:16},
    priority = {0},
    title = {{Introducing BDD}},
    year = {2006}
}
%9
@inproceedings{Hendrickson2008,
    author = {Hendrickson, Elisabeth},
    booktitle = {STARWEST},
    citeulike-article-id = {10385198},
    keywords = {engineering, software, test-driven-development, testing},
    month = oct,
    organization = {Software Quality Engineering},
    posted-at = {2012-02-25 14:11:07},
    priority = {0},
    title = {{Driving Development with Tests: ATDD and TDD}},
    year = {2008}
}

@book{citeulike:10385158,
    author = {Soule, Paul},
    citeulike-article-id = {10385158},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/3034605390},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/3034605390},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/3034605390},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/3034605390},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/3034605390/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/3034605390},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/3034605390},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN3034605390},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=3034605390&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/3034605390},
    day = {16},
    edition = {1st Edition.},
    howpublished = {Paperback},
    isbn = {3034605390},
    keywords = {domain-specific-languages, engineering, self-adaptive, software},
    month = jun,
    posted-at = {2012-02-25 12:51:37},
    priority = {4},
    publisher = {Springer Basel},
    title = {{Autonomics Development: A Domain-Specific Aspect Language Approach (Autonomic Systems)}},
    url = {http://www.worldcat.org/isbn/3034605390},
    year = {2010}
}

@book{citeulike:1367424,
    abstract = {{<i><p>Reduce the time between when a defect is introduced and when it is fixed by integrating your software often.</p></i><p>For any software developer who has spent days in "integration hell," cobbling together myriad software components, <b><i>Continuous Integration: Improving Software Quality and Reducing Risk</i></b> illustrates how to transform integration from a necessary evil into an everyday part of the development process. The key, as the authors show, is to integrate regularly and often using continuous integration (CI) practices and techniques.</p> <p>The authors first examine the concept of CI and its practices from the ground up and then move on to explore other effective processes performed by CI systems, such as database integration, testing, inspection, deployment, and feedback. Through more than forty CI-related practices using application examples in different languages, readers learn that CI leads to more rapid software development, produces deployable software at every step in the development lifecycle, and reduces the time between defect introduction and detection, saving time and lowering costs. With successful implementation of CI, developers reduce risks and repetitive manual processes, and teams receive better project visibility.</p> <p>The book covers</p><ul><li>How to make integration a "non-event" on your software development projects</li><li>How to reduce the amount of repetitive processes you perform when building your software</li><li>Practices and techniques for using CI effectively with your teams</li><li>Reducing the risks of late defect discovery, low quality software, lack of visibility, and lack of deployable software</li><li>Assessments of different CI servers and related tools on the market</li></ul><p>The book's companion Web site, www.integratebutton.com, provides updates and code examples.</p>}},
    author = {Duvall, Paul M. and Matyas, Steve and Glover, Andrew},
    citeulike-article-id = {1367424},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321336380},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321336380},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321336380},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321336380},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321336380/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321336380},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321336380},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321336380},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321336380&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321336380},
    day = {09},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0321336380},
    keywords = {engineering, software},
    month = jul,
    posted-at = {2012-02-25 12:28:46},
    priority = {4},
    publisher = {Addison-Wesley Professional},
    title = {{Continuous Integration: Improving Software Quality and Reducing Risk}},
    url = {http://www.worldcat.org/isbn/0321336380},
    year = {2007}
}

@book{citeulike:10024028,
    author = {Humble, Jez and Farley, David},
    citeulike-article-id = {10024028},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321601912},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321601912},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321601912},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321601912},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321601912/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321601912},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321601912},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321601912},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321601912&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321601912},
    day = {06},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0321601912},
    keywords = {engineering, software},
    month = aug,
    posted-at = {2012-02-25 12:28:08},
    priority = {4},
    publisher = {Addison-Wesley Professional},
    title = {{Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation (Addison Wesley Signature Series)}},
    url = {http://www.worldcat.org/isbn/0321601912},
    year = {2010}
}

@book{citeulike:390814,
    abstract = {{If patterns are good ideas that can be re-applied to new situations, <I>AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis</I> looks at what goes wrong in software development, time and time again. This entertaining and often enlightening text defines what seasoned developers have long suspected: despite advances in software engineering, most software projects still fail to meet expectations--and about a third are cancelled altogether. <p>  The authors of <I>AntiPatterns</I> draw on extensive industry experience, their own and others, to help define what's wrong with software development today. They outline reasons why problem patterns develop (such as sloth, avarice, and greed) and proceed to outline several dozen patterns that can give you headaches or worse.<p>  Their deadliest hit list begins with the Blob, where one object does most of the work in a project, and Continuous Obsolescence, where technology changes so quickly that developers can't keep up. Some of the more entertaining antipatterns include the Poltergeist (where do-nothing classes add unnecessary overhead), the Boat Anchor (a white elephant piece of hardware or software bought at great cost) and the Golden Hammer (a single technology that is used for every conceivable programming problem). The authors then proceed to define antipatterns oriented toward management problems with software (including Death by Planning and Project Mismanagement, along with several miniature antipatterns, that help define why so many software projects are late and overbudget).<p>  The authors use several big vendors' technologies as examples of today's antipatterns.  Luckily, they suggest ways to overcome antipatterns and improve software productivity in "refactored solutions" that can overcome some of these obstacles. However, this is a realistic book, a mix of "Dilbert" and software engineering. A clever antidote to getting too optimistic about software development, <I>AntiPatterns</I> should be required reading for any manager facing a large-scale development project. <I>--Richard Dragan</I>} {"The AntiPatterns authors have clearly been there and done that when it comes to managing software development efforts. I resonated with one insight after another, having witnessed too many wayward projects myself. The experience in this book is palpable." -John Vlissides, IBM Research "This book allows managers, architects, and developers to learn from the painful mistakes of others. The high-level AntiPatterns on software architecture are a particularly valuable contribution to software engineering. Highly recommended!" -Kyle Brown Author of The Design Patterns Smalltalk Companion "AntiPatterns continues the trend started in Design Patterns. The authors have discovered and named common problem situations resulting from poor management or architecture control, mistakes which most experienced practitioners will recognize. Should you find yourself with one of the AntiPatterns, they even provide some clues on how to get yourself out of the situation." -Gerard Meszaros, Chief Architect, Object Systems Group Are you headed into the software development mine field? Follow someone if you can, but if you're on your own-better get the map! AntiPatterns is the map. This book helps you navigate through today's dangerous software development projects. Just look at the statistics:<br>   * Nearly one-third of all software projects are cancelled.<br>   * Two-thirds of all software projects encounter cost overruns in excess of 200\%.<br>   * Over 800f all software projects are deemed failures.<br>   While patterns help you to identify and implement procedures, designs, and codes that work, AntiPatterns do the exact opposite; they let you zero-in on the development detonators, architectural tripwires, and personality booby traps that can spell doom for your project. Written by an all-star team of object-oriented systems developers, AntiPatterns identifies 40 of the most common AntiPatterns in the areas of software development, architecture, and project management. The authors then show you how to detect and defuse AntiPatterns as well as supply refactored solutions for each AntiPattern presented.}},
    author = {William},
    citeulike-article-id = {390814},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0471197130},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0471197130},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/939005921},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0471197130},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0471197130},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0471197130/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0471197130},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0471197130},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0471197130},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0471197130&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0471197130},
    day = {03},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0471197130},
    keywords = {design, engineering, patterns, software},
    month = apr,
    posted-at = {2012-02-24 14:48:33},
    priority = {0},
    publisher = {John Wiley \& Sons},
    title = {{AntiPatterns: Refactoring Software ; Architectures ; and Projects in Crisis}},
    url = {http://www.worldcat.org/isbn/0471197130},
    year = {1998}
}

@book{citeulike:7439065,
    author = {Fowler, Martin},
    citeulike-article-id = {7439065},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321712943},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321712943},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321712943},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321712943},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321712943/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321712943},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321712943},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321712943},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321712943&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321712943},
    day = {03},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0321712943},
    keywords = {domain-specific-languages, engineering, software},
    month = oct,
    posted-at = {2012-02-24 14:36:57},
    priority = {4},
    publisher = {Addison-Wesley Professional},
    title = {{Domain-Specific Languages (Addison-Wesley Signature Series (Fowler))}},
    url = {http://www.worldcat.org/isbn/0321712943},
    year = {2010}
}

@book{citeulike:10382938,
    author = {Dearle, Fergal},
    citeulike-article-id = {10382938},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/184719690X},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/184719690X},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/184719690X},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/184719690X},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/184719690X/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/184719690X},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/184719690X},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN184719690X},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=184719690X&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/184719690X},
    day = {01},
    howpublished = {Paperback},
    isbn = {184719690X},
    keywords = {domain-specific-languages, engineering, software},
    month = jun,
    posted-at = {2012-02-24 14:34:44},
    priority = {2},
    publisher = {Packt Publishing},
    title = {{Groovy for Domain-Specific Languages}},
    url = {http://www.worldcat.org/isbn/184719690X},
    year = {2010}
}
%51
@book{Martin2002,
    author = {Martin, Robert C.},
    citeulike-article-id = {311546},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0135974445},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0135974445},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0135974445},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0135974445},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0135974445/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0135974445},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0135974445},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0135974445},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0135974445&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0135974445},
    day = {25},
    edition = {1st},
    howpublished = {Hardcover},
    isbn = {0135974445},
    keywords = {design, engineering, software},
    month = oct,
    posted-at = {2012-02-24 14:14:51},
    priority = {4},
    publisher = {Prentice Hall},
    title = {{Agile Software Development, Principles, Patterns, and Practices}},
    url = {http://www.worldcat.org/isbn/0135974445},
    year = {2002}
}

@book{citeulike:9605703,
    author = {Anderson, David J.},
    citeulike-article-id = {9605703},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0131424602},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0131424602},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0131424602},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0131424602},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0131424602/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0131424602},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0131424602},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0131424602},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0131424602&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0131424602},
    day = {27},
    howpublished = {Paperback},
    isbn = {0131424602},
    keywords = {engineering, model, process, software},
    month = sep,
    posted-at = {2012-02-24 03:21:07},
    priority = {2},
    publisher = {Prentice Hall},
    title = {{Agile Management for Software Engineering: Applying the Theory of Constraints for Business Results}},
    url = {http://www.worldcat.org/isbn/0131424602},
    year = {2003}
}
%46
@article{Rising2000,
    abstract = {{In today's software development environment, requirements often change during the product development life-cycle to meet shifting business demands, creating endless headaches for development teams. We discuss our experience in implementing the Scrum software development process to address these concerns}},
    address = {Los Alamitos, CA, USA},
    author = {Rising, L. and Janoff, N. S.},
    citeulike-article-id = {530522},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=626150},
    citeulike-linkout-1 = {http://doi.ieeecomputersociety.org/10.1109/52.854065},
    citeulike-linkout-2 = {http://dx.doi.org/10.1109/52.854065},
    citeulike-linkout-3 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=854065},
    day = {06},
    doi = {10.1109/52.854065},
    institution = {AG Commun. Syst., Phoenix, AZ},
    issn = {0740-7459},
    journal = {Software, IEEE},
    keywords = {engineering, model, process, software},
    month = jul,
    number = {4},
    pages = {26--32},
    posted-at = {2012-02-24 03:15:22},
    priority = {0},
    publisher = {IEEE},
    title = {{The Scrum software development process for small teams}},
    url = {http://dx.doi.org/10.1109/52.854065},
    volume = {17},
    year = {2000}
}
%40
@book{Jacobson1999,
    abstract = {{A software process defines the steps required to create software successfully.
Written by the same authors who brought you the Unified Modelling Language
(UML), \_The Unified Software Development Process\_ introduces a new standard
for creating today's software that will certainly be useful for any software
developer or manager who is acquainted with UML.

Early sections introduce four basic principles of the unified process: that
software should stress use cases (which show how it interacts with users),
that the process is architecture-centric and that it is iterative and
incremental. The authors then apply these principles to their software
process, which involves everything from gathering system requirements to
analysis, design, implementation and testing. The use-case examples are
excellent and include concrete examples drawn from such areas as banking and
inventory control.

The authors point out the connection between UML document types (like use-
cases, class diagrams and state transition diagrams) with various models used
throughout the software process. They provide very short, real-world examples
that illustrate how their ideas have been successfully applied. The
straightforward tour of the new unified software process gets extra
elaboration--along with some advice--in later chapters that further describe
the author's ideas on design. With the weight of these three expert authors
behind it, readers can expect \_The Unified Software Development Process\_ to be
an important book and one that will be valuable to any working designer or
manager. --\_Richard Dragan\_}},
    author = {Jacobson, Ivar and Booch, Grady and Rumbaugh, James},
    citeulike-article-id = {595390},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201571692},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201571692},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201571692},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201571692},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201571692/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201571692},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201571692},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201571692},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201571692&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201571692},
    day = {14},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0201571692},
    keywords = {engineering, model, process, software},
    month = feb,
    posted-at = {2012-02-24 02:45:55},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {{The Unified Software Development Process}},
    url = {http://www.worldcat.org/isbn/0201571692},
    year = {1999}
}

@book{citeulike:663361,
    abstract = {{The Rational Unified Process is a software engineering process developed  and marketed originally by Rational Software, and now IBM. It is a  disciplined approach to assigning and managing tasks and responsibilities  in a development organization. The goal of this process is to produce,  within a predictable schedule and budget, high-quality software that meets the needs of its end users. The Rational Unified Process captures many of  the best practices in modern software development and presents them in a  tailorable form that is suitable for a wide range of projects and  organizations. The Rational Unified Process delivers these best practices  to the project team online in a detailed, practical form. This book  provides an introduction to the concepts, structure, contents, and  motivation of the Rational Unified Process. Goals of This Book In this  book, you will learn what the Rational Unified Process is and what it is  not; master the vocabulary of the Rational Unified Process and understand  its structure; develop an appreciation for the best practices that we have synthesized in this process; and understand how the Rational Unified  Process can give you the guidance you need for your specific  responsibility in a project. This book is not the complete Rational  Unified Process. Rather, it is a small subset to introduce the RUP. In the full Rational Unified Process you will find the detailed guidance needed  to carry out your work. The full Rational Unified Process-;the online  knowledge base-;is a product that can be obtained from IBM. This book  makes numerous references to the Unified Modeling Language (UML), but it  is not an introduction to the UML. That is the focus of two other books:  The Unified Modeling Language User Guide (Addison-Wesley, 1999) and The  Unified Modeling Language Reference Manual (Addison-Wesley, 1999). This  introductory book speaks about modeling and object-oriented techniques,  but it is not a design method, and it does not teach you how to model.  Detailed steps and guidance on the various techniques that are embedded in the Rational Unified Process can be found only in the process product.  Several chapters of this book discuss project management issues. They  describe aspects of planning an iterative development, managing risks, and so on. This book, however, is by no means a complete manual on project  management and software economics. For more information, we refer you to  the book Software Project Management: A Unified Framework (Addison-Wesley, 1998). The Rational Unified Process is a specific and detailed instance of a more generic process described in the textbook The Unified Software  Development Process (Addison-Wesley, 1998). who should read this book? The Rational Unified Process, An Introduction, Third Edition , is written for  a wide range of people involved in software development: project managers, developers, quality engineers, process engineers, method specialists,  system engineers, and analysts. This book is relevant especially to  members of an organization that has adopted the Rational Unified Process  or is about to adopt it. It is likely that an organization will tailor the Rational Unified Process to suit its needs, but the core process described in this book should remain the common denominator across all instances of  the Rational Unified Process. This book will be a useful companion to  students taking one of the many professional education courses delivered  by IBM Rational Software and its partners in industry and academia. It  provides a general context for the specific topics covered by the course.  We assume that you have a basic understanding of software development. It  is not necessary that you have specific knowledge of a programming  language, of an object-oriented method, or of the Unified Modeling  Language. How to Use This Book Software professionals who are working in  an organization that has adopted the Rational Unified Process, in whole or part, should read the book linearly. The chapters have been organized in a natural progression. Project managers can limit their reading to Chapters  1, 2, 4, and 7, which provide an introduction to the implications of an  iterative, risk-driven development process. Process engineers or  methodologists may have to tailor and install the Rational Unified Process in their organizations. They should carefully study Chapters 3, 14, and  17, which describe the process structure and the overall approach to  implementing the Rational Unified Process. Organization and Special  Features The book has two parts. Part I describes the process, its  context, its history, its structure, and its software development  lifecycle. It describes some of the key features that differentiate the  Rational Unified Process from other software development processes:  Chapter 1: Software Development Best Practices Chapter 2: The Rational  Unified Process Chapter 3: Static Structure: Process Description Chapter  4: Dynamic Structure: Iterative Development Chapter 5: An  Architecture-Centric Process Chapter 6: A Use-Case-Driven Process Part II  gives an overview of the various components of process, or disciplines.  There is one chapter for each discipline. Chapter 7: The Project  Management Discipline Chapter 8: The Business Modeling Discipline Chapter  9: The Requirements Discipline Chapter 10: The Analysis and Design  Discipline Chapter 11: The Implementation Discipline Chapter 12: The Test  Discipline Chapter 13: The Configuration and Change Management Discipline  Chapter 14: The Environment Discipline Chapter 15: The Deployment  Discipline Chapter 16: Typical Iteration Plans Chapter 17: Implementing  the Rational Unified Process Most discipline chapters are organized into  six sections: Purpose of the discipline Definitions and key concepts Roles and artifacts A typical workflow: an overview of the activities Tool  support Summary Two appendixes summarize all the roles of the process and  artifacts (the work products of the process) that are introduced in  Chapters 7 through 15. A list of acronyms and glossary of common terms are provided, as is an annotated bibliography. For More Information  Information about the Rational Unified Process, such as a data sheet and a downloadable demo version, can be obtained from IBM, Rational Software via the Internet at [a href="http://www.rational.com/rup/"  target="new">www.rational.com/rup/ . If you are already using the Rational Unified Process, additional information is available from the Rational  Developers Network, which has extra goodies, updates, and links to  partners. The hyperlink to the RDN is in the online version of RUP.  Academic institutions can contact IBM for information on a special program for including the Rational Unified Process in the curriculum. Second  Edition The second edition of The Rational Unified Process: An  Introduction made the book current with the Rational Unified Process 2000. Third Edition This third edition of The Rational Unified Process: An  Introduction makes the book current with the Rational Unified Process  2003. This edition implements several changes of terminology, some  redesign of parts of the process (in particular, the test and environment  disciplines), as well as the further development of RUP as a process  framework. New elements are introduced--the concept of process components  and process plug-ins, a new tool set comprising RUP Modeler, RUP  Organizer, RUP Builder, and MyRUP, and a separate Process Engineering  Process. It incorporates the feedback of many readers and acknowledges the acquisition of Rational Software by IBM. Acknowledgments The Rational  Unified Process reflects the wisdom of a great many software professionals from Rational Software and elsewhere. The history of the process can be  found in Chapter 2. But putting together a book, even as small and modest  as this one, required the dedicated effort of a slate of people, whom I  would like to recognize here. Early members of the Process Development  Group assembled the Rational Unified Process and contributed to this  introduction. Stefan Bylund, then Kurt Bittner, and finally Bruce Macisaac contributed to the analysis and design chapter. Maria Ericsson developed  the business engineering and requirements management aspect with Leslee  Probasco. The test part was started by Bruce Katz and then completely  redesigned by Paul Szymkowiak. John Smith expanded the project management  aspects for RUP 2000. Jas Madhur contributed the ideas on configuration  management, change management, and deployment. Hakan Dyrhage contributed  many ideas to the organization and structure of the process and to its  implementation and configuration. Margaret Chan was responsible for the  product integration and for the assembly of most of the artwork in this  book with Susan Buie. Sigurd Hopen developed the PEP with the help of  Bjoern Gustafsson. Per Kroll is the manager of the development group, Mike Barnard the product manager. Alfredo Bencomo, Chinh Vo, Philip Denno, Lars Jenzer, Glenys Macisaac, and Fionna Chong developed the product  infrastructure. And Debbie Gray is the devoted administrative assistant of a team spread across nine time zones. The Rational Unified Process and  this book benefited over the past 8 years from the reviews and ideas of  Stefan Ahlqvist, Dave Bernstein, Grady Booch, Murray Cantor, Geoff Clemm,  Catherine Connor, Mike Devlin, Christian Ehrenborg, Ian Gavin, Christina  Gisselberg, Sam Guckenheimer, Bjoern Gustafsson, Matt Herdon, Ivar  Jacobson, Paer Jansson, Ron Krubek, Dean Leffingwell, Andrew Lyons, Bruce  Malasky, Roger Oberg, Gary Pollice, Terri Quatrani, Walker Royce, Jim  Rumbaugh, Ian Spence, John Smith, and Brian White. We are very grateful to Grady Booch for writing Chapter 1. Special thanks go to the Rational  field, members of our Chat\_RUP list, and our users, members of the  RUP\_Forum, for their feedback, and contributions. And finally many thanks  to our editor Mary O'Brien, our former editor J. Carter Shanklin, as well  as Brenda Mulligan, Amy Fleischer and her team, and all the staff at  Addison-Wesley for getting this book out as quickly and smoothly as they  did....}},
    author = {Kruchten, Philippe},
    citeulike-article-id = {663361},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321197704},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321197704},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321197704},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321197704},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321197704/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321197704},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321197704},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321197704},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321197704&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321197704},
    day = {20},
    edition = {3},
    howpublished = {Paperback},
    isbn = {0321197704},
    keywords = {engineering, model, process, software},
    month = dec,
    posted-at = {2012-02-24 02:44:43},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {{The Rational Unified Process: An Introduction (3rd Edition)}},
    url = {http://www.worldcat.org/isbn/0321197704},
    year = {2003}
}

@article{citeulike:340431,
    abstract = {{Methodological guidelines for object-oriented software construction that improve the reliability of the resulting software systems are presented. It is shown that the object-oriented techniques rely on the theory of design by contract, which underlies the design of the Eiffel analysis, design, and programming language and of the supporting libraries, from which a number of examples are drawn. The theory of contract design and the role of assertions in that theory are discussed.>}},
    address = {Los Alamitos, CA, USA},
    author = {Meyer, Bertrand},
    citeulike-article-id = {340431},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=619797},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/2.161279},
    citeulike-linkout-2 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=161279},
    doi = {10.1109/2.161279},
    institution = {Interactive Software Eng., Goleta, CA, USA},
    issn = {0018-9162},
    journal = {Computer},
    keywords = {engineering, software},
    month = oct,
    number = {10},
    pages = {40--51},
    posted-at = {2012-02-24 02:19:05},
    priority = {3},
    publisher = {IEEE},
    title = {{Applying 'design by contract'}},
    url = {http://dx.doi.org/10.1109/2.161279},
    volume = {25},
    year = {1992}
}

@inproceedings{citeulike:339967,
    abstract = {{Service-based approaches are widely used to integrate heterogenous systems. Web services allow for the definition of highly dynamic systems where components (services) can be discovered and QoS parameters negotiated at run-time. This justifies the need for monitoring service compositions at run-time. Research on this issue, however, is still in its infancy. We investigate how to monitor dynamic service compositions with respect to contracts expressed via assertions on services. Dynamic compositions are represented as BPEL processes which can be monitored at run-time to check whether individual services comply with their contracts. Monitors can be automatically defined as additional services and linked to the service composition. We present two alternative implementations of our monitoring approach: one based on late-binding and reflection and the other based on a standard assertion system. The two implementations are exemplified on a case study.}},
    address = {New York, NY, USA},
    author = {Baresi, Luciano and Ghezzi, Carlo and Guinea, Sam},
    booktitle = {Proceedings of the 2Nd International Conference on Service Oriented Computing},
    citeulike-article-id = {339967},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1035195},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1035167.1035195},
    doi = {10.1145/1035167.1035195},
    isbn = {1-58113-871-7},
    keywords = {architecture, self-adaptive, software},
    location = {New York, NY, USA},
    pages = {193--202},
    posted-at = {2012-02-24 02:04:51},
    priority = {2},
    publisher = {ACM},
    series = {ICSOC '04},
    title = {{Smart Monitors for Composed Services}},
    url = {http://dx.doi.org/10.1145/1035167.1035195},
    year = {2004}
}

@inproceedings{citeulike:10381508,
    abstract = {{The concept of software architecture (also called system structure
or system configuration) is especially important in the design of
complex software systems, providing a model of the large-scale
structural properties of systems. Module interconnection languages
(MILs) introduce the idea of creating program modules and connecting
them to form larger structures. However, MILs do not support the
description of important architectural elements. A new class of
description languages, referred to as architectural description
languages (ADLs), have recently emerged. Most ADLs, however, support
only the description of static software architectures and not dynamic or
reconfigurable software architectures. A further limitation of current
ADLs is that they focus mainly on the formal notation and usually do not
offer proof systems and tools to enable designers to formably verify the
properties of their designs. We have developed the ZCL framework, which
is a formal framework, specified in Z, to describe and reason about
dynamic distributed software architectures. In this paper, we use a
simple case study-the client-server system-to demonstrate how our formal
framework ZCL can be used to specify and verify reconfigurable software
architectures}},
    author = {de Paula, V. C. and Justo, G. R. B. and Cunha, P. R. F.},
    booktitle = {Software Engineering for Parallel and Distributed Systems, 2000. Proceedings. International Symposium on},
    citeulike-article-id = {10381508},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/pdse.2000.847847},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=847847},
    doi = {10.1109/pdse.2000.847847},
    institution = {Dept. of Inf., Fed. Univ. of Rio Grande do Norte, Natal},
    isbn = {0-7695-0634-8},
    keywords = {architecture, requirements, self-adaptive, software},
    pages = {21--31},
    posted-at = {2012-02-24 01:58:48},
    priority = {2},
    publisher = {IEEE},
    title = {{Specifying and verifying reconfigurable software architectures}},
    url = {http://dx.doi.org/10.1109/pdse.2000.847847},
    year = {2000}
}

@inproceedings{citeulike:1840134,
    abstract = {{Self-management is put forward as one of the means by which we could provide systems that are scalable, support dynamic composition and rigorous analysis, and are flexible and robust in the presence of change. In this paper, we focus on architectural approaches to self-management, not because the language-level or network-level approaches are uninteresting or less promising, but because we believe that the architectural level seems to provide the required level of abstraction and generality to deal with the challenges posed. A self-managed software architecture is one in which components automatically configure their interaction in a way that is compatible with an overall architectural specification and achieves the goals of the system. The objective is to minimise the degree of explicit management necessary for construction and subsequent evolution whilst preserving the architectural properties implied by its specification. This paper discusses some of the current promising work and presents an outline three-layer reference model as a context in which to articulate some of the main outstanding research challenges.}},
    address = {Washington, DC, USA},
    author = {Kramer, J. and Magee, J.},
    booktitle = {Future of Software Engineering, 2007. FOSE \&\#039;07},
    citeulike-article-id = {1840134},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1254723},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/fose.2007.19},
    citeulike-linkout-2 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4221625},
    doi = {10.1109/fose.2007.19},
    institution = {Dept. of Comput., Imperial Coll. London, London},
    isbn = {0-7695-2829-5},
    journal = {Future of Software Engineering, 2007. FOSE '07},
    keywords = {architecture, self-adaptive, software, systems},
    month = may,
    pages = {259--268},
    posted-at = {2012-02-24 00:48:22},
    priority = {0},
    publisher = {IEEE},
    series = {FOSE '07},
    title = {{Self-Managed Systems: an Architectural Challenge}},
    url = {http://dx.doi.org/10.1109/fose.2007.19},
    year = {2007}
}

@inproceedings{citeulike:477435,
    abstract = {{As dynamic software architecture use becomes more widespread, a variety of formal specification languages have been developed to gain a better understanding of the foundations of this type of software evolutionary change. In this paper we survey 14 formal specification approaches based on graphs, process algebras, logic, and other formalisms. Our survey will evaluate the ability of each approach to specify self-managing systems as well as the ability to address issues regarding expressiveness and scalability. Based on the results of our survey we will provide recommendations on future directions for improving the specification of dynamic software architectures, specifically self-managed architectures.}},
    address = {New York, NY, USA},
    author = {Bradbury, Jeremy S. and Cordy, James R. and Dingel, Juergen and Wermelinger, Michel},
    booktitle = {Proceedings of the 1st ACM SIGSOFT Workshop on Self-managed Systems},
    citeulike-article-id = {477435},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1075405.1075411},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1075405.1075411},
    doi = {10.1145/1075405.1075411},
    isbn = {1-58113-989-6},
    keywords = {architecture, self-adaptive, software, systems},
    location = {Newport Beach, California},
    pages = {28--33},
    posted-at = {2012-02-24 00:46:57},
    priority = {0},
    publisher = {ACM},
    series = {WOSS '04},
    title = {{A Survey of Self-management in Dynamic Software Architecture Specifications}},
    url = {http://dx.doi.org/10.1145/1075405.1075411},
    year = {2004}
}

@inproceedings{citeulike:9207786,
    abstract = {{Self-adaptive systems have the capability to autonomously modify their behaviour at run-time in response to changes in their environment. Self-adaptation is particularly necessary for applications that must run continuously, even under adverse conditions and changing requirements; sample domains include automotive systems, telecommunications, and environmental monitoring systems. While a few techniques have been developed to support the monitoring and analysis of requirements for adaptive systems, limited attention has been paid to the actual creation and specification of requirements of self-adaptive systems. As a result, self-adaptivity is often constructed in an ad-hoc manner. In this paper, we argue that a more rigorous treatment of requirements explicitly relating to self-adaptivity is needed and that, in particular, requirements languages for self-adaptive systems should include explicit constructs for specifying and dealing with the uncertainty inherent in self-adaptive systems. We present RELAX, a new requirements language for self-adaptive systems and illustrate it using examples from the smart home domain.}},
    address = {Washington, DC, USA},
    author = {Whittle, J. and Sawyer, P. and Bencomo, N. and Cheng, B. H. C. and Bruel, J. M.},
    booktitle = {Requirements Engineering Conference, 2009. RE '09. 17th IEEE International},
    citeulike-article-id = {9207786},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1684854},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/re.2009.36},
    citeulike-linkout-2 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5328591},
    doi = {10.1109/re.2009.36},
    institution = {Comput. Dept., Lancaster Univ., Lancaster, UK},
    isbn = {978-0-7695-3761-0},
    issn = {1090-705X},
    keywords = {self-adaptive},
    month = aug,
    pages = {79--88},
    posted-at = {2012-02-13 04:36:17},
    priority = {2},
    publisher = {IEEE},
    series = {RE '09},
    title = {{RELAX: Incorporating Uncertainty into the Specification of Self-Adaptive Systems}},
    url = {http://dx.doi.org/10.1109/re.2009.36},
    year = {2009}
}

@article{citeulike:159270,
    abstract = {{An abstract is not available.}},
    address = {Amsterdam, The Netherlands, The Netherlands},
    author = {Dardenne, Anne and van Lamsweerde, Axel and Fickas, Stephen},
    citeulike-article-id = {159270},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=156032},
    citeulike-linkout-1 = {http://dx.doi.org/10.1016/0167-6423(93)90021-g},
    citeulike-linkout-2 = {http://www.sciencedirect.com/science/article/B6V17-45FSTB2-10/2/605ddb5671131b8a28eb4d38d29cab5e},
    doi = {10.1016/0167-6423(93)90021-g},
    issn = {0167-6423},
    journal = {Sci. Comput. Program.},
    keywords = {self-adaptive},
    month = apr,
    number = {1-2},
    pages = {3--50},
    posted-at = {2012-02-13 04:34:04},
    priority = {2},
    publisher = {Elsevier North-Holland, Inc.},
    title = {{Goal-directed requirements acquisition}},
    url = {http://dx.doi.org/10.1016/0167-6423(93)90021-g},
    volume = {20},
    year = {1993}
}

@book{citeulike:9458196,
    author = {Silberschatz, Abraham and Galvin, Peter B. and Gagne, Greg},
    citeulike-article-id = {9458196},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0470128720},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0470128720},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0470128720},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0470128720},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0470128720/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0470128720},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0470128720},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0470128720},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0470128720&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0470128720},
    day = {29},
    edition = {8},
    howpublished = {Hardcover},
    isbn = {0470128720},
    keywords = {operating, systems},
    month = jul,
    posted-at = {2012-02-13 03:05:34},
    priority = {0},
    publisher = {Wiley},
    title = {{Operating System Concepts}},
    url = {http://www.worldcat.org/isbn/0470128720},
    year = {2008}
}

@article{citeulike:1984541,
    abstract = {{An abstract is not available.}},
    address = {Essex, UK},
    author = {Shoham, Yoav},
    citeulike-article-id = {1984541},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=152188},
    citeulike-linkout-1 = {http://dx.doi.org/10.1016/0004-3702(93)90034-9},
    doi = {10.1016/0004-3702(93)90034-9},
    issn = {0004-3702},
    journal = {Artif. Intell.},
    month = mar,
    number = {1},
    pages = {51--92},
    posted-at = {2012-02-12 13:21:25},
    priority = {2},
    publisher = {Elsevier Science Publishers Ltd.},
    title = {{Agent-oriented programming}},
    url = {http://dx.doi.org/10.1016/0004-3702(93)90034-9},
    volume = {60},
    year = {1993}
}

@article{citeulike:1558106,
    abstract = {{Our goal in this paper is to introduce and motivate a methodology, called Tropos, for building agent oriented software systems. Tropos is based on two key ideas. First, the notion of agent and all related mentalistic notions (for instance goals and plans) are used in all phases of software development, from early analysis down to the actual implementation. Second, Tropos covers also the very early phases of requirements analysis, thus allowing for a deeper understanding of the environment...}},
    address = {Hingham, MA, USA},
    author = {Bresciani, P. and Giorgini, P. and Giunchiglia, F. and Mylopoulos, J. and Perini, A.},
    citeulike-article-id = {1558106},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.1.7049},
    journal = {Autonomous Agents and Multi-Agent Systems},
    keywords = {engineering, self-adaptive, software},
    number = {3},
    pages = {203--236},
    posted-at = {2012-02-12 13:16:14},
    priority = {0},
    publisher = {Kluwer Academic Publishers},
    title = {{Tropos: An Agent-Oriented Software Development Methodology}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.1.7049},
    volume = {8},
    year = {2004}
}

@inproceedings{citeulike:166377,
    abstract = {{Requirements are usually understood as stating what a system is
supposed to do, as apposed to how it should do it. However,
understanding the organizational context and rationales (the
 ” Whys”) that lead up to systems requirements can be just as
important for the ongoing success of the system. Requirements modelling
techniques can be used to help deal with the knowledge and reasoning
needed in this earlier phase of requirements engineering. However most
existing requirements techniques are intended more for the later phase
of requirements engineering, which focuses on completeness, consistency,
and automated verification of requirements. In contrast, the early phase
aims to model and analyze stakeholder interests and how they might be
addressed, or compromised, by various system-and-environment
alternatives. This paper argues, therefore, that a different kind of
modelling and reasoning support is needed for the early phase. An
outline of the i* framework is given as an example of a step in this
direction. Meeting scheduling is used as a domain example}},
    author = {Yu, E. S. K.},
    booktitle = {Requirements Engineering, 1997., Proceedings of the Third IEEE International Symposium on},
    citeulike-article-id = {166377},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/isre.1997.566873},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=566873},
    doi = {10.1109/isre.1997.566873},
    institution = {Fac. of Inf. Studies, Toronto Univ., Ont.},
    isbn = {0-8186-7740-6},
    journal = {Requirements Engineering, 1997., Proceedings of the Third IEEE International Symposium on},
    keywords = {engineering, requirements, self-adaptive, software},
    location = {Annapolis, MD, USA},
    month = jan,
    pages = {226--235},
    posted-at = {2012-02-12 13:13:29},
    priority = {0},
    publisher = {IEEE},
    title = {{Towards modelling and reasoning support for early-phase
requirements engineering}},
    url = {http://dx.doi.org/10.1109/isre.1997.566873},
    year = {1997}
}

@book{citeulike:4796389,
    abstract = {{This is the first comprehensive introduction to multiagent systems and
contemporary distributed artificial intelligence that is suitable as a
textbook. The book provides detailed coverage of basic topics as well as
several closely related ones. Unlike traditional textbooks, the book brings
together many leading experts, guaranteeing a broad and diverse base of
knowledge and expertise. It emphasizes aspects of both theory and application,
and provides many illustrations and examples. Also included are thought-
provoking exercises of varying degrees of difficulty and a twenty-page
glossary of terms found in the study of agents, multiagent systems, and
distributed artificial intelligence. The book can be used for teaching as well
as self-study, and is designed to meet the needs of both researchers and
practitioners. In view of the interdisciplinary nature of the field, it will
be a useful reference not only for computer scientists and engineers, but for
social scientists and management and organization scientists as well.
**Contributors**: Gul A. Agha, Kathleen M. Carley, Jose Cuena, Edmund H.
Durfee, Clarence Ellis, Les Gasser, Michael P. Georgeff, Michael N. Huhns,
Toru Ishida, Nadeem Jamali, Sascha Ossowski, H. Van Dyke Parunak, Anand S.
Rao, Tuomas W. Sandholm, Sandip Sen, Munindar P. Singh, Larry M. Stephens,
Gerard Tel, Jacques Wainer, Gerhard Weiss, Michael J. Wooldridge, Makoto
Yokoo.}},
    citeulike-article-id = {4796389},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0262232030},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0262232030},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0262232030},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0262232030},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0262232030/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0262232030},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0262232030},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0262232030},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0262232030&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0262232030},
    day = {19},
    howpublished = {Hardcover},
    isbn = {0262232030},
    month = mar,
    posted-at = {2012-02-12 12:52:01},
    priority = {4},
    publisher = {The MIT Press},
    title = {{Multiagent Systems: A Modern Approach to Distributed Artificial Intelligence}},
    url = {http://www.worldcat.org/isbn/0262232030},
    year = {1999}
}

@book{citeulike:113848,
    abstract = {{Presents a guide to artificial intelligence, covering such topics as intelligent agents, problem-solving, logical agents, planning, uncertainty, learning, and robotics.}},
    author = {Russell, Stuart and Norvig, Peter},
    citeulike-article-id = {113848},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0137903952},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0137903952},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/51325314},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0137903952},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0137903952},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0137903952/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0137903952},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0137903952},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0137903952},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0137903952&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0137903952},
    day = {30},
    edition = {2},
    howpublished = {Hardcover},
    isbn = {0137903952},
    month = dec,
    posted-at = {2012-02-12 12:50:07},
    priority = {0},
    publisher = {Prentice Hall},
    series = {Prentice Hall series in artificial intelligence},
    title = {{Artificial Intelligence: A Modern Approach (2nd Edition)}},
    url = {http://www.worldcat.org/isbn/0137903952},
    year = {2002}
}

@article{citeulike:7364577,
    abstract = {{Boss is an autonomous vehicle that uses on-board sensors (global positioning system, lasers, radars, and cameras) to track other vehicles, detect static obstacles, and localize itself relative to a road model. A three-layer planning system combines mission, behavioral, and motion planning to drive in urban environments. The mission planning layer considers which street to take to achieve a mission goal. The behavioral layer determines when to change lanes and precedence at intersections and performs error recovery maneuvers. The motion planning layer selects actions to avoid obstacles while making progress toward local goals. The system was developed from the ground up to address the requirements of the DARPA Urban Challenge using a spiral system development process with a heavy emphasis on regular, regressive system testing. During the National Qualification Event and the 85-km Urban Challenge Final Event, Boss demonstrated some of its capabilities, qualifying first and winning the challenge. {\copyright} 2008 Wiley Periodicals, Inc.}},
    author = {Urmson, Chris and Anhalt, Joshua and Bagnell, Drew and Baker, Christopher and Bittner, Robert and Clark, M. N. and Dolan, John and Duggins, Dave and Galatali, Tugrul and Geyer, Chris and Gittleman, Michele and Harbaugh, Sam and Hebert, Martial and Howard, Thomas M. and Kolski, Sascha and Kelly, Alonzo and Likhachev, Maxim and McNaughton, Matt and Miller, Nick and Peterson, Kevin and Pilnick, Brian and Rajkumar, Raj and Rybski, Paul and Salesky, Bryan and Seo, Young-Woo and Singh, Sanjiv and Snider, Jarrod and Stentz, Anthony and Whittaker, William and Wolkowicki, Ziv and Ziglar, Jason and Bae, Hong and Brown, Thomas and Demitrish, Daniel and Litkouhi, Bakhtiar and Nickolaou, Jim and Sadekar, Varsha and Zhang, Wende and Struble, Joshua and Taylor, Michael and Darms, Michael and Ferguson, Dave},
    citeulike-article-id = {7364577},
    citeulike-linkout-0 = {http://dx.doi.org/10.1002/rob.20255},
    doi = {10.1002/rob.20255},
    journal = {J. Field Robotics},
    number = {8},
    pages = {425--466},
    posted-at = {2012-02-12 12:40:21},
    priority = {2},
    publisher = {Wiley Subscription Services, Inc., A Wiley Company},
    title = {{Autonomous driving in urban environments: Boss and the Urban Challenge}},
    url = {http://dx.doi.org/10.1002/rob.20255},
    volume = {25},
    year = {2008}
}

@article{citeulike:5822197,
    abstract = {{The rapid adoption of service-oriented architecture (SOA) in many large-scale distributed applications requires the development of adaptive service-based software systems (ASBS) with the capability of monitoring the changing system status, analyzing, and controlling tradeoffs among various quality-of-service (QoS) aspects, and adapting service configurations to satisfy multiple QoS requirements simultaneously. In this paper, our results toward the development of adaptive service-based software systems are presented. The formulation of activity-state-QoS (ASQ) models and how to use the data from controlled experiments to establish ASQ models for capturing the cause-effect dynamics among service activities, system resource states, and QoS in service-based systems are presented. Then, QoS monitoring modules based on ASQ models and SOA-compliant simulation models are developed to support the validation of the ASBS design. The main idea for developing QoS adaptation modules based on ASQ models is discussed. An experiment based on a voice communication service is used to illustrate our results.}},
    author = {Yau, S. S. and Ye, Nong and Sarjoughian, H. S. and Huang, Dazhi and Roontiva, A. and Baydogan, M. and Muqsith, M. A.},
    citeulike-article-id = {5822197},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/tsc.2009.17},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5156491},
    doi = {10.1109/tsc.2009.17},
    institution = {Sch. of Comput., Inf., \& Decision Syst. Eng., Arizona State Univ., Tempe, AZ, USA},
    issn = {1939-1374},
    journal = {Services Computing, IEEE Transactions on},
    month = jul,
    number = {3},
    pages = {247--260},
    posted-at = {2012-02-12 12:32:07},
    priority = {1},
    publisher = {IEEE},
    title = {{Toward Development of Adaptive Service-Based Software Systems}},
    url = {http://dx.doi.org/10.1109/tsc.2009.17},
    volume = {2},
    year = {2009}
}

@article{citeulike:10337260,
    abstract = {{Simulation of dynamic service-based software systems is important for studying services that may change their composition and thus interactions at run-time. An approach based on Service Oriented Architecture-compliant DEVS (SOAD) and Dynamic Structure DEVS (DSDEVS) modeling approaches is developed to support structural changes in service model composition. To achieve this goal, a broker–executive model is devised based on the broker model defined for SOAD and the executive model defined for DSDEVS. The capability to simulate dynamic services is incorporated to the DEVS-Suite simulator. To demonstrate modeling of dynamic service-based software systems, a real voice communication system and a model of this system have been developed. The importance of enabling simulation-based design for adaptable systems is briefly discussed.}},
    author = {Muqsith, Mohammed A. and Sarjoughian, Hessam S. and Huang, Dazhi and Yau, Stephen S.},
    citeulike-article-id = {10337260},
    citeulike-linkout-0 = {http://dx.doi.org/10.1177/0037549710382431},
    citeulike-linkout-1 = {http://sim.sagepub.com/cgi/content/abstract/87/11/915},
    day = {1},
    doi = {10.1177/0037549710382431},
    journal = {SIMULATION},
    month = nov,
    number = {11},
    pages = {915--931},
    posted-at = {2012-02-12 12:16:30},
    priority = {2},
    title = {{Simulating adaptive service-oriented software systems}},
    url = {http://dx.doi.org/10.1177/0037549710382431},
    volume = {87},
    year = {2011}
}

@incollection{citeulike:7576350,
    abstract = {{The goal of this roadmap paper is to summarize the state-of-the-art and to identify critical challenges for the systematic software engineering of self-adaptive systems. The paper is partitioned into four parts, one for each of the identified essential views of self-adaptation: modelling dimensions, requirements, engineering, and assurances. For each view, we present the state-of-the-art and the challenges that our community must address. This roadmap paper is a result of the Dagstuhl Seminar 08031 on "Software Engineering for Self-Adaptive Systems," which took place in January 2008.}},
    address = {Berlin, Heidelberg},
    author = {Cheng, Betty H. and Lemos, Rog{\'{e}}rio and Giese, Holger and Inverardi, Paola and Magee, Jeff and Andersson, Jesper and Becker, Basil and Bencomo, Nelly and Brun, Yuriy and Cukic, Bojan and Serugendo, Giovanna M. and Dustdar, Schahram and Finkelstein, Anthony and Gacek, Cristina and Geihs, Kurt and Grassi, Vincenzo and Karsai, Gabor and Kienle, Holger M. and Kramer, Jeff and Litoiu, Marin and Malek, Sam and Mirandola, Raffaela and M\"{u}ller, Hausi A. and Park, Sooyong and Shaw, Mary and Tichy, Matthias and Tivoli, Massimo and Weyns, Danny and Whittle, Jon},
    booktitle = {Software Engineering for Self-Adaptive Systems},
    chapter = {Software Engineering for Self-Adaptive Systems: A Research Roadmap},
    citeulike-article-id = {7576350},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1573858},
    citeulike-linkout-1 = {http://dx.doi.org/10.1007/978-3-642-02161-9_1},
    citeulike-linkout-2 = {http://www.springerlink.com/content/h380742725036312},
    doi = {10.1007/978-3-642-02161-9_1},
    editor = {Cheng, Betty H. and Lemos, Rog{\'{e}}rio and Giese, Holger and Inverardi, Paola and Magee, Jeff},
    isbn = {978-3-642-02160-2},
    keywords = {engineering, self-adaptive, software},
    pages = {1--26},
    posted-at = {2012-02-12 06:46:18},
    priority = {0},
    publisher = {Springer-Verlag},
    series = {Lecture Notes in Computer Science},
    title = {{Software Engineering for Self-Adaptive Systems}},
    url = {http://dx.doi.org/10.1007/978-3-642-02161-9_1},
    volume = {5525},
    year = {2009}
}

@inbook{citeulike:10289817,
    address = {270 Madison Ave, New York NY 10016},
    author = {Hjalmarson, Margaret A. and Lesh, Richard A.},
    booktitle = {Handbook of Design Research Methods in Education},
    chapter = {5},
    citeulike-article-id = {10289817},
    editor = {Kelly, Anthony E. and Lesh, Richard A. and Baek, John Y.},
    isbn = {9780805860597},
    pages = {96--110},
    posted-at = {2012-01-31 22:03:01},
    priority = {0},
    publisher = {Routledge},
    title = {{Engineering and Design Research
Intersections for Education Research and Design}},
    year = {2008}
}

@article{citeulike:10282854,
    abstract = {{Agent-Oriented Software Engineering (AOSE) is rapidly emerging in response to urgent needs in both software engineering and agent-based computing. While these two disciplines coexisted without remarkable interaction until some years ago, today there is rich and fruitful interaction among them and various approaches are available that bring together techniques, concepts and ideas from both sides. This article offers a guide to the broad body of literature on AOSE. The guide, which is intended to be of value to both researchers and practitioners, is structured according to key issues and key topics that arise when dealing with AOSE: methods and frameworks for requirements engineering, analysis, design, and implementation; languages for programming, communication and coordination and ontology specification; and development tools and platforms.}},
    address = {New York, NY, USA},
    author = {Weiss, Gerhard},
    citeulike-article-id = {10282854},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=975666.975669},
    citeulike-linkout-1 = {http://dx.doi.org/10.1017/s026988890100025x},
    doi = {10.1017/s026988890100025x},
    issn = {0269-8889},
    journal = {Knowl. Eng. Rev.},
    month = dec,
    pages = {349--373},
    posted-at = {2012-01-29 06:19:08},
    priority = {4},
    publisher = {Cambridge University Press},
    title = {{Agent orientation in software engineering}},
    url = {http://dx.doi.org/10.1017/s026988890100025x},
    volume = {16},
    year = {2001}
}

@book{citeulike:305879,
    abstract = {{The second of three books published by the Center for Environmental Structure
to provide a "working alternative to our present ideas about architecture,
building, and planning," \_A Pattern Language\_ offers a practical language for
building and planning based on natural considerations. The reader is given an
overview of some 250 patterns that are the units of this language, each
consisting of a design problem, discussion, illustration, and solution. By
understanding recurrent design problems in our environment, readers can
identify extant patterns in their own design projects and use these patterns
to create a language of their own. Extraordinarily thorough, coherent, and
accessible, this book has become a bible for homebuilders, contractors, and
developers who care about creating healthy, high-level design.}},
    author = {Alexander, Christopher and Ishikawa, Sara and Silverstein, Murray and Jacobson, Max and Fiksdahl-King, Ingrid and Angel, Shlomo},
    citeulike-article-id = {305879},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0195019199},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0195019199},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/3132495},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0195019199},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0195019199},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0195019199/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0195019199},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0195019199},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0195019199},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0195019199&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0195019199},
    day = {17},
    edition = {Later printing},
    howpublished = {Hardcover},
    isbn = {0195019199},
    month = aug,
    posted-at = {2012-01-29 06:16:46},
    priority = {4},
    publisher = {Oxford University Press},
    title = {{A Pattern Language: Towns, Buildings, Construction (Center for Environmental Structure)}},
    url = {http://www.worldcat.org/isbn/0195019199},
    year = {1977}
}

@inproceedings{citeulike:10280242,
    abstract = {{In this paper we describe initial ideas about modeling and analyzing fault tolerance mechanisms in self managed/self healing systems. Specifications are component based, with coordination mechanisms for building systems from components. A modal action logic is augmented with deontic operators to describe normal vs abnormal behaviours. Fault tolerance mechanisms can be specified in terms of the kind of abnormality encountered and the desired recovery route. Abstract programming models can be systematically constructed from the specifications in LTSA, a finite state, process algebra based modeling tool. LTSA then enables us to check that various properties do or do not hold for the specified fault tolerance mechanisms.}},
    address = {New York, NY, USA},
    author = {Magee, Jeff and Maibaum, Tom},
    booktitle = {Proceedings of the 2006 international workshop on Self-adaptation and self-managing systems},
    citeulike-article-id = {10280242},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1137684},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1137677.1137684},
    doi = {10.1145/1137677.1137684},
    isbn = {1-59593-403-0},
    location = {Shanghai, China},
    pages = {30--36},
    posted-at = {2012-01-28 07:19:18},
    priority = {0},
    publisher = {ACM},
    series = {SEAMS '06},
    title = {{Towards specification, modelling and analysis of fault tolerance in self managed systems}},
    url = {http://dx.doi.org/10.1145/1137677.1137684},
    year = {2006}
}

@inproceedings{citeulike:10274400,
    abstract = {{Adaptive software is being used increasingly frequently by various users, such as the medical community, software industry, and in response to terror attacks. Therefore, understanding the requirements of an adaptive system is crucial to developing them correctly. Developers need to be able to reason about the requirements of a system's adaptive behavior. Adaptation semantics are intended to describe how systems behave during adaptation. Previously, Zhang and Cheng formally specified three commonly occurring adaptation semantics in terms of Adapt operator-extended LTL (A-LTL). This paper presents goal-oriented specifications of these three adaptation semantics. These specifications, specified with the KAOS methodology, provide a graphical wrapper to the formal A-LTL specifications of the semantics. The combination of the goal-oriented, graphical KAOS specifications and A-LTL specifications provides the benefits of formal specifications as well as the benefits of an easier to understand, graphical, and more intuitive presentation of adaptive systems requirements. This work also provides a means to incorporate the adaptation semantics into the goal-oriented requirements specifications of an adaptive system.}},
    address = {New York, NY, USA},
    author = {Brown, Greg and Cheng, Betty H. C. and Goldsby, Heather and Zhang, Ji},
    booktitle = {Proceedings of the 2006 international workshop on Self-adaptation and self-managing systems},
    citeulike-article-id = {10274400},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1137677.1137682},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1137677.1137682},
    doi = {10.1145/1137677.1137682},
    isbn = {1-59593-403-0},
    location = {Shanghai, China},
    pages = {23--29},
    posted-at = {2012-01-27 04:58:03},
    priority = {0},
    publisher = {ACM},
    series = {SEAMS '06},
    title = {{Goal-oriented specification of adaptation requirements engineering in adaptive systems}},
    url = {http://dx.doi.org/10.1145/1137677.1137682},
    year = {2006}
}

@inproceedings{citeulike:10274142,
    abstract = {{Adaptivity is prevalent in today's software. Mobile devices self-adapt to available network connections, washing machines adapt to the amount of laundry, etc. Current approaches for engineering such systems facilitate the specification of adaptivity in the analysis and the technical design. However, the modeling of platform independent models for adaptivity in the logical design phase remains rather neglected causing a gap between the analysis and the technical design phase. To overcome this situation, we propose an approach called Adapt Cases. Adapt Cases allow the explicit modeling of adaptivity with domain-specific means, enabling adaptivity to gather attention early in the software engineering process. Since our approach is based on the concept of use cases it is easy adoptable in new and even running projects that use the UML as a specification language, and additionally, can be easily incorporated into model-based development environments.}},
    address = {New York, NY, USA},
    author = {Luckey, Markus and Nagel, Benjamin and Gerth, Christian and Engels, Gregor},
    booktitle = {Proceedings of the 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
    citeulike-article-id = {10274142},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1988014},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1988008.1988014},
    doi = {10.1145/1988008.1988014},
    isbn = {978-1-4503-0575-4},
    location = {Waikiki, Honolulu, HI, USA},
    pages = {30--39},
    posted-at = {2012-01-27 01:04:11},
    priority = {0},
    publisher = {ACM},
    series = {SEAMS '11},
    title = {{Adapt cases: extending use cases for adaptive systems}},
    url = {http://dx.doi.org/10.1145/1988008.1988014},
    year = {2011}
}

@book{citeulike:253697,
    abstract = {{Object Technology An invaluable collection of domain-specific frameworks Domain-Specific Application Frameworks Frameworks provide generic software architectures that can be reused, indefinitely, to generate new applications. But they don't readily translate from one business or industry domain to another. A telecommunications framework looks very different from a currency trading framework, for instance. Developers need instruction on how to build frameworks specific to the domains for which they program. Now, this book/CD-ROM package gives developers models-and much more. Each chapter is built around a case study reporting a major framework implementation or customization project. The 30 examples contained in the book cover an array of application domains, including:<br>   * Flexible manufacturing architectures<br>   * Computer-integrated manufacturing<br>   * New generation control systems<br>   * Concurrent engineering<br>   * Reliable distributed computing<br>   * High-performance Web servers<br>   * Multimedia telecommunications<br>   * Networking and telecommunications<br>   * Industrial visualization<br>   * And many others<br>   The enclosed CD-ROM gives you:<br>   * Example frameworks<br>   * Documentation and manuals<br>   * Framework code and implementation tips<br>   * Sample framework architectures and models<br>   * Design patterns and presentations<br>   * Animated demonstrations}},
    citeulike-article-id = {253697},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0471332801},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0471332801},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0471332801},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0471332801},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0471332801/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0471332801},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0471332801},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0471332801},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0471332801&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0471332801},
    day = {18},
    howpublished = {Hardcover},
    isbn = {0471332801},
    month = oct,
    posted-at = {2011-12-30 00:18:22},
    priority = {4},
    publisher = {Wiley},
    title = {{Domain-Specific Application Frameworks: Frameworks Experience by Industry}},
    url = {http://www.worldcat.org/isbn/0471332801},
    year = {1999}
}
%66
@article{Parnas1972,
    abstract = {{This paper discusses modularization as a mechanism for improving the flexibility and comprehensibility of a system while allowing the shortening of its development time. The effectiveness of a  ” modularization” is dependent upon the criteria used in dividing the system into modules. A system design problem is presented and both a conventional and unconventional decomposition are described. It is shown that the unconventional decompositions have distinct advantages for the goals outlined. The criteria used in arriving at the decompositions are discussed. The unconventional decomposition, if implemented with the conventional assumption that a module consists of one or more subroutines, will be less efficient in most cases. An alternative approach to implementation which does not have this effect is sketched.}},
    address = {New York, NY, USA},
    author = {Parnas, D. L.},
    citeulike-article-id = {95914},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=361623},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/361598.361623},
    doi = {10.1145/361598.361623},
    issn = {0001-0782},
    journal = {Commun. ACM},
    month = dec,
    number = {12},
    pages = {1053--1058},
    posted-at = {2011-12-20 14:45:53},
    priority = {0},
    publisher = {ACM},
    title = {{On the Criteria to Be Used in Decomposing Systems into Modules}},
    url = {http://dx.doi.org/10.1145/361598.361623},
    volume = {15},
    year = {1972}
}

@inproceedings{citeulike:10151042,
    abstract = {{Authoring tools for intelligent tutoring systems are especially valuable if they not only provide a rich set of options for the efficient authoring of tutoring systems but also support controlled experiments in which the added educational value of new tutor features is evaluated. The cognitive tutor authoring tools (CTAT) provide both. Using CTAT, real-world "example-tracing tutors" can be created without programming. CTAT also provides various kinds of support for controlled experiments, such as administration of different experimental treatments, logging, and data analysis. We present two case studies in which example-tracing tutors created with CTAT were used in classroom experiments. The case studies illustrate a number of new features in CTAT: use of Macromedia Flash MX 2004 for creating tutor interfaces, extensions to the example-tracing engine that allow for more flexible tutors, a mass production facility for more efficient template-based authoring, and support for controlled experiments}},
    author = {Aleven, V. and Sewall, J. and McLaren, B. M. and Koedinger, K. R.},
    booktitle = {Advanced Learning Technologies, 2006. Sixth International Conference on},
    citeulike-article-id = {10151042},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/icalt.2006.1652575},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1652575},
    doi = {10.1109/icalt.2006.1652575},
    institution = {Human-Comput. Interaction Inst., Carnegie Mellon Univ., Pittsburgh, PA},
    isbn = {0-7695-2632-2},
    month = jul,
    pages = {847--851},
    posted-at = {2011-12-20 14:00:18},
    priority = {4},
    publisher = {IEEE},
    title = {{Rapid Authoring of Intelligent Tutors for Real-World and Experimental Use}},
    url = {http://dx.doi.org/10.1109/icalt.2006.1652575},
    year = {2006}
}

@techreport{citeulike:10144034,
    abstract = {{One of the contributions of Xerox PARC to the art of programming is the multiwindowed highly interactive Smalltalk-80 interface. This type of interface has since been borrowed by the developers of the Apple Lisa and Macintosh and, in turn, by the Macintosh's many imitators. In such an interface, input is primarily by mouse and output is a mix of graphic and textual components as appropriate. The central concept behind the Smalltalk-80 user interface is the Model-View-Controller (MVC) paradigm. It is elegant and simple, but quite unlike the approach of traditional application programs. Because of its novelty, it requires some explanation -- explanation which is not readily available in published Smalltalk-80 references.

If you run the graphics example in class Pen, you might well wonder why this "application" draws directly on the screen rather than in a window like the browsers, workspaces, or transcripts with which you are familiar. Certainly you would wish your own applications to share space on the display with the easy aplomb of a workspace rather than simply overwrite the screen. Just what is the difference? Most simply put, ill behaved applications do not conform to the MVC paradigm, whereas the familiar well behaved applications do.

This paper is intended to provide the information essential for new Smalltalk-80 programmers to begin using MVC techniques in their own programs. Here we will introduce the mechanisms of MVC. Once you have digested this introduction you can strike out on your own. You will need to flesh out the information given here by looking at the way familiar kinds of views and controllers -- such as workspaces, browsers and file lists -- are set up. Browse early and often. Remember, this is Smalltalk-80. You are encouraged to copy. Start your own window by copying one that is similar to the one you want to create. Then modify it. Don't be shy. Feel free to stand on the shoulders of the many programmers who htridave contributed to the Smalltalk-80 V2.5 image. In a very real way, it is their gift to you.}},
    author = {Burbeck, Steve},
    citeulike-article-id = {10144034},
    institution = {Xerox Palo Alto Research Center},
    posted-at = {2011-12-19 20:16:31},
    priority = {4},
    title = {{How to use the Model-View-Controller}},
    year = {1992}
}

@book{citeulike:10143990,
    author = {Foote, Brian and Harrison, Neil and Rohnert, Hans},
    citeulike-article-id = {10143990},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201433044},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201433044},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201433044},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201433044},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201433044/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201433044},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201433044},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201433044},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201433044&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201433044},
    day = {17},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0201433044},
    month = dec,
    posted-at = {2011-12-19 20:07:56},
    priority = {4},
    publisher = {Addison Wesley Publishing Company},
    title = {{Pattern Languages of Program Design 4  (Software Patterns Series)}},
    url = {http://www.worldcat.org/isbn/0201433044},
    year = {1999}
}

@techreport{citeulike:10143943,
    author = {Fowler, Martin},
    citeulike-article-id = {10143943},
    day = {26},
    month = jun,
    posted-at = {2011-12-19 19:53:48},
    priority = {0},
    title = {{Inversion Of Control}},
    year = {2005}
}

@techreport{citeulike:10143924,
    author = {Martin, Robert C.},
    citeulike-article-id = {10143924},
    journal = {C++ Report},
    month = may,
    posted-at = {2011-12-19 19:46:12},
    priority = {4},
    title = {{The Dependency Inversion Principle}},
    year = {1996}
}

@article{citeulike:10143799,
    author = {Liskov, Barbara and Wing, Jeannette},
    citeulike-article-id = {10143799},
    journal = {ACM Transactions on Programming Languages and Systems},
    month = nov,
    number = {6},
    pages = {1811--1841},
    posted-at = {2011-12-19 19:18:29},
    priority = {2},
    title = {{A behavioral notion of subtyping}},
    volume = {16},
    year = {1994}
}

@book{citeulike:174301,
    author = {Bass, Len},
    citeulike-article-id = {174301},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321154959},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321154959},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/51861905},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321154959},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321154959},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321154959/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321154959},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321154959},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321154959},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321154959&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321154959},
    day = {19},
    edition = {2},
    howpublished = {Hardcover},
    isbn = {0321154959},
    month = apr,
    posted-at = {2011-12-19 18:05:53},
    priority = {0},
    publisher = {Addison-Wesley},
    title = {{Software architecture in practice}},
    url = {http://www.worldcat.org/isbn/0321154959},
    year = {2003}
}

@article{citeulike:10143437,
    abstract = {{The paper discusses ITS architectures in terms of patterns that exist within them. The concept of patterns has received surprisingly little attention so far from researchers in the field of ITS. A recent analysis of a number of existing ITS architectures has revealed that many ITS designers and developers use their own solutions when faced with design problems that are common to different systems, models, and paradigms. However, a closer look into such solutions and their comparison often shows that different solutions and the contexts in which they apply also have much in common, just like the corresponding problems do. In all such cases we can talk of the existence of patterns. A pattern is a generalized solution of a typical problem within a typical context. Discovering such patterns can help clarify general guiding principles of ITS-architectural design in a more systematic way.}},
    address = {Amsterdam, The Netherlands, The Netherlands},
    author = {Devedzic, Vladan and Harrer, Andreas},
    citeulike-article-id = {10143437},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1434926},
    issn = {1560-4292},
    journal = {Int. J. Artif. Intell. Ed.},
    month = apr,
    pages = {63--94},
    posted-at = {2011-12-19 17:50:05},
    priority = {5},
    publisher = {IOS Press},
    title = {{Software Patterns in ITS Architectures}},
    url = {http://portal.acm.org/citation.cfm?id=1434926},
    volume = {15},
    year = {2005}
}

@book{citeulike:3365146,
    abstract = {{Besides general-purpose designs, patterns can be specific to particular areas
of computing. Martin Fowler's \_Analysis Patterns: Reusable Object Models\_
contributes to the literature of patterns by defining more than 70 patterns
derived from the health care and financial areas.

The book begins with some intriguing patterns from the business world
including the Party and Accountability patterns, which define the players in
organisations and whom they report to. A considerable number of patterns are
drawn from the health care industry--principally doctor-patient interactions--
with patterns such as Observation, Measurement and Protocol. Obviously, these
will be most applicable to object modellers who work in this industry (though,
of course, patterns can often be used profitably in other fields).

The patterns for financial markets will probably be more interesting for most
readers. Fowler defines a Transaction pattern (and related patterns) as well
as several for the accounting of objects. He moves on to modelling stock
markets with patterns for Portfolio, Quote and Scenario (which defines how a
price for a stock is defined for a given moment). Interestingly, he defines
patterns for Forward Contracts (for derivatives) as well as Options, and so
takes on a complicated area of so much activity in today's financial markets.

The book benefits from the author's considerable design experience in these
fields. The author defines each pattern in text and in software-engineering
diagrams, but rarely provides implementations of these designs,
Implementations that are included are in Smalltalk, making this a book for
those experienced with object design. --\_Richard Dragan\_}},
    author = {Fowler, Martin},
    citeulike-article-id = {3365146},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201895420},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201895420},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201895420},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201895420},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201895420/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201895420},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201895420},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201895420},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201895420&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201895420},
    day = {09},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0201895420},
    month = oct,
    posted-at = {2011-12-19 17:42:37},
    priority = {4},
    publisher = {Addison-Wesley Professional},
    title = {{Analysis Patterns: Reusable Object Models}},
    url = {http://www.worldcat.org/isbn/0201895420},
    year = {1996}
}
%8
@book{Beck2002,
    author = {Beck, Kent},
    citeulike-article-id = {225134},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321146530},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321146530},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321146530},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321146530},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321146530/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321146530},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321146530},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321146530},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321146530&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321146530},
    day = {18},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0321146530},
    month = nov,
    posted-at = {2011-12-19 17:39:56},
    priority = {0},
    publisher = {Addison-Wesley Professional},
    title = {{Test Driven Development: By Example}},
    url = {http://www.worldcat.org/isbn/0321146530},
    year = {2002}
}

@book{citeulike:10143395,
    author = {Wilkinson, Nancy M.},
    citeulike-article-id = {10143395},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0133746798},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0133746798},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0133746798},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0133746798},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0133746798/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0133746798},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0133746798},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0133746798},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0133746798&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0133746798},
    day = {13},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0133746798},
    month = jan,
    posted-at = {2011-12-19 17:37:19},
    priority = {2},
    publisher = {Cambridge University Press},
    title = {{Using CRC Cards: An Informal Approach to Object-Oriented Development (SIGS: Advances in Object Technology)}},
    url = {http://www.worldcat.org/isbn/0133746798},
    year = {1998}
}

@book{citeulike:602181,
    abstract = {{Alistair Cockburn's <I>Writing Effective Use Cases</I> is an  approachable, informative, and very intelligent treatment of an essential topic  of software design. "Use cases" describe how "actors" interact with computer  systems and are essential to software-modeling requirements. For anyone who  designs software, this title offers some real insight into writing use cases  that are clear and correct and lead to better and less costly software.<p>  The focus of this text is on use cases that are <I>written</I>, as opposed to  modeled in UML. This book may change your mind about the advantages of writing  step-by-step descriptions of the way users (or actors) interact with systems.  Besides being an exceptionally clear writer, the author has plenty to say about  what works and what doesn't when it comes to creating use cases. There are  several standout bits of expertise on display here, including excellent  techniques for finding the right "scope" for use cases. (The book uses a color  scheme in which blue indicates a sea-level use case that's just right, while  higher-level use cases are white, and overly detailed ones are indigo. Cockburn  also provides notational symbols to document these levels of detail within a  design.)<p>  This book contains numerous tips on the writing style for use cases and plenty  of practical advice for managing projects that require a large number of use  cases. One particular strength lies in the numerous actual use cases (many with  impressive detail) that are borrowed from real-world projects, and demonstrate  both good and bad practices. Even though the author expresses a preference for  the format of use cases, he presents a variety of styles, including UML  graphical versions. The explanation of how use cases fit into the rest of the  software engineering process is especially good. The book concludes with several  dozen concrete tips for writing better use cases.<p>  Software engineering books often get bogged down in theory. Not so in <I>Writing  Effective Use Cases</I>, a slender volume with a practical focus, a concise  presentation style, and something truly valuable to say. This book will benefit  most anyone who designs software for a living. <I>--Richard Dragan</I><p>  <B>Topics covered:</B> <table cellspacing="7"  border="0"><ul><ol><tr><td><li>Introduction to use cases <li>Requirements  <li>Usage narratives <li>Actors and goals <li>Stakeholders <li>Graphical models  for use cases <li>Scope for use cases (enterprise-level through nuts-and-bolts  use cases) <li>Primary and supporting actors <li>Goal levels: user goals,  summary level, and subfunctions <li>Preconditions, triggers, and guarantees  <li>Main success scenarios <li>Extensions for describing failures  <td><br><td><li>Formats for use cases (including fully dressed one- and  two-column formats) <li>Use case templates for five common project types  <li>Managing use cases for large projects <li>CRUD use cases  <li>Business-process modeling <li>Missing requirements <li>Moving from use cases to  user-interface design <li>Test cases <li>eXtreme Programming (XP) and use cases  <li>Sample problem use cases <li>Tips for writing use cases <li>Use cases and  UML diagrams</ol></ul></table>}},
    author = {Cockburn, Alistair},
    citeulike-article-id = {602181},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201702258},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201702258},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201702258},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201702258},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201702258/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201702258},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201702258},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201702258},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201702258&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201702258},
    day = {15},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0201702258},
    month = oct,
    posted-at = {2011-12-19 17:31:58},
    priority = {4},
    publisher = {Addison-Wesley Professional},
    title = {{Writing Effective Use Cases}},
    url = {http://www.worldcat.org/isbn/0201702258},
    year = {2000}
}

@article{citeulike:1220612,
    abstract = {{An abstract is not available.}},
    address = {New York, NY, USA},
    author = {Boehm, B.},
    citeulike-article-id = {1220612},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=12948},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/12944.12948},
    doi = {10.1145/12944.12948},
    issn = {0163-5948},
    journal = {SIGSOFT Softw. Eng. Notes},
    keywords = {engineering, model, process, software},
    month = aug,
    number = {4},
    pages = {14--24},
    posted-at = {2011-12-19 17:21:53},
    priority = {0},
    publisher = {ACM},
    title = {{A spiral model of software development and enhancement}},
    url = {http://dx.doi.org/10.1145/12944.12948},
    volume = {11},
    year = {1986}
}

@inproceedings{citeulike:10143342,
    author = {Royce, Winston},
    booktitle = {Proceedings of IEEE WESCON 26},
    citeulike-article-id = {10143342},
    citeulike-linkout-0 = {http://leadinganswers.typepad.com/leading_answers/files/original_waterfall_paper_winston_royce.pdf},
    month = aug,
    pages = {1--9},
    posted-at = {2011-12-19 17:19:17},
    priority = {0},
    title = {{Managing the Development of Large Software Systems}},
    url = {http://leadinganswers.typepad.com/leading_answers/files/original_waterfall_paper_winston_royce.pdf},
    year = {1970}
}

%43
@book{Parr2010,
    author = {Parr, Terence},
    citeulike-article-id = {10140575},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/193435645X},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/193435645X},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/193435645X},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/193435645X},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/193435645X/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/193435645X},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/193435645X},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN193435645X},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=193435645X&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/193435645X},
    day = {07},
    edition = {1},
    howpublished = {Paperback},
    isbn = {193435645X},
    month = jan,
    posted-at = {2011-12-18 09:05:02},
    priority = {3},
    publisher = {Pragmatic Bookshelf},
    title = {{Language Implementation Patterns: Create Your Own Domain-Specific and General Programming Languages (Pragmatic Programmers)}},
    url = {http://www.worldcat.org/isbn/193435645X},
    year = {2010}
}
%41
@book{Kent2007,
    abstract = {{<P style="MARGIN: 0px">Great code doesn't just function: It clearly and consistently communicates your intentions, allowing other programmers to understand your code, rely on it, and modify it with confidence. But great code doesn't just happen. It is the outcome of hundreds of small but critical decisions programmers make every single day. Now, legendary software innovator Kent Beck--known worldwide for creating Extreme Programming and pioneering software patterns and test-driven development--focuses on these critical decisions, unearthing powerful  ” implementation patterns” for writing programs that are simpler, clearer, better organized, and more cost-effective. </P>  <P style="MARGIN: 0px"> </P>  <P style="MARGIN: 0px">Beck identifies 77 new patterns for handling everyday programming tasks and writing more readable code. These new patterns address many areas of development, including class, state, behavior, method, collections, frameworks, and more. You\&rsquo;ll find better solutions for handling everything from naming variables to checking exceptions. He uses diagrams, stories, examples, and essays to present each pattern in the most illuminating way possible. </P>  <P style="MARGIN: 0px"> </P>  <P style="MARGIN: 0px">The book covers</P>  <UL>  <LI>  <DIV style="MARGIN: 0px">The value of communicating through code, and the philosophy behind patterns</DIV>  <LI>  <DIV style="MARGIN: 0px">How and when to create classes, and how classes encode logic</DIV>  <LI>  <DIV style="MARGIN: 0px">Best practices for storing and retrieving state</DIV>  <LI>  <DIV style="MARGIN: 0px">Behavior: Patterns for representing logic, including alternative paths</DIV>  <LI>  <DIV style="MARGIN: 0px">Writing, naming, and decomposing methods</DIV>  <LI>  <DIV style="MARGIN: 0px">Choosing and using collections</DIV>  <LI>  <DIV style="MARGIN: 0px">Implementation pattern variations for use in building frameworks</DIV></LI></UL>  <P style="MARGIN: 0px"><B><I>Implementation Patterns</I></B> will help programmers at all experience levels, especially those who have benefited from software patterns or agile methods. It will also be an indispensable resource for development teams seeking to work together more efficiently and build more maintainable software. No other software engineering book will touch your day-to-day work more often, and no other book will prove more useful.</P>}},
    author = {Beck, Kent},
    citeulike-article-id = {1730948},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321413091},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321413091},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321413091},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321413091},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321413091/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321413091},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321413091},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321413091},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321413091&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321413091},
    day = {02},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0321413091},
    month = nov,
    posted-at = {2011-12-18 07:33:40},
    priority = {4},
    publisher = {Addison-Wesley Professional},
    title = {{Implementation Patterns}},
    url = {http://www.worldcat.org/isbn/0321413091},
    year = {2007}
}

@book{citeulike:212432,
    author = {Kroll, Per and Kruchten, Philippe},
    citeulike-article-id = {212432},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321166094},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321166094},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321166094},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321166094},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321166094/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321166094},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321166094},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321166094},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321166094&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321166094},
    day = {18},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0321166094},
    keywords = {architecture, design, engineering, software},
    month = apr,
    posted-at = {2011-12-18 07:14:16},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {{The Rational Unified Process Made Easy: A Practitioner's Guide to the RUP: A Practitioner's Guide to the RUP}},
    url = {http://www.worldcat.org/isbn/0321166094},
    year = {2003}
}
%10
@book{Gamma1994,
    abstract = {{Four software designers present a catalog of simple and succinct solutions to commonly occurring design problems, using Smalltalk and C++ in example code. These 23 patterns allow designers to create more flexible, elegant, and ultimately reusable designs without having to rediscover the design solutions themselves. The authors begin by describing what patterns are and how they can help you design object-oriented software. They go on to systematically name, explain, evaluate, and catalog recurring designs in object-oriented systems.--From publisher description.}},
    author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John},
    citeulike-article-id = {115158},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201633612},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201633612},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/31171684},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201633612},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201633612},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201633612/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201633612},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201633612},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201633612},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201633612&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201633612},
    day = {10},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0201633612},
    keywords = {architecture, design, engineering, software},
    month = nov,
    posted-at = {2011-12-18 07:07:02},
    priority = {0},
    publisher = {Addison-Wesley Professional},
    title = {{Design Patterns: Elements of Reusable Object-Oriented Software}},
    url = {http://www.worldcat.org/isbn/0201633612},
    year = {1994}
}

@article{citeulike:8813454,
    abstract = {{Computational thinking will influence everyone in every field of endeavour. This vision poses a new educational challenge for our society, especially for our children. In thinking about computing, we need to be attuned to the three drivers of our field: science, technology and society. Accelerating technological advances and monumental societal demands force us to revisit the most basic scientific questions of computing.}},
    author = {Wing, Jeannette M.},
    citeulike-article-id = {8813454},
    citeulike-linkout-0 = {http://dx.doi.org/10.1098/rsta.2008.0118},
    citeulike-linkout-1 = {http://rsta.royalsocietypublishing.org/cgi/content/abstract/366/1881/3717},
    citeulike-linkout-2 = {http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2696102/},
    citeulike-linkout-3 = {http://view.ncbi.nlm.nih.gov/pubmed/18672462},
    citeulike-linkout-4 = {http://www.hubmed.org/display.cgi?uids=18672462},
    day = {28},
    doi = {10.1098/rsta.2008.0118},
    issn = {1364-503X},
    journal = {Philosophical transactions. Series A, Mathematical, physical, and engineering sciences},
    keywords = {computational, thinking},
    month = oct,
    number = {1881},
    pages = {3717--3725},
    pmcid = {PMC2696102},
    pmid = {18672462},
    posted-at = {2011-12-03 00:07:16},
    priority = {0},
    title = {{Computational thinking and thinking about computing.}},
    url = {http://dx.doi.org/10.1098/rsta.2008.0118},
    volume = {366},
    year = {2008}
}

@book{citeulike:9308002,
    author = {Crocker, Linda and Algina, James},
    citeulike-article-id = {9308002},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0495395919},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0495395919},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0495395919},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0495395919},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0495395919/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0495395919},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0495395919},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0495395919},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0495395919&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0495395919},
    day = {09},
    howpublished = {Paperback},
    isbn = {0495395919},
    month = nov,
    posted-at = {2011-10-28 12:18:49},
    priority = {2},
    publisher = {Wadsworth Pub Co},
    title = {{Introduction to Classical and Modern Test Theory}},
    url = {http://www.worldcat.org/isbn/0495395919},
    year = {2006}
}

@article{citeulike:9953398,
    abstract = {{A recognized engineering profession must have an established body
of knowledge and skill that its practitioners understand and use
consistently. After 30 years, there is still a wide gap between the best
and the typical software engineering practices. To close this gap, we
need a deeper partnership among industry, academia, and professional
societies. We have spent some time considering the reasons for SE's
immaturity. All of us are heavily involved in both industry and academia
and have been active in professional societies that aim to promote SE as
a profession. Promotion efforts are by no means limited to the US, but
because our experience is primarily with US activities, that is our
focus in this article. Our main goal is to explore, from a multifaceted
perspective, why we are where we are now and how we can move forward}},
    author = {Pour, G. and Griss, M. L. and Lutz, M.},
    citeulike-article-id = {9953398},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/2.841782},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=841782},
    doi = {10.1109/2.841782},
    issn = {0018-9162},
    journal = {Computer},
    month = may,
    number = {5},
    pages = {35--43},
    posted-at = {2011-10-28 12:14:29},
    priority = {0},
    publisher = {IEEE},
    title = {{The push to make software engineering respectable}},
    url = {http://dx.doi.org/10.1109/2.841782},
    volume = {33},
    year = {2000}
}
%6
@book{Martin2016,
    abstract = {{Even bad code can function. But if code isn't clean, it can bring a
development organization to its knees. Every year, countless hours and
significant resources are lost because of poorly written code. But it doesn't
have to be that way.


Noted software expert Robert C. Martin presents a revolutionary paradigm with
\_**Clean Code: A Handbook of Agile Software Craftsmanship**\_. Martin has
teamed up with his colleagues from Object Mentor to distill their best agile
practice of cleaning code  ” on the fly” into a book that will instill within
you the values of a software craftsman and make you a better programmer—but
only if you work at it.


What kind of work will you be doing? You'll be reading code—lots of code. And
you will be challenged to think about what's right about that code, and what's
wrong with it. More importantly, you will be challenged to reassess your
professional values and your commitment to your craft.


\_**Clean Code**\_ is divided into three parts. The first describes the
principles, patterns, and practices of writing clean code. The second part
consists of several case studies of increasing complexity. Each case study is
an exercise in cleaning up code—of transforming a code base that has some
problems into one that is sound and efficient. The third part is the payoff: a
single chapter containing a list of heuristics and  ” smells” gathered while
creating the case studies. The result is a knowledge base that describes the
way we think when we write, read, and clean code.


Readers will come away from this book understanding

  * How to tell the difference between good and bad code

  * How to write good code and how to transform bad code into good code

  * How to create good names, good functions, good objects, and good classes

  * How to format code for maximum readability

  * How to implement complete error handling without obscuring code logic

  * How to unit test and practice test-driven development

This book is a must for any developer, software engineer, project manager,
team lead, or systems analyst with an interest in producing better code.}},
    author = {Martin, Robert C. and Coplien, James O. and Wampler, Kevin and Grenning, James W. and Schuchert, Brett L. and Langr, Jeff and Ottinger, Timothy R. and Feathers, Michael C.},
    citeulike-article-id = {3766584},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0132350882},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0132350882},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/223933035},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0132350882},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0132350882},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0132350882/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0132350882},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0132350882},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0132350882},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0132350882&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0132350882},
    day = {11},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0132350882},
    month = aug,
    posted-at = {2011-10-28 12:08:25},
    priority = {0},
    publisher = {Prentice Hall},
    title = {{Clean code : a handbook of agile software craftsmanship}},
    url = {http://www.worldcat.org/isbn/0132350882},
    year = {2016}
}
%24
@book{Knuth1992,
    abstract = {{Literate programming is a programming methodology that combines a programming language with a documentation language, making programs more robust, more portable, and more easily maintained than programs written only in a high-level language. Computer programmers already know both kinds of languages; they need only learn a few conventions about alternating between languages to create programs that are works of literature. A literate programmer is an essayist who writes programs for humans to understand, instead of primarily writing instructions for machines to follow. When programs are written in the recommended style they can be transformed into documents by a document compiler and into efficient code by an algebraic compiler. This anthology of essays from the inventor of literate programming includes Knuth's early papers on related topics such as structured programming, as well as the Computer Journal article that launched literate programming itself.}},
    author = {Knuth, Donald E.},
    citeulike-article-id = {907216},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0937073806},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0937073806},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0937073806},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0937073806},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0937073806/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0937073806},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0937073806},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0937073806},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0937073806&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0937073806},
    day = {01},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0937073806},
    month = jun,
    posted-at = {2011-10-28 12:06:32},
    priority = {2},
    publisher = {Center for the Study of Language and Inf},
    title = {{Literate Programming (Center for the Study of Language and Information - Lecture Notes)}},
    url = {http://www.worldcat.org/isbn/0937073806},
    year = {1992}
}

@article{citeulike:9953386,
    abstract = {{Software Engineering programs have become a source of contention
in many universities. Computer Science departments, many of which have
used that phrase to describe individual courses for decades, claim SE as
part of their discipline. Yet some engineering faculties claim it as a
new specialty among the engineering disciplines. This article discusses
the differences between traditional CS programs and most engineering
programs, and argues that we need SE programs that follow the
traditional engineering approach to professional education}},
    author = {Parnas, David L.},
    citeulike-article-id = {9953386},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/52.805469},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=805469},
    doi = {10.1109/52.805469},
    institution = {McMaster Univ., Hamilton, Ont., Canada},
    issn = {0740-7459},
    journal = {Software, IEEE},
    month = nov,
    number = {6},
    pages = {19--30},
    posted-at = {2011-10-28 12:05:07},
    priority = {2},
    publisher = {IEEE},
    title = {{Software engineering programs are not computer science programs}},
    url = {http://dx.doi.org/10.1109/52.805469},
    volume = {16},
    year = {1999}
}

@inproceedings{citeulike:9953371,
    abstract = {{Software engineering has evolved, over a short period of time, into a dominant and omnipresent industry. In education we have recognized the importance of both managerial and technical aspects, but often failed to organize them in a coherent course with a relevant, if not realistic laboratory project. The problem is far-reaching, and should be dealt with accordingly. This paper presents our before and after findings, and elaborates on CPE 207, the new Software Engineering course that, in our opinion, helps in bridging the gap between university and industry.}},
    address = {New York, NY, USA},
    author = {Stankovic, Nenad},
    booktitle = {Proceedings of the 28th international conference on Software engineering},
    citeulike-article-id = {9953371},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1134285.1134386},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1134285.1134386},
    doi = {10.1145/1134285.1134386},
    isbn = {1-59593-375-1},
    location = {Shanghai, China},
    pages = {661--666},
    posted-at = {2011-10-28 11:55:56},
    priority = {0},
    publisher = {ACM},
    series = {ICSE '06},
    title = {{Software engineering for undergraduates}},
    url = {http://dx.doi.org/10.1145/1134285.1134386},
    year = {2006}
}

@book{citeulike:9953368,
    author = {Sheppard},
    citeulike-article-id = {9953368},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0787977438},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0787977438},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0787977438},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0787977438},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0787977438/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0787977438},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0787977438},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0787977438},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0787977438&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0787977438},
    howpublished = {Hardcover},
    isbn = {0787977438},
    posted-at = {2011-10-28 11:53:46},
    priority = {0},
    publisher = {Jossey-Bass},
    title = {{Educating Engineers: Designing for the Future of the Field -- 2008 publication}},
    url = {http://www.worldcat.org/isbn/0787977438}
}

@article{citeulike:845488,
    abstract = {{An abstract is not available.}},
    address = {New York, NY, USA},
    author = {Lethbridge, Timothy C.},
    citeulike-article-id = {845488},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=352338},
    citeulike-linkout-1 = {http://dx.doi.org/10.1016/s0164-1212(00)00009-1},
    citeulike-linkout-2 = {http://www.sciencedirect.com/science/article/B6V0N-40TR5H5-7/2/d69defdd88440efaba013d4c9546d827},
    day = {15},
    doi = {10.1016/s0164-1212(00)00009-1},
    issn = {0164-1212},
    journal = {J. Syst. Softw.},
    month = jul,
    number = {1},
    pages = {53--71},
    posted-at = {2011-10-28 11:52:02},
    priority = {0},
    publisher = {Elsevier Science Inc.},
    title = {{Priorities for the education and training of software engineers}},
    url = {http://dx.doi.org/10.1016/s0164-1212(00)00009-1},
    volume = {53},
    year = {2000}
}

@article{citeulike:9953364,
    abstract = {{Reporting on the SWEBOK project, the authors-who represent the
project's editorial team-discuss the three-phase plan to characterize a
body of knowledge, a vital step toward developing software engineering
as a profession}},
    author = {Bourque, P. and Dupuis, R. and Abran, A. and Moore, J. W. and Tripp, L.},
    citeulike-article-id = {9953364},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/52.805471},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=805471},
    doi = {10.1109/52.805471},
    issn = {0740-7459},
    journal = {Software, IEEE},
    month = nov,
    number = {6},
    pages = {35--44},
    posted-at = {2011-10-28 11:51:17},
    priority = {2},
    publisher = {IEEE},
    title = {{The guide to the Software Engineering Body of Knowledge}},
    url = {http://dx.doi.org/10.1109/52.805471},
    volume = {16},
    year = {1999}
}

@article{citeulike:9953361,
    abstract = {{This paper describes a two year undergraduate education program in
software engineering. This program is designed around the principle of
exploratory learning, whereby the students are trained to build
knowledge by themselves and actively search for solutions to the
problems they experience. In addition to the essential aspects of
software engineering: managing complexity of large, changing systems and
the ability to work in teams; the program also aims to prepare the
students for working in a field of rapidly changing conditions and
constraints. This paper describes how these high level goals have been
implemented in an actual curriculum. At the core of the program is a set
of project courses which are conducted as role playing games in order to
simulate the conditions in an industrial environment. Two years worth of
students have graduated from the program now, and the paper summarizes
the main lessons learned as well as a follow-up survey of experiences
from some of the organizations who hired the students}},
    author = {Ohlsson, L. and Johansson, C.},
    citeulike-article-id = {9953361},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/13.406508},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=406508},
    doi = {10.1109/13.406508},
    issn = {0018-9359},
    journal = {Education, IEEE Transactions on},
    month = aug,
    number = {3},
    pages = {291--295},
    posted-at = {2011-10-28 11:49:40},
    priority = {2},
    publisher = {IEEE},
    title = {{A practice driven approach to software engineering education}},
    url = {http://dx.doi.org/10.1109/13.406508},
    volume = {38},
    year = {1995}
}
%36
@book{Clark2006,
    abstract = {{<i>Efficiency in Learning</i> offers a road map of the most effective ways to use the three fundamental communication of training: visuals, written text, and audio. Regardless of how you are delivering your training materials\&\#8212;in the classroom, in print, by synchronous or asynchronous media\&\#8212;the book\&\#8217;s methods are easily applied to your lesson presentations, handouts, reference guides, or e-learning screens. Designed to be a down-to-earth resource for all instructional professionals, <i>Efficiency in Learning</i>\&\#8217;s guidelines are clearly illustrated with real-world examples.}},
    author = {Clark, Ruth C. and Nguyen, Frank and Sweller, John},
    citeulike-article-id = {1556146},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0787977284},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0787977284},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0787977284},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0787977284},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0787977284/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0787977284},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0787977284},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0787977284},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0787977284&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0787977284},
    day = {16},
    howpublished = {Hardcover},
    isbn = {0787977284},
    month = dec,
    posted-at = {2011-10-28 11:45:42},
    priority = {0},
    publisher = {Pfeiffer},
    title = {{Efficiency in Learning: Evidence-Based Guidelines to Manage Cognitive Load}},
    url = {http://www.worldcat.org/isbn/0787977284},
    year = {2005}
}

@article{citeulike:9953354,
    abstract = {{The Software Engineering Education Project's objective is to
recommend curricula to prepare professionals in software engineering.
This article reports on SWEEP's initial progress and its future goals to
address undergraduate- and graduate-level accreditation for software
engineering and technology programs}},
    author = {Engel, G. L.},
    citeulike-article-id = {9953354},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/52.805470},
    citeulike-linkout-1 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=805470},
    doi = {10.1109/52.805470},
    issn = {0740-7459},
    journal = {Software, IEEE},
    month = nov,
    number = {6},
    pages = {31--34},
    posted-at = {2011-10-28 11:44:49},
    priority = {0},
    publisher = {IEEE},
    title = {{Program criteria for software engineering accreditation programs}},
    url = {http://dx.doi.org/10.1109/52.805470},
    volume = {16},
    year = {1999}
}

@inproceedings{citeulike:1986444,
    abstract = {{An abstract is not available.}},
    address = {New York, NY, USA},
    author = {Shaw, Mary},
    booktitle = {Proceedings of the Conference on The Future of Software Engineering},
    citeulike-article-id = {1986444},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=336512.336592},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/336512.336592},
    doi = {10.1145/336512.336592},
    isbn = {1-58113-253-0},
    location = {Limerick, Ireland},
    pages = {371--380},
    posted-at = {2011-10-28 11:41:38},
    priority = {0},
    publisher = {ACM},
    series = {ICSE '00},
    title = {{Software engineering education: a roadmap}},
    url = {http://dx.doi.org/10.1145/336512.336592},
    year = {2000}
}

@electronic{citeulike:9953309,
    author = {Fowler, Martin},
    citeulike-article-id = {9953309},
    citeulike-linkout-0 = {http://martinfowler.com/bliki/Swebok.html},
    day = {24},
    month = jun,
    posted-at = {2011-10-28 11:35:58},
    priority = {0},
    title = {{Swebok}},
    url = {http://martinfowler.com/bliki/Swebok.html},
    year = {2003}
}

@article{citeulike:9722271,
    abstract = {{Wherein may be discerned the true essence of moral depravity, or that which really does, like a cesspool, corrupt whatever comes under its influence, as containing within itself all evil and ugliness.}},
    author = {Cronus, Diodorus},
    citeulike-article-id = {9722271},
    journal = {SOUTHERN JOURNAL OF PHILOSOPHY},
    keywords = {morality, philosophy},
    month = may,
    number = {2},
    pages = {113--118},
    posted-at = {2011-08-28 10:56:09},
    priority = {0},
    title = {THE GOVERNANCE OF THE KINGDOM OF DARKNESS},
    volume = {9},
    year = {1971}
}

@article{citeulike:9366240,
    author = {Vegso, Jay},
    citeulike-article-id = {9366240},
    journal = {Computing Research News},
    keywords = {trends},
    number = {2},
    pages = {1+},
    posted-at = {2011-06-03 08:12:39},
    priority = {0},
    title = {{Enrollments and Degree Production at US CS Departments Drop Further in 2006-07}},
    volume = {20},
    year = {2008}
}

@article{citeulike:9365773,
    author = {Guthrie, John T. and Wigfield, Allan and Barbosa, Pedro and Perencevich, Kathleen C. and Taboada, Ana and Davis, Marcia H. and Scafiddi, Nicole T. and Tonks, Stephen},
    citeulike-article-id = {9365773},
    citeulike-linkout-0 = {http://dx.doi.org/10.1037/0022-0663.96.3.403},
    doi = {10.1037/0022-0663.96.3.403},
    issn = {0022-0663},
    journal = {Journal of Educational Psychology},
    keywords = {learning},
    number = {3},
    pages = {403--423},
    posted-at = {2011-06-03 07:36:14},
    priority = {2},
    title = {{Increasing Reading Comprehension and Engagement Through Concept-Oriented Reading Instruction.}},
    url = {http://dx.doi.org/10.1037/0022-0663.96.3.403},
    volume = {96},
    year = {2004}
}

@article{citeulike:6396856,
    abstract = {{Many innovative approaches to education such as problem-based learning (PBL) and inquiry learning (IL) situate learning in problem-solving or investigations of complex phenomena. Kirschner, Sweller, and Clark (2006) grouped these approaches together with unguided discovery learning. However, the problem with their line of argument is that IL and PBL approaches are highly scaffolded. In this article, we first demonstrate that Kirschner et al. have mistakenly conflated PBL and IL with discovery learning. We then present evidence demonstrating that PBL and IL are powerful and effective models of learning. Far from being contrary to many of the principles of guided learning that Kirschner et al. discussed, both PBL and IL employ scaffolding extensively thereby reducing the cognitive load and allowing students to learn in complex domains. Moreover, these approaches to learning address important goals of education that include content knowledge, epistemic practices, and soft skills such as collaboration and self-directed learning.}},
    author = {Hmelo-Silver, Cindy E. and Duncan, Ravit G. and Chinn, Clark A.},
    citeulike-article-id = {6396856},
    citeulike-linkout-0 = {http://dx.doi.org/10.1080/00461520701263368},
    citeulike-linkout-1 = {http://www.tandfonline.com/doi/abs/10.1080/00461520701263368},
    day = {26},
    doi = {10.1080/00461520701263368},
    journal = {Educational Psychologist},
    keywords = {learning},
    month = apr,
    number = {2},
    pages = {99--107},
    posted-at = {2011-06-03 07:30:59},
    priority = {2},
    publisher = {Routledge},
    title = {{Scaffolding and Achievement in Problem-Based and Inquiry Learning: A Response to Kirschner, Sweller, and Clark (2006)}},
    url = {http://dx.doi.org/10.1080/00461520701263368},
    volume = {42},
    year = {2007}
}

@electronic{citeulike:9365704,
    author = {Leonard, Kristi and Noh, Erin K. and Orey, Michael},
    citeulike-article-id = {9365704},
    citeulike-linkout-0 = {http://projects.coe.uga.edu/epltt/},
    day = {2},
    keywords = {learning},
    month = jun,
    posted-at = {2011-06-03 07:20:12},
    priority = {2},
    school = {University of Georgia},
    title = {{Introduction to Emerging Perspectives on Learning, Teaching, and Technology}},
    url = {http://projects.coe.uga.edu/epltt/},
    year = {2011}
}

@article{citeulike:9215972,
    author = {Fleming, Neil D. and Mills, Colleen},
    citeulike-article-id = {9215972},
    citeulike-linkout-0 = {http://www.ntlf.com/html/lib/suppmat/74fleming.htm},
    journal = {To Improve the Academy},
    keywords = {learning, styles},
    pages = {137+},
    posted-at = {2011-06-03 07:06:24},
    priority = {0},
    title = {{Not Another Inventory, Rather a Catalyst for Reflection}},
    url = {http://www.ntlf.com/html/lib/suppmat/74fleming.htm},
    volume = {11},
    year = {1992}
}

@book{citeulike:4270060,
    author = {Honey, Peter and Mumford, Alan},
    citeulike-article-id = {4270060},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0950844403},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0950844403},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0950844403},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0950844403},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0950844403/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0950844403},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0950844403},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0950844403},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0950844403&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0950844403},
    howpublished = {Paperback},
    isbn = {0950844403},
    keywords = {learning, styles},
    posted-at = {2011-06-03 06:39:23},
    priority = {2},
    publisher = {Peter Honey Publications},
    title = {{Manual of Learning Styles}},
    url = {http://www.worldcat.org/isbn/0950844403}
}

@book{citeulike:2363374,
    author = {Kolb, David A.},
    citeulike-article-id = {2363374},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0132952610},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0132952610},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/12468283},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0132952610},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0132952610},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0132952610/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0132952610},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0132952610},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0132952610},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0132952610&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0132952610},
    day = {01},
    edition = {1},
    howpublished = {Paperback},
    isbn = {0132952610},
    keywords = {learning, styles},
    month = oct,
    posted-at = {2011-06-03 06:37:33},
    priority = {2},
    publisher = {Prentice Hall},
    title = {{Experiential Learning: Experience as the Source of Learning and Development}},
    url = {http://www.worldcat.org/isbn/0132952610},
    year = {1983}
}

@article{citeulike:9333261,
    abstract = {{Abstract With the rising popularity of so-called 'open source' software there has been increasing interest in both its various benefits and disadvantages. In particular, despite its prominent use in providing many aspects of the Internet's basic infrastructure, many still question the suitability of such software for the commerce-oriented Internet of the future. This paper evaluates the suitability of open source software with respect to one of the key attributes that tomorrow's Internet will require, namely security. It seeks to present a variety of arguments that have been made, both for and against open source security and analyses in relation to empirical evidence of system security from a previous study. The results represent preliminary quantitative evidence concerning the security issues surrounding the use and development of open source software, in particular relative to traditional proprietary software.}},
    author = {Payne, Christian},
    citeulike-article-id = {9333261},
    citeulike-linkout-0 = {http://dx.doi.org/10.1046/j.1365-2575.2002.00118.x},
    doi = {10.1046/j.1365-2575.2002.00118.x},
    journal = {Information Systems Journal},
    keywords = {engineering, security, software},
    number = {1},
    pages = {61--78},
    posted-at = {2011-05-23 07:43:09},
    priority = {4},
    publisher = {Blackwell Science Ltd},
    title = {{On the security of open source software}},
    url = {http://dx.doi.org/10.1046/j.1365-2575.2002.00118.x},
    volume = {12},
    year = {2002}
}

@book{citeulike:9308134,
    abstract = {{A general-purpose language like C\# is designed to handle all programming tasks. By contrast, the structure and syntax of a Domain-Specific Language are designed to match a particular applications area. A DSL is designed for readability and easy programming of repeating problems. Using the innovative Boo language, it's a breeze to create a DSL for your application domain that works on .NET and does not sacrifice performance. DSLs in Boo shows you how to design, extend, and evolve DSLs for .NET by focusing on approaches and patterns. You learn to define an app in terms that match the domain, and to use Boo to build DSLs that generate efficient executables. And you won't deal with the awkward XML-laden syntax many DSLs require. The book concentrates on writing internal (textual) DSLs that allow easy extensibility of the application and framework. And if you don't know Boo, don't worry-you'll learn right here all the techniques you need.}},
    address = {Greenwich, CT, USA},
    author = {Rahien, Ayende},
    citeulike-article-id = {9308134},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1824316},
    edition = {1st},
    isbn = {1933988606, 9781933988603},
    keywords = {engineering, programming, software},
    posted-at = {2011-05-18 04:45:15},
    priority = {4},
    publisher = {Manning Publications Co.},
    title = {{DSLs in Boo: Domain Specific Languages in .NET}},
    url = {http://portal.acm.org/citation.cfm?id=1824316},
    year = {2010}
}

@electronic{citeulike:9308132,
    abstract = {{Programmers who suffer from repetitive stress injuries find it difficult to program by typing. Speech interfaces can reduce the amount of typing, but existing programming-byvoice tools make it awkward for programmers to enter and edit program text. We used a human-centric approach to address these problems. We first studied how programmers verbalize code, and found that spoken programs contain lexical, syntactic and semantic ambiguities that do not appear in written programs. Using the results from this study, we designed Spoken Java, a syntactically similar, yet semantically identical variant of Java that is easier to speak. We built an Eclipse IDE plugin called SPEED (for SPEech EDitor) to support the combination of Spoken Java and an associated command language. In this paper, we report the results of the first study ever of any working programmingby-voice system. Our evaluation with expert Java developers showed that most developers had little trouble learning to use the system via spoken commands, but were reluctant to speak literal code out loud. As expected, programmers found programming by voice to be slower than typing. 1.}},
    author = {Begel, Andrew},
    citeulike-article-id = {9308132},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.71.472},
    posted-at = {2011-05-18 04:40:25},
    priority = {0},
    title = {{An Assessment of a Speech-Based Programming Environment}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.71.472}
}

@article{citeulike:104431,
    abstract = {{An abstract is not available.}},
    address = {Denville, NJ, USA},
    author = {Krasner, Glenn E. and Pope, Stephen T.},
    citeulike-article-id = {104431},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=50757.50759},
    issn = {0896-8438},
    journal = {J. Object Oriented Program.},
    keywords = {architecture, engineering, software},
    month = aug,
    number = {3},
    pages = {26--49},
    posted-at = {2011-05-18 04:34:56},
    priority = {2},
    publisher = {SIGS Publications},
    title = {{A Cookbook for Using the Model-view Controller User Interface Paradigm in Smalltalk-80}},
    url = {http://portal.acm.org/citation.cfm?id=50757.50759},
    volume = {1},
    year = {1988}
}

@electronic{citeulike:1082626,
    author = {Csiksczentmihalyi, Mihaly},
    citeulike-article-id = {1082626},
    citeulike-linkout-0 = {http://web.ionsys.com/~remedy/FLOW .htm},
    posted-at = {2011-05-18 04:31:07},
    priority = {2},
    title = {FLOW: THE PSYCHOLOGY OF OPTIMAL EXPERIENCE},
    url = {http://web.ionsys.com/~remedy/FLOW .htm}
}
%39
@book{Rumbaugh1999,
    abstract = {The Unified Modeling Language (UML) has rapidly become the standard notation for modeling software-intensive systems. This book provides the definitive description of UML from its original developers--James Rumbaugh, Ivar Jacobson, and Grady Booch. Whether you are capturing requirements, developing a software architecture, designing the implementation, or trying to understand an existing system, this is the book for you. The majority of the book is a unique alphabetical list of articles covering every aspect of UML in a form convenient for quick reference and detailed study. This format permits full coverage of UML details as well as high-level articles without confusing the reader by constant shifts in level. The first part of the book--a complete summary of UML concepts organized by subject area--provides an introduction to UML for the newcomer as well as entry points into the detailed articles. Highlights of the book include: \begin{itemize} \item Two-color diagrams, extensively annotated. \item Thorough coverage of both semantics and notation, separated in each article for easy reference. \item Further explanations of concepts whose meaning or purpose is obscure in the original specifications. \item Discussion sections offering usage advice and additional insight into tricky concepts. \item A hyperlinked version of the book in Adobe Reader format on CD-ROM, an excellent resource for browsing or searching the text for specific information. \item Full text of the \UML{} specification documents on CD-ROM, courtesy of the Object Management Group. \item Notation summary, with hyperlinks to individual articles on CD-ROM. \end{itemize}},
    author = {Rumbaugh, James and Jacobson, Robert and Booch, Grady},
    citeulike-article-id = {904911},
    citeulike-linkout-0 = {#},
    edition = {1\$^{st}\$},
    month = jan,
    posted-at = {2011-05-18 04:26:44},
    priority = {4},
    publisher = {Addison-Wesley},
    title = {{The Unified Modelling Language Reference Manual}},
    url = {www.amazon.co.uk/exec/obidos/ASIN/020130998X/026-2174472-9898019},
    year = {1999}
}

@book{citeulike:1199257,
    abstract = {{An abstract is not available.}},
    address = {Essex, UK, UK},
    author = {Fowler, Martin and Scott, Kendall},
    citeulike-article-id = {1199257},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=270005},
    isbn = {0-201-32563-2},
    posted-at = {2011-05-18 04:25:55},
    priority = {4},
    publisher = {Addison-Wesley Longman Ltd.},
    title = {{UML distilled: applying the standard object modeling language}},
    url = {http://portal.acm.org/citation.cfm?id=270005},
    year = {1997}
}
%14
@electronic{Beck1989,
    abstract = {{It is difficult to introduce both novice and experienced procedural programmers to the anthropomorphic perspective necessary for object-oriented design. We introduce CRC cards, which characterize objects by class name, responsibilities, and collaborators, as a way of giving learners a direct experience of objects. We have found this approach successful in teaching novice programmers the concepts of objects, and in introducing experienced programmers to complicated existing designs. 1. Problem The most difficult problem in teaching object-oriented programming is getting the learner to give up the global knowledge of control that is possible with procedural programs, and rely on the local knowledge of objects to accomplish their tasks. Novice designs are littered with regressions to global thinking: gratuitous global variables, unnecessary pointers, and inappropriate reliance on the implementation of other objects. Because learning about objects requires such a shift in overall approach, teaching objects Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission.}},
    address = {http://c2.com/doc/oopsla89/paper.html},
    author = {Beck, Kent and Cunningham, Ward and Services, Wyatt S.},
    citeulike-article-id = {9308113},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.129.4074},
    keywords = {engineering, software},
    pages = {1--6},
    posted-at = {2011-05-18 04:23:54},
    priority = {2},
    title = {{A laboratory for teaching object-oriented thinking}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.129.4074},
    volume = {24},
    year = {1989}
}

@inproceedings{Begel05programmingby,
    author = {Begel, Andrew},
    booktitle = {In AVIOS Speech Technology Symposium – SpeechTek West},
    citeulike-article-id = {9308103},
    keywords = {*file-import-11-05-18},
    posted-at = {2011-05-18 04:06:40},
    priority = {4},
    title = {{Programming by voice: A domain-specific application of speech recognition}},
    year = {2005}
}

@inproceedings{626555,
    author = {Leopold, J. L. and Ambler, A. L.},
    booktitle = {Visual Languages, 1997. Proceedings. 1997 IEEE Symposium on},
    citeulike-article-id = {9308092},
    citeulike-linkout-0 = {http://dx.doi.org/10.1109/VL.1997.626555},
    doi = {10.1109/VL.1997.626555},
    keywords = {aidshandwriting, application, communicationkeyboardless, development, developmentgesture, editingprogramming, environmentsreliabilityspeech-based, environmentssoftware, impairedmultimodal, impairedvoice, interfacepen-based, interfaceprogram, interfacesvisual, languagesvisual, languagesvisually, managementprogramming, programming, programmingmanually, recognitionhandicapped, recognitionhandwriting, recognitionhuman, recognitionuser, resource, systemsproductivityprogram, systemsvisual, toolsspeech, user, visual, *file-import-11-05-18},
    month = sep,
    pages = {28--35},
    posted-at = {2011-05-18 03:53:33},
    priority = {0},
    title = {{Keyboardless visual programming using voice, handwriting, and gesture}},
    url = {http://dx.doi.org/10.1109/VL.1997.626555},
    year = {1997}
}

@article{citeulike:9308087,
    abstract = {{This paper examines LEGO Mindstorms'™ suitability as a hardware platform for integrating robotics into an Artificial Intelligence course organized around the agent paradigm popularized by Russell and Norvig. This evaluation discusses how kits and projects based on Mindstorms supported students' exploration of the issues behind the design of agents from three classes in Russell and Norvig's intelligent agent taxonomy. The paper's investigation also examines several popularly-perceived limitations of the Mindstorms package for college-level robotics projects and shows that most of these "limitations" are not serious impediments to Mindstorms' use, while certain other of these "limitations" do indeed present challenges to the platform's use.}},
    address = {New York, NY, USA},
    author = {Klassner, Frank},
    citeulike-article-id = {9308087},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=563345},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/563517.563345},
    doi = {10.1145/563517.563345},
    issn = {0097-8418},
    journal = {SIGCSE Bull.},
    month = feb,
    pages = {8--12},
    posted-at = {2011-05-18 03:46:02},
    priority = {2},
    publisher = {ACM},
    title = {{A case study of LEGO Mindstorms'\&trade; suitability for artificial intelligence and robotics courses at the college level}},
    url = {http://dx.doi.org/10.1145/563517.563345},
    volume = {34},
    year = {2002}
}

@inproceedings{citeulike:2121681,
    abstract = {{We describe Storytelling Alice, a programming environment that introduces middle school girls to computer programming as a means to the end of creating 3D animated stories. Storytelling Alice supports story creation by providing 1) a set of high-level animations, that support the use of social characters who can interact with one another, 2) a collection of 3D characters and scenery designed to spark story ideas, and 3) a tutorial that introduces users to writing Alice programs using story-based examples. In a study comparing girls' experiences learning to program using Storytelling Alice and a version of Alice without storytelling support (Generic Alice), we found that users of Storytelling Alice and Generic Alice were equally successful at learning basic programming constructs. Participants found Storytelling Alice and Generic Alice equally easy to use and entertaining. Users of Storytelling Alice were more motivated to program; they spent 42\% more time programming, were more than 3 times as likely to sneak extra time to work on their programs, and expressed stronger interest in future use of Alice than users of Generic Alice.}},
    address = {New York, NY, USA},
    author = {Kelleher, Caitlin and Pausch, Randy and Kiesler, Sara},
    booktitle = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
    citeulike-article-id = {2121681},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1240844},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1240624.1240844},
    doi = {10.1145/1240624.1240844},
    isbn = {978-1-59593-593-9},
    location = {San Jose, California, USA},
    pages = {1455--1464},
    posted-at = {2011-05-18 03:43:10},
    priority = {2},
    publisher = {ACM},
    series = {CHI '07},
    title = {{Storytelling Alice Motivates Middle School Girls to Learn Computer Programming}},
    url = {http://dx.doi.org/10.1145/1240624.1240844},
    year = {2007}
}

@book{citeulike:264061,
    abstract = {{"Structure and Interpretation of Computer Programs has had a dramatic impact on computer science curricula over the past decade. This long-awaited revision contains changes throughout the text." "There are new implementations of most of the major programming systems in the book, including the interpreters and compilers, and the authors have incorporated many small changes that reflect their experience teaching the course at MIT since the first edition was published." "A new theme has been introduced that emphasizes the central role played by different approaches to dealing with time in computational models: objects with state, concurrent programming, functional programming and lazy evaluation, and nondeterministic programming. There are new example sections on higher-order procedures in graphics and on applications of stream processing in numerical programming, and many new exercises." "In addition, all the programs have been reworked to run in any Scheme implementation that adheres to the IEEE standard."--Jacket.}},
    author = {Abelson, Harold and Sussman, Gerald J. and Sussman, Julie},
    citeulike-article-id = {264061},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0262011530},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0262011530},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/34576857},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0262011530},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0262011530},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0262011530/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0262011530},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0262011530},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0262011530},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0262011530&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0262011530},
    day = {25},
    edition = {2},
    howpublished = {Hardcover},
    isbn = {0262011530},
    month = jul,
    posted-at = {2011-02-08 06:29:29},
    priority = {2},
    publisher = {MIT Press ; McGraw-Hill},
    title = {{Structure and interpretation of computer programs}},
    url = {http://www.worldcat.org/isbn/0262011530},
    year = {1996}
}

@book{citeulike:961573,
    abstract = {{B></I></B></U> This revision of Bloom's taxonomy is designed to help teachers understand and implement standards-based curriculums.  Cognitive psychologists, curriculum specialists, teacher educators, and researchers have developed a two-dimensional framework, focusing on knowledge and cognitive processes. In combination, these two define what students are expected to learn in school. Like no other text, it explores curriculums from three unique perspectives-cognitive psychologists (learning emphasis), curriculum specialists and teacher educators (C\&I emphasis), and measurement and assessment experts (assessment emphasis). This "revisited" framework allows you to connect learning in all areas of curriculum.  Educators, or others interested in Educational Psychology or Educational Methods for grades K-12.}},
    author = {Anderson, Lorin W. and Krathwohl, David R. and Airasian, Peter W. and Cruikshank, Kathleen A. and Mayer, Richard E. and Pintrich, Paul R. and Raths, James and Wittrock, Merlin C.},
    citeulike-article-id = {961573},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/080131903X},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/080131903X},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/080131903X},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/080131903X},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/080131903X/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/080131903X},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/080131903X},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN080131903X},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=080131903X&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/080131903X},
    day = {29},
    edition = {2},
    howpublished = {Paperback},
    isbn = {080131903X},
    keywords = {blooms, taxonomy},
    month = dec,
    posted-at = {2011-02-08 05:58:18},
    priority = {2},
    publisher = {Pearson},
    title = {{A Taxonomy for Learning, Teaching, and Assessing: A Revision of Bloom's Taxonomy of Educational Objectives, Abridged Edition}},
    url = {http://www.worldcat.org/isbn/080131903X},
    year = {2000}
}

@article{citeulike:8780790,
    author = {Benner, P.},
    citeulike-article-id = {8780790},
    citeulike-linkout-0 = {http://view.ncbi.nlm.nih.gov/pubmed/6917683},
    citeulike-linkout-1 = {http://www.hubmed.org/display.cgi?uids=6917683},
    issn = {0002-936X},
    journal = {The American journal of nursing},
    keywords = {education, learning},
    month = mar,
    number = {3},
    pages = {402--407},
    pmid = {6917683},
    posted-at = {2011-02-08 05:54:33},
    priority = {2},
    title = {{From novice to expert.}},
    url = {http://view.ncbi.nlm.nih.gov/pubmed/6917683},
    volume = {82},
    year = {1982}
}

@book{citeulike:2865301,
    author = {Poppendieck, Mary and Poppendieck, Tom},
    citeulike-article-id = {2865301},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321150783},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321150783},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321150783},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321150783},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321150783/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321150783},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321150783},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321150783},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321150783&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321150783},
    day = {18},
    howpublished = {Paperback},
    isbn = {0321150783},
    keywords = {agile, engineering, lean, software},
    month = may,
    posted-at = {2011-02-08 05:49:54},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {{Lean Software Development: An Agile Toolkit}},
    url = {http://www.worldcat.org/isbn/0321150783},
    year = {2003}
}

@article{citeulike:8780757,
    author = {Petrilli, Michael J.},
    citeulike-article-id = {8780757},
    citeulike-linkout-0 = {http://educationnext.org/files/ednext_20082_87.pdf},
    journal = {EducationNext},
    keywords = {wikipedia},
    number = {2},
    posted-at = {2011-02-08 05:41:44},
    priority = {0},
    title = {{Wikipedia or Wickedpedia?}},
    url = {http://educationnext.org/files/ednext_20082_87.pdf},
    volume = {8},
    year = {2008}
}

@article{citeulike:8502950,
    abstract = {{Since Windschitl first outlined a research agenda for the World Wide Web and classroom research, significant shifts have occurred in the nature of the Web and the conceptualization of classrooms. Such shifts have affected constructs of learning and instruction, and paths for future research. This article discusses the characteristics of Web 2.0 that differentiate it from the Web of the 1990s, describes the contextual conditions in which students use the Web today, and examines how Web 2.0's unique capabilities and youth's proclivities in using it influence learning and teaching. Two important themes, "learner participation and creativity and online identity formation," emerged from this analysis and support a new wave of research questions. A stronger research focus on students' everyday use of Web 2.0 technologies and their learning with Web 2.0 both in and outside of classrooms is needed. Finally, insights on how educational scholarship might be transformed with Web 2.0 in light of these themes are discussed.}},
    author = {Greenhow, Christine and Robelia, Beth and Hughes, Joan E.},
    citeulike-article-id = {8502950},
    citeulike-linkout-0 = {http://www.eric.ed.gov/ERICWebPortal/detail?accno=EJ883331},
    day = {0},
    journal = {Educational Researcher},
    keywords = {education, web},
    month = {},
    number = {4},
    pages = {246--259},
    posted-at = {2011-02-08 05:31:14},
    priority = {2},
    publisher = {SAGE Publications. 2455 Teller Road, Thousand Oaks, CA 91320. Tel: 800-818-7243; Tel: 805-499-9774; Fax: 800-583-2665; e-mail: journals@sagepub.com; Web site: http://sagepub.com},
    title = {{Learning, Teaching, and Scholarship in a Digital Age: Web 2.0 and Classroom Research--What Path Should We Take "Now"?}},
    url = {http://www.eric.ed.gov/ERICWebPortal/detail?accno=EJ883331},
    volume = {38},
    year = {2009}
}

@electronic{citeulike:8780746,
    abstract = {{The Hypertext Transfer Protocol (HTTP) is an application-level protocol with the lightness and speed necessary for distributed, collaborative, hypermedia information systems. It is a generic, stateless, object-oriented protocol which can be used for many tasks, such as name servers and distributed object management systems, through extension of its request methods (commands). A feature of HTTP is the typing and negotiation of data representation, allowing systems to be built independently of the data being transferred. HTTP has been in use by the World-Wide Web global information initiative since 1990. This specification reflects preferred usage of the protocol referred to as \&\#034;HTTP/1.0\&\#034;, and is compatible with the most commonly used HTTP server and client programs implemented prior to November 1994.}},
    author = {Berners-Lee, T. and Fielding, R. T. and Nielsen, H. Frystyk},
    citeulike-article-id = {8780746},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.51.9013},
    keywords = {http, web},
    posted-at = {2011-02-08 05:26:34},
    priority = {2},
    title = {{Hypertext Transfer Protocol - HTTP/1.0}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.51.9013},
    year = {1994}
}
%48
@book{Hunt2010,
    abstract = {{Programmers are craftspeople trained to use a certain set of tools (editors, object managers, version trackers) to generate a certain kind of product (programs) that will operate in some environment (operating systems on hardware assemblies). Like any other craft, computer programming has spawned a body of wisdom, most of which isn't taught at universities or in certification classes. Most programmers arrive at the so-called tricks of the trade over time, through independent experimentation. In <I>The Pragmatic Programmer</I>, Andrew Hunt and David Thomas codify many of the truths they've discovered during their respective careers as designers of software and writers of code.<p> Some of the authors' nuggets of pragmatism are concrete, and the path to their implementation is clear. They advise readers to learn one text editor, for example, and use it for everything. They also recommend the use of version-tracking software for even the smallest projects, and promote the merits of learning regular expression syntax and a text-manipulation language. Other (perhaps more valuable) advice is more light-hearted. In the debugging section, it is noted that, "if you see hoof prints think horses, not zebras." That is, suspect everything, but start looking for problems in the most obvious places. There are recommendations for making estimates of time and expense, and for integrating testing into the development process. You'll want a copy of <I>The Pragmatic Programmer</I> for two reasons: it displays your own accumulated wisdom more cleanly than you ever bothered to state it, and it introduces you to methods of work that you may not yet have considered. Working programmers will enjoy this book. <I>--David Wall</I><p> <B>Topics covered</B>: A useful approach to software design and construction that allows for efficient, profitable development of high-quality products. Elements of the approach include specification development, customer relations, team management, design practices, development tools, and testing procedures. This approach is presented with the help of anecdotes and technical problems.}},
    author = {Hunt, Andrew and Thomas, David},
    citeulike-article-id = {200721},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/020161622X},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/020161622X},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/020161622X},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/020161622X},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/020161622X/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/020161622X},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/020161622X},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN020161622X},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=020161622X&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/020161622X},
    day = {30},
    edition = {1},
    howpublished = {Paperback},
    isbn = {020161622X},
    keywords = {engineering, software},
    month = oct,
    posted-at = {2011-01-21 03:49:19},
    priority = {0},
    publisher = {Addison-Wesley Professional},
    title = {{The Pragmatic Programmer: From Journeyman to Master}},
    url = {http://www.worldcat.org/isbn/020161622X},
    year = {1999}
}
%90
@book{Hunt2008,
    abstract = {{Together we'll journey together through bits of cognitive and neuroscience,
learning and behavioral theory. You'll discover some surprising aspects of how
our brains work, and see how you can beat the system to improve your own
learning and thinking skills.

In this book you'll learn how to:


* Use the Dreyfus Model of Skill Acquisition to become more expert

* Leverage the architecture of the brain to strengthen different thinking
modes

* Avoid common "known bugs" in your mind

* Learn more deliberately and more effectively

* Manage knowledge more efficiently

Software development happens in your head. Not in an editor, IDE, or design
tool. It's time to take a pragmatic approach to thinking and learning, and
start to refactor-and redesign-your brain.}},
    author = {Hunt, Andy},
    citeulike-article-id = {4114908},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/1934356050},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/1934356050},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/436453553},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/1934356050},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/1934356050},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/1934356050/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/1934356050},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/1934356050},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN1934356050},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=1934356050&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/1934356050},
    day = {04},
    edition = {1},
    howpublished = {Paperback},
    isbn = {9781934356050},
    month = nov,
    posted-at = {2011-01-21 03:47:42},
    priority = {0},
    publisher = {Pragmatic Bookshelf},
    title = {{Pragmatic Thinking and Learning: Refactor Your Wetware (Pragmatic Programmers)}},
    url = {http://www.worldcat.org/isbn/1934356050},
    year = {2008}
}
%63
@book{Brooks1995,
    abstract = {{These essays draw from Brooks' experience as project manager for the IBM System/360 computer family and then for OS/360, its massive software system. Now, 20 years after the initial publication of his book, Brooks has revisited his original ideas and added new thoughts and advice. -- from publisher description}},
    author = {Brooks, Frederick P.},
    citeulike-article-id = {126678},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0201835959},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0201835959},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/31166617},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0201835959},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201835959},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201835959/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0201835959},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201835959},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201835959},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201835959&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201835959},
    day = {12},
    edition = {Anniversary},
    howpublished = {Paperback},
    isbn = {0201835959},
    keywords = {architecture, design, engineering, software},
    month = aug,
    posted-at = {2011-01-21 03:39:12},
    priority = {0},
    publisher = {Addison-Wesley Professional},
    title = {{The Mythical Man-Month: Essays on Software Engineering, Anniversary Edition (2nd Edition)}},
    url = {http://www.worldcat.org/isbn/0201835959},
    year = {1995}
}
%42
@book{Fowler2002,
    author = {Fowler, Martin},
    citeulike-article-id = {115151},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321127420},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321127420},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321127420},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321127420},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321127420/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321127420},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321127420},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321127420},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321127420&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321127420},
    day = {15},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0321127420},
    keywords = {architecture, design, software},
    month = nov,
    posted-at = {2011-01-21 03:34:14},
    priority = {0},
    publisher = {Addison-Wesley Professional},
    title = {{Patterns of Enterprise Application Architecture}},
    url = {http://www.worldcat.org/isbn/0321127420},
    year = {2002}
}

@book{citeulike:253734,
    abstract = {{Domain-Driven Design Tackling Complexity in the Heart of Software. NM}},
    author = {Evans, Eric},
    citeulike-article-id = {253734},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0321125215},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0321125215},
    citeulike-linkout-10 = {http://www.worldcat.org/oclc/927193017},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0321125215},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0321125215},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0321125215/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0321125215},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0321125215},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0321125215},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0321125215&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0321125215},
    day = {30},
    edition = {1},
    howpublished = {Hardcover},
    isbn = {0321125215},
    keywords = {architecture, design, software},
    month = aug,
    posted-at = {2011-01-21 03:33:25},
    priority = {4},
    publisher = {Addison-Wesley},
    title = {{Domain-driven design : tackling complexity in the heart of software}},
    url = {http://www.worldcat.org/isbn/0321125215},
    year = {2014}
}

@article{citeulike:8664231,
    abstract = {{The Java Intelligent Tutoring System (JITS) was designed and developed to support the growing trend of Java programming around the world. JITS is an advanced web-based personalized tutoring system that is unique in several ways. Most programming Intelligent Tutoring Systems require the teacher to author problems with corresponding solutions. JITS, on the other hand, requires the teacher to supply only the problem and problem specification. JITS rigorously analyzes the student's submitted code, determines the intent of the student, and intelligently guides the student towards a potentially unique solution to the programming problem. JITS is intended to be used by beginner programming students in their first year of College or University. This article discusses the process by which the design and development of JITS took place. JITS has been and is currently being field-tested at the Sheridan Institute of Technology and Advanced Learning. (Contains 1 table and 6 figures.)}},
    author = {Sykes, Edward},
    citeulike-article-id = {8664231},
    citeulike-linkout-0 = {http://www.eric.ed.gov/ERICWebPortal/detail?accno=EJ767598},
    day = {0},
    journal = {Journal of Interactive Learning Research},
    keywords = {architecture, computer, education, engineering, intelligent, software, system, tutoring},
    month = jul,
    number = {3},
    pages = {399--410},
    posted-at = {2011-01-21 03:29:27},
    priority = {2},
    publisher = {Association for the Advancement of Computing in Education. P.O. Box 1545, Chesapeake, VA 23327-1545. Tel: 757-366-5606; Fax: 703-997-8760; e-mail: info@aace.org; Web site: http://www.aace.org},
    title = {{Developmental Process Model for the Java Intelligent Tutoring System}},
    url = {http://www.eric.ed.gov/ERICWebPortal/detail?accno=EJ767598},
    volume = {18},
    year = {2007}
}

@incollection{citeulike:8664227,
    abstract = {{The goal of the Conversational Interfaces project at CSLI is to develop a general purpose architecture which supports multi-modal dialogues with complex devices, services, and applications. We are developing generic dialogue management software which supports collaborative activities between a human and devices. Our systems use a common software base consisting of the Open Agent Architecture, Nuance speech recogniser, Gemini (SRI's parser and generator), Festival speech synthesis, and CSLI's  Architecture for Conversational Intelligence  (ACI). This chapter focuses on one application of this architecture - an intelligent tutoring system for shipboard damage control. We discuss the benefits of adopting this architecture for intelligent tutoring.}},
    address = {Berlin/Heidelberg},
    author = {Clark, Brady and Lemon, Oliver and Gruenstein, Alexander and Bratt, ElizabethOwen and Fry, John and Peters, Stanley and Pon-Barry, Heather and Schultz, Karl and Thomsen-Gray, Zack and Treeratpituk, Pucktada},
    booktitle = {Advances in Natural Multimodal Dialogue Systems},
    chapter = {13},
    citeulike-article-id = {8664227},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/1-4020-3933-6_13},
    citeulike-linkout-1 = {http://www.springerlink.com/content/j1n8453174x60774},
    citeulike-linkout-2 = {http://link.springer.com/chapter/10.1007/1-4020-3933-6_13},
    doi = {10.1007/1-4020-3933-6_13},
    editor = {van Kuppevelt, JanC and Dybkj{\ae}r, Laila and Bernsen, NielsOle},
    isbn = {1-4020-3932-8},
    keywords = {architecture, computer, education, intelligent, software, subliminal-food-stimulus, system, tutoring},
    pages = {287--305},
    posted-at = {2011-01-21 03:26:37},
    priority = {0},
    publisher = {Springer Netherlands},
    series = {Text, Speech and Language Technology},
    title = {{A General Purpose Architecture for Intelligent Tutoring Systems}},
    url = {http://dx.doi.org/10.1007/1-4020-3933-6_13},
    volume = {30},
    year = {2005}
}

@inproceedings{citeulike:2905864,
    abstract = {{A hypermedia application offers its users much freedom to navigate through a large hyperspace. For authors finding a good compromise between offering navigational freedom and offering guidance is difficult, especially in applications that target a broad audience. Adaptive hypermedia (AH) offers (automatically generated) personalized content and navigation support, so the choice between freedom and guidance can be made on an individual basis. Many adaptive hypermedia systems (AHS) are tightly integrated with one specific application. In this paper we study design issues for general-purpose adaptive hypermedia systems, built according to an application-independent architecture. We use the Dexter-based AHAM reference model for adaptive hypermedia [7] to describe the functionality of such systems at the conceptual level. We concentrate on the architecture and behavior of a general-purpose adaptive engine. Such an engine performs adaptation and updates the user model according to a set of adaptation rules specified in an adaptation model. In our study of the behavior of such a system we concentrate on the issues of termination and confluence, which are important to detect potential problems in an adaptive hypermedia application. We draw parallels with static rule analysis in active database systems [1,2]. By using common properties of AIIS we are able to obtain more precise (less conservative) results for AHS than for active databases in general, especially for the problem of termination.}},
    address = {New York, NY, USA},
    author = {Wu, Hongjing and de Kort, Erik and De Bra, Paul},
    booktitle = {Proceedings of the 12th ACM conference on Hypertext and Hypermedia},
    citeulike-article-id = {2905864},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=504256},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/504216.504256},
    doi = {10.1145/504216.504256},
    isbn = {1-58113-420-7},
    location = {\&\#197;rhus, none, Denmark},
    pages = {141--150},
    posted-at = {2011-01-21 03:05:55},
    priority = {2},
    publisher = {ACM},
    series = {HYPERTEXT '01},
    title = {{Design issues for general-purpose adaptive hypermedia systems}},
    url = {http://dx.doi.org/10.1145/504216.504256},
    year = {2001}
}

@article{citeulike:8664196,
    abstract = {{We report on a general architecture for creating knowledge-based medical training systems to teach diagnostic classification problem solving. The approach is informed by our previous work describing the development of expertise in classification problem solving in Pathology. The architecture envelops the traditional Intelligent Tutoring System design within the Unified Problem-solving Method description Language (UPML) architecture, supporting component modularity and reuse. Based on the domain ontology, domain task ontology and case data, the abstract problem-solving methods of the expert model create a dynamic solution graph. Student interaction with the solution graph is filtered through an instructional layer, which is created by a second set of abstract problem-solving methods and pedagogic ontologies, in response to the current state of the student model. We outline the advantages and limitations of this general approach, and describe it's implementation in SlideTutor - a developing Intelligent Tutoring System in Dermatopathology.}},
    author = {Crowley, Rebecca S. and Medvedeva, Olga},
    citeulike-article-id = {8664196},
    citeulike-linkout-0 = {http://view.ncbi.nlm.nih.gov/pubmed/14728159},
    citeulike-linkout-1 = {http://www.hubmed.org/display.cgi?uids=14728159},
    issn = {1942-597X},
    journal = {AMIA ... Annual Symposium proceedings / AMIA Symposium. AMIA Symposium},
    keywords = {architecture, education, engineering, intelligent, software, system, tutoring},
    pages = {185--189},
    pmid = {14728159},
    posted-at = {2011-01-21 03:00:16},
    priority = {0},
    title = {{A general architecture for intelligent tutoring of diagnostic classification problem solving.}},
    url = {http://view.ncbi.nlm.nih.gov/pubmed/14728159},
    year = {2003}
}

@inproceedings{citeulike:7108153,
    author = {Agaian, Sos and Akopian, David and D'Souza, Sunil},
    booktitle = {SMMSP2005},
    citeulike-article-id = {7108153},
    keywords = {steganography},
    location = {Riga, Latvia},
    organization = {Tampere International Center for Signal Processing},
    posted-at = {2010-04-30 18:25:55},
    priority = {2},
    title = {TWO ALGORITHMS IN DIGITAL AUDIO STEGANOGRAPHY
USING QUANTIZED FREQUENCY DOMAIN EMBEDDING AND
REVERSIBLE INTEGER TRANSFORMS}
}

@unpublished{citeulike:7082218,
    author = {Amin, S. Massoud},
    citeulike-article-id = {7082218},
    day = {8},
    keywords = {grid, security, smart},
    month = apr,
    posted-at = {2010-04-26 03:31:37},
    priority = {0},
    title = {{Electricity Infrastructure Security}},
    year = {2009}
}

@article{citeulike:7082180,
    abstract = {{Security for embedded systems involves issues beyond those problems currently being addressed for enterprise and desktop computing.}},
    address = {Los Alamitos, CA, USA},
    author = {Koopman, Philip},
    citeulike-article-id = {7082180},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1008771},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/mc.2004.52},
    doi = {10.1109/mc.2004.52},
    issn = {0018-9162},
    journal = {Computer},
    number = {7},
    pages = {95--97},
    posted-at = {2010-04-26 03:18:42},
    priority = {0},
    publisher = {IEEE Computer Society Press},
    title = {{Embedded System Security}},
    url = {http://dx.doi.org/10.1109/mc.2004.52},
    volume = {37},
    year = {2004}
}

@techreport{citeulike:7066162,
    author = {Pike Research},
    citeulike-article-id = {7066162},
    citeulike-linkout-0 = {http://www.govtech.com/gt/articles/744630},
    keywords = {grid, security, smart},
    posted-at = {2010-04-23 01:35:41},
    priority = {1},
    title = {{Smart Grid Cyber Security}},
    url = {http://www.govtech.com/gt/articles/744630}
}

@techreport{citeulike:7057895,
    author = {The Smart Grid Interoperability Panel},
    citeulike-article-id = {7057895},
    citeulike-linkout-0 = {http://csrc.nist.gov/publications/drafts/nistir-7628/draft-nistir-7628_2nd-public-draft.pdf},
    institution = {National Institute of Standards and Technology},
    keywords = {grid, security\_strategy, smart},
    posted-at = {2010-04-22 10:49:52},
    priority = {1},
    title = {{Smart Grid Cyber Security Strategy and Requirements}},
    url = {http://csrc.nist.gov/publications/drafts/nistir-7628/draft-nistir-7628_2nd-public-draft.pdf}
}

@unpublished{citeulike:7057865,
    author = {Journal, Houston B.},
    citeulike-article-id = {7057865},
    citeulike-linkout-0 = {http://www.bizjournals.com/houston/stories/2010/04/12/daily66.html},
    day = {12},
    keywords = {grid, security, smart},
    month = apr,
    posted-at = {2010-04-22 10:40:14},
    priority = {0},
    title = {{DOE awards \$2.5M smart grid grant to UH Energy program}},
    url = {http://www.bizjournals.com/houston/stories/2010/04/12/daily66.html},
    year = {2010}
}

@unpublished{citeulike:7057828,
    author = {Fehrenbacher, Katie},
    citeulike-article-id = {7057828},
    citeulike-linkout-0 = {http://earth2tech.com/2009/10/09/10-things-to-know-about-smart-grid-security/},
    day = {9},
    keywords = {grid, security, smart},
    month = oct,
    organization = {Earth2Tech},
    posted-at = {2010-04-22 10:33:52},
    priority = {0},
    title = {{10 Things To Know About Smart Grid Security}},
    url = {http://earth2tech.com/2009/10/09/10-things-to-know-about-smart-grid-security/},
    year = {2009}
}

@techreport{citeulike:7057724,
    author = {Miller, Joe},
    citeulike-article-id = {7057724},
    citeulike-linkout-0 = {http://www.oe.energy.gov/SG__Benefits_Challenges_J_Miller.pdf},
    day = {16},
    institution = {U.S. Department of Energy Office of Electricity Delivery and Energy Reliability},
    keywords = {challenges, grid, smart},
    month = jun,
    posted-at = {2010-04-22 10:14:38},
    priority = {0},
    title = {{The Smart Grid – Benefits and Challenges}},
    url = {http://www.oe.energy.gov/SG__Benefits_Challenges_J_Miller.pdf},
    year = {2008}
}

@article{citeulike:7023762,
    abstract = {{In this paper, we present a novel, principled approach
to resolve the remained problems of substitution technique of audio
steganography. Using the proposed genetic algorithm, message bits
are embedded into multiple, vague and higher LSB layers, resulting
in increased robustness. The robustness specially would be increased
against those intentional attacks which try to reveal the hidden
message and also some unintentional attacks like noise addition as
well.}},
    author = {Zamani, Mazdak and Manaf, Azizah A. and Ahmad, Rabiah B. and Zeki, Akram M. and Abdullah, Shahidan},
    citeulike-article-id = {7023762},
    citeulike-linkout-0 = {http://www.waset.org/journals/waset/v54/v54-63.pdf},
    journal = {World Academy of Science, Engineering and Technology},
    keywords = {steganography},
    pages = {360--363},
    posted-at = {2010-04-16 07:44:43},
    priority = {2},
    title = {{A Genetic-Algorithm-Based Approach for
Audio Steganography}},
    url = {http://www.waset.org/journals/waset/v54/v54-63.pdf},
    volume = {54},
    year = {2009}
}

@inproceedings{citeulike:7023527,
    abstract = {{The growth of high speed computer networks and that of the Internet, in particular, has increased the
ease of Information Communication. Ironically, the cause for the development is also of the apprehension
- use of digital formatted data. In comparison with Analog media, Digital media offers several distinct
advantages such as high quality, easy editing, high fidelity copying, compression etc. But this type
advancement in the field of data communication in other sense has hiked the fear of getting the data
snooped at the time of sending it from the sender to the receiver. So, Information Security is becoming
an inseparable part of Data Communication. In order to address this Information Security,
Steganography plays an important role. Steganography is the art and science of writing hidden messages
in such a way that no one apart from the sender and intended recipient even realizes there is a hidden
message. This paper is a tutorial review of the steganography techniques appeared in the literature.}},
    author = {Bandyopadhyay, Samir K. and Bhattacharyya, Debnath and Ganguly, Debashis and Mukherjee, Swarnendu and Das, Poulami},
    booktitle = {The First International Conference on Contemporary Computing},
    citeulike-article-id = {7023527},
    institution = {Jaypee Institute of Information Technology University},
    keywords = {steganography},
    location = {Noida, India},
    posted-at = {2010-04-16 03:33:25},
    priority = {2},
    school = {University of Calcutta},
    title = {{A Tutorial Review on Steganography}}
}

@article{1960-05145-001,
    abstract = {{To what extent can subliminal stimulation be used to influence human behavior? This study involving 105 college freshmen attempts to isolate and study a few of the possible variables. "The experimental group saw a classroom movie with the word 'beef' superimposed in flashes of –1400 of a second every seven seconds; the control group just saw the movie. It was found that, compared to the control Ss, the experimental Ss (a) did not show increased verbal references to the stimulus word; (b) did not choose the stimulus object in a multiple choice situation (though sex differences were significant); but (c) did rate themselves significantly more hungry. It was also found that hours of food deprivation did not influence any of these relationships. 15 refs. (PsycINFO Database Record (c) 2009 APA, all rights reserved)}},
    author = {Byrne, Donn},
    citeulike-article-id = {6995183},
    citeulike-linkout-0 = {http://dx.doi.org/10.1037/h0043194},
    doi = {10.1037/h0043194},
    isbn = {0021-9010 (Print); 1939-1854 (Electronic)},
    journal = {Journal of Applied Psychology},
    keywords = {human-behavior, messaging, subliminal, subliminal-food-stimulus, verbal-responses},
    number = {4},
    pages = {249--252},
    posted-at = {2010-04-10 22:18:04},
    priority = {2},
    publisher = {US: American Psychological Association},
    title = {{The effect of a subliminal food stimulus on verbal responses.}},
    url = {http://dx.doi.org/10.1037/h0043194},
    volume = {43},
    year = {1959}
}

@article{citeulike:6995181,
    abstract = {{With his claim to have increased sales of Coca Cola and popcorn in a movie theatre through subliminal messages flashed on the screen, James Vicary raised the possibility of subliminal advertising. Nobody has ever replicated Vicary's findings and his study was a hoax. This article reports two experiments, which assessed whether subliminal priming of a brand name of a drink can affect people's choices for the primed brand, and whether this effect is moderated by individuals' feelings of thirst. Both studies demonstrated that subliminal priming of a brand name of drink (i.e., Lipton Ice) positively affected participants' choice for, and their intention to, drink the primed brand, but only for participants who were thirsty. Theoretical and practical implications of these findings are discussed.}},
    author = {Karremans, Johan C. and Stroebe, Wolfgang and Claus, Jasper},
    citeulike-article-id = {6995181},
    citeulike-linkout-0 = {http://www.sciencedirect.com/science/article/B6WJB-4J557F1-1/2/d57fbd7c8adaf5d52545eca5b493b6b4},
    citeulike-linkout-1 = {http://dx.doi.org/10.1016/j.jesp.2005.12.002},
    doi = {10.1016/j.jesp.2005.12.002},
    issn = {0022-1031},
    journal = {Journal of Experimental Social Psychology},
    keywords = {advertisement, goals, messaging, subliminal, subliminal-priming},
    month = nov,
    number = {6},
    pages = {792--798},
    posted-at = {2010-04-10 22:13:18},
    priority = {2},
    title = {{Beyond Vicary's fantasies: The impact of subliminal priming and brand choice}},
    url = {http://www.sciencedirect.com/science/article/B6WJB-4J557F1-1/2/d57fbd7c8adaf5d52545eca5b493b6b4},
    volume = {42},
    year = {2006}
}

@techreport{citeulike:6995167,
    abstract = {{Steganography (a rough Greek translation of the term Steganography is secret writing) has been used in various forms for 2500 years. It has found use in variously in military, diplomatic, personal and intellectual property applications. Briefly stated, steganography is the term applied to any number of processes that will hide a message within an object, where the hidden message will not be apparent to an observer. This paper will explore steganography from its earliest instances through potential future application.}},
    author = {Judge, James C.},
    citeulike-article-id = {6995167},
    citeulike-linkout-0 = {https://e-reports-ext.llnl.gov/pdf/245799.pdf},
    day = {1},
    keywords = {steganography},
    month = dec,
    posted-at = {2010-04-10 21:36:08},
    priority = {0},
    title = {{Steganography: Past, Present, Future}},
    url = {https://e-reports-ext.llnl.gov/pdf/245799.pdf},
    year = {2001}
}

@article{citeulike:6444527,
    author = {Johnson, Neil F. and Duric, Zoran and Jajodia, Sushil and Memon, Nasir},
    citeulike-article-id = {6444527},
    citeulike-linkout-0 = {http://scitation.aip.org/getabs/servlet/GetabsServlet?prog=normal&id=JEIME5000010000003000825000001&idtype=cvips&gifs=yes},
    citeulike-linkout-1 = {http://link.aip.org/link/?JEI/10/825},
    citeulike-linkout-2 = {http://dx.doi.org/10.1117/1.1388610},
    doi = {10.1117/1.1388610},
    journal = {Journal of Electronic Imaging},
    keywords = {steganography},
    number = {3},
    pages = {825--826},
    posted-at = {2010-04-10 20:12:26},
    priority = {0},
    publisher = {SPIE},
    title = {{Information Hiding: Steganography and Watermarking---Attacks and Countermeasures}},
    url = {http://dx.doi.org/10.1117/1.1388610},
    volume = {10},
    year = {2001}
}

@inproceedings{citeulike:6995131,
    abstract = {{Abstract. The majority of steganographic utilities for the camouflage of confidential communication suffers from fundamental weaknesses. On the way to more secure steganographic algorithms, the development of attacks is essential to assess security. We present both visual attacks, making use of the ability of humans to clearly discern between noise and visual patterns, and statistical attacks which are much easier to automate. The visual attacks presented here exemplify that at least EzStego v2.0b3, Jsteg v4, Steganos v1.5, and S-Tools v4.0 suffer from the misassumption that least significant bits of image data are uncorrelated noise. Beyond that, this paper introduces more objective methods to detect steganography by statistical means. 1}},
    author = {Westfeld, Andreas and Pfitzmann, Andreas},
    booktitle = {Jsteg, Steganos, and S-Tools - and Some Lessons Learned,” Lecture Notes in Computer Science},
    citeulike-article-id = {6995131},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.94.5975},
    keywords = {steganography},
    pages = {61--75},
    posted-at = {2010-04-10 20:09:52},
    priority = {0},
    title = {{Attacks on Steganographic Systems - Breaking the Steganographic Utilities EzStego}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.94.5975},
    volume = {1768},
    year = {2000}
}

@article{citeulike:6995130,
    abstract = {{Steganography is an ancient art of hiding information. Digital technology gives us new ways to apply steganographic techniques, including one of the most intriguing—that of hiding information in digital images.}},
    address = {Los Alamitos, CA, USA},
    author = {Johnson, Neil F. and Jajodia, Sushil},
    citeulike-article-id = {6995130},
    citeulike-linkout-0 = {http://doi.ieeecomputersociety.org/10.1109/MC.1998.10029},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/mc.1998.10029},
    doi = {10.1109/mc.1998.10029},
    issn = {0018-9162},
    journal = {Computer},
    keywords = {steganography},
    number = {2},
    pages = {26--34},
    posted-at = {2010-04-10 20:08:29},
    priority = {0},
    publisher = {IEEE Computer Society},
    title = {{Exploring Steganography: Seeing the Unseen}},
    url = {http://dx.doi.org/10.1109/mc.1998.10029},
    volume = {31},
    year = {1998}
}

@inproceedings{citeulike:6995129,
    abstract = {{In this paper, we clarify what steganography is and what it can do. We contrast it with the related disciplines of cryptography and tra\#c security, present a unified terminology agreed at the first international workshop on the subject, and outline a number of approaches---many of them developed to hide encrypted copyright marks or serial numbers in digital audio or video. We then present a number of attacks, some new, on such information hiding schemes. This leads to a discussion of the formidable obstacles that lie in the way of a general theory of information hiding systems (in the sense that Shannon gave us a general theory of secrecy systems). However, theoretical considerations lead to ideas of practical value, such as the use of parity checks to amplify covertness and provide public key steganography. Finally, we show that public key information hiding systems exist, and are not necessarily constrained to the case where the warden is passive. Keywords--- Cryptography, Copyright...}},
    author = {Anderson, Ross and Petitcolas, Fabien},
    booktitle = {IEEE Journal of Selected Areas in Communications},
    citeulike-article-id = {6995129},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.9814},
    journal = {IEEE Journal of Selected Areas in Communications},
    keywords = {steganography},
    pages = {474--481},
    posted-at = {2010-04-10 20:06:52},
    priority = {0},
    title = {{On The Limits of Steganography}},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.9814},
    volume = {16},
    year = {1998}
}

@incollection{citeulike:6995127,
    abstract = {{An information-theoretic model for steganography with passive adversaries is proposed. The adversary's task of distinguishing between an innocent cover message C and a modified message S containing a secret part is interpreted as a hypothesis testing problem. The security of a steganographic system is quantified in terms of the relative entropy (or discrimination) between P C and P S. Several secure steganographic schemes are presented in this model; one of them is a universal information hiding scheme based on universal data compression techniques that requires no knowledge of the covertext statistics.}},
    address = {Berlin, Heidelberg},
    author = {Cachin, Christian},
    booktitle = {Information Hiding },
    chapter = {21},
    citeulike-article-id = {6995127},
    citeulike-linkout-0 = {http://dx.doi.org/10.1007/3-540-49380-8_21},
    citeulike-linkout-1 = {http://www.springerlink.com/content/vd77nrnclcryhtt7},
    day = {30},
    doi = {10.1007/3-540-49380-8_21},
    isbn = {978-3-540-65386-8},
    keywords = {steganography},
    month = nov,
    pages = {306--318},
    posted-at = {2010-04-10 20:05:51},
    priority = {0},
    publisher = {Springer Berlin Heidelberg},
    series = {Lecture Notes in Computer Science},
    title = {{An Information-Theoretic Model for Steganography}},
    url = {http://dx.doi.org/10.1007/3-540-49380-8_21},
    volume = {1525},
    year = {1998}
}

@article{citeulike:4860955,
    abstract = {{In "The Golden Age of Software Architecture" Paul Clements and Mary Shaw reviewed the emergence of software architecture as the principled understanding of the large-scale structures of software systems. Here they reflect on progress since that article, updating the state of practice and reassessing some of the opportunities.}},
    address = {Los Alamitos, CA, USA},
    author = {Clements, P. and Shaw, M.},
    citeulike-article-id = {4860955},
    citeulike-linkout-0 = {http://doi.ieeecomputersociety.org/10.1109/MS.2009.83},
    citeulike-linkout-1 = {http://dx.doi.org/10.1109/ms.2009.83},
    citeulike-linkout-2 = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5076462},
    day = {19},
    doi = {10.1109/ms.2009.83},
    institution = {Software Eng. Inst., Carnegie Mellon Univ., Pittsburgh, PA},
    issn = {0740-7459},
    journal = {Software, IEEE},
    month = jul,
    number = {4},
    pages = {70--72},
    posted-at = {2010-01-19 01:22:18},
    priority = {4},
    publisher = {IEEE},
    title = {{"The Golden Age of Software Architecture" Revisited}},
    url = {http://dx.doi.org/10.1109/ms.2009.83},
    volume = {26},
    year = {2009}
}

@book{citeulike:2829512,
    abstract = {{Teachers in higher education have had to become more professional in their
approach to teaching, matching their professionalism in research. The strength
of this book is that it provides a sound theoretical basis for designing and
using learning technologies in university teaching. This new edition builds
upon the success of the first and contains major updates to the information on
learning technologies and includes the implications of using technology for
the university context - both campus and electronic - which suggests a new
approach to managing learning at the institutional level.}},
    author = {Laurillard, Diana},
    citeulike-article-id = {2829512},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20&amp;path=ASIN/0415256798},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21&amp;path=ASIN/0415256798},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21&amp;path=ASIN/0415256798},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0415256798},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0415256798/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20&path=ASIN/0415256798},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0415256798},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0415256798},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0415256798&index=books&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0415256798},
    day = {16},
    edition = {2},
    howpublished = {Paperback},
    isbn = {0415256798},
    month = dec,
    posted-at = {2010-01-19 01:18:18},
    priority = {4},
    publisher = {Routledge},
    title = {{Rethinking University Teaching: A Conversational Framework for the Effective Use of Learning Technologies}},
    url = {http://www.worldcat.org/isbn/0415256798},
    year = {2001}
}

@electronic{citeulike:6560619,
    author = {Atherton, J. S.},
    citeulike-article-id = {6560619},
    citeulike-linkout-0 = {http://www.learningandteaching.info/learning/pask.htm},
    day = {18},
    month = jan,
    posted-at = {2010-01-19 01:16:55},
    priority = {0},
    title = {{Learning and Teaching; Conversational learning theory; Pask and Laurillard}},
    url = {http://www.learningandteaching.info/learning/pask.htm},
    year = {2010}
}

@electronic{citeulike:6551906,
    abstract = {{When Linda Silverman and I wrote this paper in 1987, our goal was to offer some insights about teaching and learning based on Dr. Silverman's expertise in educational psychology and my experience in engineering education that would be helpful to some of my fellow engineering professors. When the paper was published early in 1988, the response was astonishing. Almost immediately, reprint requests flooded in from all over the world. The paper started to be cited in the engineering education literature, then in the general science education literature; it was the first article cited in the premier issue of ERIC's National Teaching and Learning Forum; and it was the most frequently cited paper in articles published in the Journal of Engineering Education over a 10-year period. A self-scoring web-based instrument called the Index of Learning Styles that assesses preferences on four scales of the learning style model developed in the paper currently gets about 100,000 hits a year and has been translated into half a dozen languages that I know about and probably more that I don't, even though it has not yet been validated. The 1988 paper is still cited more than any other paper I have written, including more recent papers on learning styles. A problem is that in recent years I have found reasons to make two significant changes in}},
    author = {Education, Engr and Felder, Richard M.},
    citeulike-article-id = {6551906},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.92.774},
    keywords = {education, engineering, learning, styles},
    posted-at = {2010-01-17 05:17:20},
    priority = {4},
    title = {LEARNING AND TEACHING STYLES IN ENGINEERING EDUCATION},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.92.774},
    year = {2002}
}

@article{citeulike:6534162,
    author = {Muehlenbrock, Martin and Tewissen, F. and Hoppe, H. U.},
    citeulike-article-id = {6534162},
    citeulike-linkout-0 = {http://www.ijaied.org/pub/1020/},
    journal = {International Journal of Artificial Intelligence in Education},
    keywords = {intelligent, system, tutoring},
    pages = {256--274},
    posted-at = {2010-01-13 07:45:45},
    priority = {0},
    title = {{A Framework System for Intelligent Support in Open Distributed Learning Environments}},
    url = {http://www.ijaied.org/pub/1020/},
    volume = {9},
    year = {1998}
}

@article{citeulike:6534134,
    abstract = {{The paper presents SQLT-Web, a Web-enabled intelligent tutoring system for the SQL database language. SQLT-Web is a Web-enabled version of an earlier, standalone ITS. In this paper we describe how the components of the standalone system were reused to develop the Web-enabled system. The system observes students' actions and adapts to their knowledge and learning abilities. We describe the system's architecture in comparison to the architectures of other existing Web-enabled tutors. All tutoring functions are performed on the server side, and we explain how SQLT-Web deals with multiple students. The system has been open to outside users since March 2000. SQLT-Web has been evaluated in the context of genuine teaching activities. We present the results of three evaluation studies with the University of Canterbury students taking database courses, which show that SQLT-Web is an effective system. The students have found the system a valuable asset to their learning.}},
    address = {Amsterdam, The Netherlands, The Netherlands},
    author = {Mitrovic, Antonija},
    citeulike-article-id = {6534134},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1434848},
    issn = {1560-4292},
    journal = {Int. J. Artif. Intell. Ed.},
    keywords = {intelligent, sql, system, tutoring},
    number = {2-4},
    pages = {173--197},
    posted-at = {2010-01-13 07:40:22},
    priority = {0},
    publisher = {IOS Press},
    title = {{An Intelligent SQL Tutor on the Web}},
    url = {http://portal.acm.org/citation.cfm?id=1434848},
    volume = {13},
    year = {2003}
}

@article{citeulike:6534106,
    abstract = {{Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.}},
    address = {Riverton, NJ, USA},
    author = {Zachman, J. A.},
    citeulike-article-id = {6534106},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=314735.314765},
    issn = {0018-8670},
    journal = {IBM Syst. J.},
    keywords = {architecture, software},
    number = {2-3},
    pages = {454--470},
    posted-at = {2010-01-13 07:35:07},
    priority = {0},
    publisher = {IBM Corp.},
    title = {{A framework for information systems architecture}},
    url = {http://portal.acm.org/citation.cfm?id=314735.314765},
    volume = {38},
    year = {1999}
}

@inproceedings{citeulike:2460748,
    abstract = {{Note: OCR errors may be found in this Reference List extracted from the full text article.  ACM has opted to expose the complete List rather than only correct and linked references.}},
    address = {New York, NY, USA},
    author = {Shaw, M.},
    booktitle = {IWSSD '89: Proceedings of the 5th international workshop on Software specification and design},
    citeulike-article-id = {2460748},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=75222},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/75199.75222},
    doi = {10.1145/75199.75222},
    isbn = {0-89791-305-1},
    keywords = {architecture, software},
    location = {Pittsburgh, Pennsylvania, United States},
    pages = {143--146},
    posted-at = {2010-01-13 07:32:06},
    priority = {0},
    publisher = {ACM},
    title = {{Larger scale systems require higher-level abstractions}},
    url = {http://dx.doi.org/10.1145/75199.75222},
    year = {1989}
}

@inproceedings{citeulike:693466,
    abstract = {{George Santayana's statement, "Those who cannot remember the past are condemned to repeat it," is only half true. The past also includes successful histories. If you haven't been made aware of them, you're often condemned not to repeat their successes.In a rapidly expanding field such as software engineering, this happens a lot. Extensive studies of many software projects such as the Standish Reports offer convincing evidence that many projects fail to repeat past successes.This paper tries to identify at least some of the major past software experiences that were well worth repeating, and some that were not. It also tries to identify underlying phenomena influencing the evolution of software engineering practices that have at least helped the author appreciate how our field has gotten to where it has been and where it is.A counterpart Santayana-like statement about the past and future might say, "In an era of rapid change, those who repeat the past are condemned to a bleak future." (Think about the dinosaurs, and think carefully about software engineering maturity models that emphasize repeatability.)This paper also tries to identify some of the major sources of change that will affect software engineering practices in the next couple of decades, and identifies some strategies for assessing and adapting to these sources of change. It also makes some first steps towards distinguishing relatively timeless software engineering principles that are risky not to repeat, and conditions of change under which aging practices will become increasingly risky to repeat.}},
    address = {New York, NY, USA},
    author = {Boehm, Barry},
    booktitle = {Proceedings of the 28th International Conference on Software Engineering},
    citeulike-article-id = {693466},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1134285.1134288},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/1134285.1134288},
    doi = {10.1145/1134285.1134288},
    isbn = {1-59593-375-1},
    keywords = {engineering, history, software},
    location = {Shanghai, China},
    pages = {12--29},
    posted-at = {2010-01-13 07:29:41},
    priority = {0},
    publisher = {ACM},
    series = {ICSE '06},
    title = {{A View of 20th and 21st Century Software Engineering}},
    url = {http://dx.doi.org/10.1145/1134285.1134288},
    year = {2006}
}

@inproceedings{citeulike:6534065,
    abstract = {{Examination of the learning strategies of large samples of students reveals a natural classification on the basis of the strategy employed: serialist learners, who assimilate information by means of a \&ldquo;bottom-up\&rdquo; learning strategy, and holist learners, who utilize a \&ldquo;top-down\&rdquo; approach to learning. Since at present most teaching materials have a strong bias toward one or the other type of student, a significant subset of any class will receive mismatched instruction. This paper discusses techniques for designing educational material oriented toward each type of learning strategy, and describes an experiment designed to evaluate the effectiveness of these techniques.}},
    address = {New York, NY, USA},
    author = {Feyock, Stefan and Ford, Thomas},
    booktitle = {ACM 76: Proceedings of the annual conference},
    citeulike-article-id = {6534065},
    citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=800191.805553},
    citeulike-linkout-1 = {http://dx.doi.org/10.1145/800191.805553},
    doi = {10.1145/800191.805553},
    keywords = {computer, education, learning, science, styles},
    location = {Houston, Texas, United States},
    pages = {130--134},
    posted-at = {2010-01-13 07:27:30},
    priority = {0},
    publisher = {ACM},
    title = {{Individual learning styles and computer science education}},
    url = {http://dx.doi.org/10.1145/800191.805553},
    year = {1976}
}

